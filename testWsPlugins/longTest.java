
// *********************************************************************************************
//
// Automatically Generated Load Test Program
// -----------------------------------------
//
// Source: longTest.java
// Date  : 24 Oct 2016 13:23:35 ECT
// Author: Apica ZebraTester V5.4-R / automatically generated
//
// Procedure Copyright by Ingenieurbuero David Fischer AG  |  A Company of the Apica Group
// All Rights Reserved
//
// http://www.apicasystem.com                                         http://www.zebratester.com
// *********************************************************************************************


import java.io.*;
import java.util.*;
import java.util.concurrent.atomic.*;
import dfischer.utils.AbstractInputFileReader;
import dfischer.utils.Base64Decoder;
import dfischer.utils.Base64Encoder;
import dfischer.utils.ConvertToDoubleNumber;
import dfischer.utils.ContentTokenExtractor;
import dfischer.utils.ContentTokenExtractorItem;
import dfischer.utils.Cookie;
import dfischer.utils.CookieHandler;
import dfischer.utils.DigestAuthContext;
import dfischer.utils.DNSCache;
import dfischer.utils.DNSTranslationTable;
import dfischer.utils.DynamicProtobufContentParser;
import dfischer.utils.ExternalParamFile;
import dfischer.utils.FileCache;
import dfischer.utils.GenericPluginInterface;
import dfischer.utils.GetRealTimeUserInputFieldsInterface;
import dfischer.utils.HtmlContentParser;
import dfischer.utils.HtmlHeaderCookieExtractor;
import dfischer.utils.HttpLoadTest;
import dfischer.utils.HttpLoadTestIncrementUserThread;
import dfischer.utils.HttpLoadTestUserContext;
import dfischer.utils.HttpSocketPool;
import dfischer.utils.HttpTestURL;
import dfischer.utils.HttpTestURLDNSContext;
import dfischer.utils.HttpTestURLThreadHandler;
import dfischer.utils.InlineScriptExecutionException;
import dfischer.utils.InlineScriptExecutor;
import dfischer.utils.InnerLoopContext;
import dfischer.utils.Lib;
import dfischer.utils.LoadtestInlineScriptContext;
import dfischer.utils.LoadtestInlineScriptVar;
import dfischer.utils.LoadtestPluginClassLoader;
import dfischer.utils.LoadtestPluginContext;
import dfischer.utils.NextProxyConfig;
import dfischer.utils.ParseArgs;
import dfischer.utils.ParseUrl;
import dfischer.utils.PerformanceData;
import dfischer.utils.PerformanceDataTickExtension;
import dfischer.utils.ProtobufFieldAndValueElement;
import dfischer.utils.ProtobufLib;
import dfischer.utils.RealTimeUserInputField;
import dfischer.utils.ScreenshotImage;
import dfischer.utils.SetThreadStepInterface;
import dfischer.utils.SSLInit;
import dfischer.utils.SSLSessionCacheStatistic;
import dfischer.utils.SSLSessionCacheStatisticInterface;
import dfischer.utils.SuspendResumeInterface;
import dfischer.utils.TextLineTokenExtractor;
import dfischer.utils.TextLineTokenExtractorItem;
import dfischer.utils.ThreadStepInterface;
import dfischer.utils.UserInputField;
import dfischer.utils.UserTransactionContext;
import dfischer.utils.UserTransactionRuntimeHandler;
import dfischer.utils.VarInputFileReader;
import dfischer.utils.VarRandomInputFileReader;
import dfischer.utils.VaryingLoadInterface;
import dfischer.utils.VaryingTestDurationInterface;
import dfischer.utils.XmlContentParser;
import dfischer.utils.XmlDoctypeCommentParser;
import dfischer.utils.ZoneTime;
import dfischer.proxysniffer.ProxySnifferVarSourceInlineScript;
import dfischer.utils.WebSocketPluginInterface;
import dfischer.utils.BoundaryBasedExtractor;
import dfischer.utils.BoundaryBasedExtractorItem;
import dfischer.utils.RegExpBasedExtractor;
import dfischer.utils.RegExpBasedExtractorItem;
import dfischer.utils.XpathBasedExtractor;
import dfischer.utils.XpathBasedExtractorItem;
import dfischer.proxysniffer.WebSocketData;
import dfischer.utils.HttpTestWebsocketContext;
import dfischer.websocket.*;


/**
 * Automatically generated load test program.
 */
public class longTest extends HttpLoadTest implements Runnable, ThreadStepInterface, SetThreadStepInterface, SSLSessionCacheStatisticInterface, VaryingLoadInterface, VaryingTestDurationInterface, SuspendResumeInterface, GetRealTimeUserInputFieldsInterface
{
	public static final String prxVersion = "V5.4-R";
	public static final int    prxCharEncoding = 2;                         // 1 = OS Default, 2 = ISO-8859-1, 3 = UTF-8
	public static final String testDescription = "";

	public static String USER_AGENT_1 = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:49.0) Gecko/20100101 Firefox/49.0";

	private static final boolean CONTAINS_PARALLEL_EXECUTED_URLS = false;
	private static final int MAX_PARALLEL_THREADS_PER_USER = 6;                       // default value for max. parallel executed URLs per user
	private static int maxParallelThreadsPerUser = MAX_PARALLEL_THREADS_PER_USER;     // configured value for max. parallel executed URLs per user

	private static final boolean CONTAINS_EXTERNAL_RESOURCES = false;       // note: external resources are typically additional Java library files (*.jar files) invoked by self-developed plug-ins. Consider that Input Files and the Main Class of Plug-Ins are NOT external resources in this context because ZebraTester knows already their declarations.

	// --- WebSocket Object ---
	WebSocketData webSocketData = null;                                     // WebSocket Object that contains data of recorded WebSocket frames.
	private static int plannedStartupDelay = 200;                           // startup delay between concurrent users in milliseconds, see main argument "-sdelay"
	private static int plannedTestDuration = -1;                            // planned load test duration in seconds, 0 = unlimited, see main argument "-d"
	private static int maxPlannedLoops = 0;  								   // maximum planned loops per user, 0 = unlimited, see main argument "-maxloops"
	private static int plannedRequestTimeout = 0;                           // planned request timeout in seconds, see main argument "-t"
	private static int plannedConnectTimeout = 0;                           // planned TCP/IP socket connect timeout in seconds (default = use plannedRequestTimeout), see main argument "-tconnect"
	
	private static String defaultTimeZone = "ECT";                          // use main argument -tz <timezone> to alter
	private static char defaultNumberGroupingSeparator = '\'';              // use main argument -dgs a|c to alter
	private static String sslProtocolVersion = "all";                       // applied ssl protocol version: "all" = v3/tls/tls11/tls12, use main argument -ssl to set a fixed protocol version
	private static boolean sslcmode = false;                                // support of deficient ssl servers, use main argument -sslcmode to enable
	private static boolean sslECC = false;                                  // elliptic curve cryptography (ECC) is disabled by default, use main argument -ecc to enable
	private static boolean sslSNI = true;                                   // server name indication (SNI) is enabled by default, use main argument -nosni to disable
	private static boolean sslSNICirical = false;                           // the SNI TLS extension is by default set as non-critical, use main argument -snicritical to set as critical
	private static final long loopErrorDelay = 20;                          // error delay (in milliseconds) applied if a loop of a virtual user has failed
	private static final String THREAD_NAME = "T000000";                    // internal
	private static Integer dumpLock = new Integer(0);                       // internal
	private static Integer inputFileLock = new Integer(0);                  // internal
	private volatile int threadStep = ThreadStepInterface.THREAD_NO_STEP;   // internal
	private boolean urlCallPassed = false;                                  // internal
	private String localIpAddress = null;                                   // internal
	private static long downlinkBandwidth = 0;                              // max. downlink bandwidth per user. 0 = unlimited. use main argument -downlink <kbps> to alter
	private static long uplinkBandwidth = 0;                                // max. uplink bandwidth per user. 0 = unlimited. use main argument -uplink <kbps> to alter
	private static boolean dnsPerLoop = false;								// true if main argument "-dnsperloop" is set = perform new DNS resolves for each executed loop. normally false
	private HttpTestURLDNSContext userDNSContext = null;                    // user specific DNS context - normally null when no special DNS servers are used
	
	private static volatile boolean debugFailedLoops = false;               // true if main argument "-dfl" is set
	private static volatile boolean debugLoops = false;                     // true if main argument "-dl" is set
	private static volatile boolean debugHttp = false;                      // true if main argument "-dh" is set
	private static volatile boolean debugContent = false;                   // true if main argument "-dc" is set
	private static volatile boolean debugCookies = false;                   // true if main argument "-dC" is set
	private static volatile boolean debugKeepAlive = false;                 // true if main argument "-dK" is set
	private static volatile boolean debugSsl = false;                       // true if main argument "-dssl" is set
	
	private static String resultFile = null;                                // name of binary test result file or null
	
	private final static String httpProtocolVersion = "1.1";      // applied HTTP protocol version V1.1
	
	private static ExternalParamFile externalParamFile = null;                              // used only for very large parameter values (commonly unused)
	private static final String EXTERNAL_PARAM_FILE = "longTestExtParams.dat";              // input file name for very large parameter values
	private static FileCache requestFileCache = new FileCache();  // file cache for large XML, SOAP and ASCII requests
	
	private int requestTimeout = -1;                              // thread input data from constructor, timeout per url request in seconds
	private int remainingLoops = -1;                              // thread input data from constructor, number of loops per thread (optional)
	private boolean checkLoopCount = false;                       // thread input data from constructor, number of loops per thread (optional)
	private int threadNumber = -1;                                // thread input data from constructor, internal thread number
	private int threadLoopCounter = 0;                            // internal loop counter per thread
	private volatile int userResumeStartWaitDelay = 0;            // internal, user specific delay when the load test execution is resumed
	private volatile boolean decrementEndOfLoopFlag = false;	  // internal flag to decrement the simulated user at runtime
	private volatile boolean incrementUserFlag = false;           // internal flag to increment the simulated user at runtime
	private volatile long incrementUserStartTime = -1;            // internal start time when increment the simulated user at runtime
	private static AtomicInteger totalLoopCounter = new AtomicInteger(0);    // internal overall loop counter

	private LoadtestPluginContext userPluginContext = null;       // plug-in context per user
	private LoadtestInlineScriptContext inlineScriptContext = null;          // re-used, scratch, the returned context of an inline script that runs at item or URL exec scope

	private Object sslSessionCache = null;                        // internal ssl session cache per thread
	private SSLSessionCacheStatistic sslStatistic = null;         // internal ssl session cache statistic per thread
	private static int sslSessionCacheTimeout = 300;              // timeout of ssl session cache in seconds, 0 = session cache disabled
	private static int sslHandshakeRandomGeneratorType = -1;      // invalid initial value, use the default secure random generator for SSL handshakes
	private HttpSocketPool socketPool = null;                     // re-used, scratch, internal socket pool per thread and loop
	private CookieHandler cookieHandler = null;                   // re-used, scratch, internal cookie handler per thread and loop

	private HttpTestURL testURL = null;                           // re-used, scratch, http request and response
	private HttpTestURLThreadHandler pageThreadHandler = null;    // re-used, scratch, support for parallel processing of http request within a page
	private int httpStatus = -1;                                  // re-used, scratch, http response status code from webserver
	private HtmlContentParser htmlContentParser = null;           // re-used, scratch, used to extract vars from http response
	private XmlContentParser xmlContentParser = null;             // re-used, scratch, used to extract vars from http response
	private DynamicProtobufContentParser protobufContentParser = null;  // re-used, scratch, used to extract vars from http response
	private TextLineTokenExtractor textLineTokenExtractor = null; // re-used, scratch, used to extract vars from http response
	private ContentTokenExtractor contentTokenExtractor = null;   // re-used, scratch, used to extract vars from http response
	private BoundaryBasedExtractor boundaryBasedExtractor = null;   // re-used, scratch, used to extract vars from http response
	private RegExpBasedExtractor regExpBasedExtractor = null;   // re-used, scratch, used to extract vars from http response
	private XpathBasedExtractor xpathBasedExtractor = null;   // re-used, scratch, used to extract vars from http response
	
	private volatile UserTransactionRuntimeHandler transactionHandler = new UserTransactionRuntimeHandler();		// re-used, support to manage user-defined transactions


	/**
	 * constructor: called from load test plug-ins (scope = global).
	 */
	public longTest()
	{
		super();
	}


	/**
	 * constructor: called when a user is created (per user).
	 */
	public longTest(int maxLoops, int requestTimeout, int threadNumber)
	{
		super();
		this.requestTimeout = requestTimeout;
		this.remainingLoops = maxLoops;
		this.checkLoopCount = (maxLoops > 0);
		this.threadNumber = threadNumber;
		this.sslSessionCache = SSLInit.getNewSslSessionCache(sslSessionCacheTimeout);
		this.sslStatistic = new SSLSessionCacheStatistic();
		if (isMultihomed() && (!ipPerLoop()))
			this.localIpAddress = getNextMultihomedIpAddress();
		if (dnsCache != null)
			userDNSContext = new HttpTestURLDNSContext(dnsCache, threadNumber);
		
		// initialize context for plug-ins which are executed per user
		userPluginContext = new LoadtestPluginContext(prxVersion, prxCharEncoding, this, threadNumber);
	}


	/**
	 * internal method: called when a user starts a loop.
	 * contains the recorded session which is called by users x loops.
	 * 
	 * @param totalLoopCounter total number of loops (0..n-1) counted overall threads. This value is unique per loop.
	 * 
	 * @return  true:  loop successful completed.
	 *          false: loop failed.
	 */
	private boolean execute(int totalLoopCounter) throws Exception
	{
		markStartOfLoop();
		threadStep = 0;                 // internal - start loop at thread step 0
		
		// enable DNS resolves per loop?
		if (dnsPerLoop)
			userDNSContext = new HttpTestURLDNSContext(dnsCache.clone(false), threadNumber);
		
		// debug http headers?
		Object httpLogVectorObject = null;
		if (debugHttp)
			httpLogVectorObject = this;
		
		// create socket pool per loop
		sslSessionCache = SSLInit.getNewSslSessionCache(sslSessionCacheTimeout);		// reset the SSL session cache to get new SSL session IDs for this loop
		socketPool = new HttpSocketPool(this, sslProtocolVersion, sslSessionCache, sslStatistic, sslcmode);
		if (plannedConnectTimeout > 0)
			socketPool.setConnectTimeout(plannedConnectTimeout);
		if (sslHandshakeRandomGeneratorType != -1)
			socketPool.setSslHandshakeRandomGeneratorType(sslHandshakeRandomGeneratorType);
		socketPool.setSupportEllipticCurves(sslECC);
		socketPool.setHintUseSNI(sslSNI);
		socketPool.setSniCritical(sslSNICirical);
		if (debugKeepAlive)
		{
			socketPool.setlogVectorObject(this);
			if (debugSsl)
				socketPool.enableSslLog();
		}
		
		if (downlinkBandwidth > 0)
			socketPool.setDownlinkBandwidth(downlinkBandwidth);
		if (uplinkBandwidth > 0)
			socketPool.setUplinkBandwidth(uplinkBandwidth);
		
		if (isMultihomed())
		{
			if (ipPerLoop())
				localIpAddress = getNextMultihomedIpAddress();
			socketPool.setClientIpAddress(localIpAddress);
			log();
			log("multihomed client ip address = " + localIpAddress);
		}
		
		// setup cookie handler per loop
		cookieHandler = new CookieHandler();
		if (debugCookies)
			cookieHandler.setLogVectorInterface(this);
		
		// customised vars from web admin var handler: scope = per loop
		htmlContentParser = null;
		xmlContentParser = null;
		protobufContentParser = null;
		
		// initialize context for plug-ins which are executed per loop
		LoadtestPluginContext loopPluginContext = new LoadtestPluginContext(prxVersion, prxCharEncoding, this, threadNumber, socketPool, cookieHandler);
		



		// --- VIRTUAL PAGE #0 ---
		if (!executePage_0(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
			return false;



		// --- PAGE BREAK: Test [0] ---
		log();
		log();
		log("# Page #1: Start Page");
		log("# -------------------");
		threadStep = setPageBreak(performanceData, threadStep, "Page #1: Start Page", 0, 0, -1);		// hint: param #4 is the user's think time in milliseconds, param #5 is randomness of the user's think time in percent (+/- 0..100%), param #6 is the maximum acceptable response time in milliseconds (-1 = not configured)
		pageThreadHandler = new HttpTestURLThreadHandler(threadStep - 1, maxParallelThreadsPerUser, performanceData, this);   // support for parallel processing of http(s) requests within a page. hint: param #2 is the number of parallel threads per user
		log();

		if (!executePage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_2(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_3(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_4(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_5(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_6(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_7(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_8(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_9(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_10(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_11(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_12(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_13(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_14(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_15(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_16(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_17(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_18(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_19(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_20(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_21(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_22(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_23(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_24(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!executePage_1_25(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
		{
			// execution of page 1 failed
			synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject);
			return false;
		}
		if (!synchResponsesParallelRequestsPage_1(totalLoopCounter, loopPluginContext, new InnerLoopContext(), httpLogVectorObject))
			return false;		// execution of page 1 failed
		
		// page 1 successfully executed
		pageThreadHandler.addPageResponseTimeToResult(this);
		
		
		// loop successful done
		// --------------------
		
		markEndOfPage(performanceData);
		
		endOfExecuteLoop(true, null, -1, loopPluginContext);
		log();
		return true;
	}		// end of execute()
		
		
		
	/**
	 * internal method: called when a user has completed a loop.
	 */
	private void endOfExecuteLoop(boolean loopPassed, HttpTestURL testURL, int threadStep, LoadtestPluginContext loopPluginContext) throws Exception
	{
		// log URL if last call has failed
		if ((!loopPassed) && (testURL != null))
			log(testURL);
		
		// update plugin context
		loopPluginContext.setLoopPassed(loopPassed);
		if ((testURL != null) && (loopPluginContext.getHttpTestURL() == null))
			loopPluginContext.setHttpTestURL(testURL);
		if ((threadStep != -1) && (loopPluginContext.getThreadStep() == -1))
			loopPluginContext.setThreadStep(threadStep);
	}


	/**
	 * Recorded http requests of page #0.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_0(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{

		// all http requests of page #0 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// # Page #1: Start Page
		// # -------------------



		// --- HTTP REQUEST: Test [1] <- WEB ADMIN Index 1 ---
		String requestProt0001 = "https";
		String requestHost0001 = "services.addons.mozilla.org";
		int    requestPort0001 = 443;
		String requestFile0001 = "/en-GB/firefox/api/1.5/search/guid:prxrecext2%40d-fischer.com,%7B3e9a3920-1b27-11da-8cd6-0800200c9a66%7D,websocketmonitor%40getfirebug.com,e10srollout%40mozilla.org,firefox%40getpocket.com,webcompat%40mozilla.org,%7B972ce4c6-7e08-4474-a285-3208198ce6fd%7D" +
				"?src=firefox" +
				"&appOS=Darwin" +
				"&appVersion=49.0.2";
		String requestHeader0001 = "GET " + requestFile0001 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: services.addons.mozilla.org\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0001, requestHost0001, requestPort0001, requestHeader0001, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0001 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/XML", header text fragment = [verification disabled], recorded content size = 2190
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/XML", null, "Configures Mozilla Firefox for use with Charles Web Debugging Proxy.");		// Test [1] <- Index 1
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [2] <- WEB ADMIN Index 2 ---
		String requestProt0002 = "https";
		String requestHost0002 = "tiles.services.mozilla.com";
		int    requestPort0002 = 443;
		String requestFile0002 = "/v3/links/fetch/en-GB/release";
		String requestHeader0002 = "GET " + requestFile0002 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: tiles.services.mozilla.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Content-Type: application/json\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0002, requestHost0002, requestPort0002, requestHeader0002, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0002 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 303, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {303}, null, null, null);		// Test [2] <- Index 2
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [3] <- WEB ADMIN Index 3 ---
		String requestProt0003 = "https";
		String requestHost0003 = "shavar.services.mozilla.com";
		int    requestPort0003 = 443;
		String requestFile0003 = "/downloads" +
				"?client=navclient-auto-ffox" +
				"&appver=49.0" +
				"&pver=2.2";
		String requestContent0003 = 
				"mozplugin-block-digest256;a:1471849627" + "\r\n" + 
				"mozstd-track-digest256;a:1471874828" + "\r\n" + 
				"mozstd-trackwhite-digest256;a:1472162826";
		String requestHeader0003 = "POST " + requestFile0003 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: shavar.services.mozilla.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Content-Length: " + requestContent0003.length() + "\r\n" + 		// Content-Length: 116
				"Content-Type: text/plain\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Pragma: no-cache\r\n" + 
				"Cache-Control: no-cache\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0003, requestHost0003, requestPort0003, requestHeader0003, requestContent0003.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0003 = null;		// support garbage collector to reduce memory
		requestContent0003 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/OCTET-STREAM", header text fragment = [verification disabled], recorded content size = 7
		// content test algorithm: check size +/- 5%, defined content size = 7
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/OCTET-STREAM", null, 7, 5);		// Test [3] <- Index 3
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [4] <- WEB ADMIN Index 4 ---
		String requestProt0004 = "https";
		String requestHost0004 = "www.google.com";
		int    requestPort0004 = 443;
		String requestFile0004 = "/complete/search" +
				"?client=firefox" +
				"&q=cnn";
		String requestHeader0004 = "GET " + requestFile0004 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.google.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0004, requestHost0004, requestPort0004, requestHeader0004, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0004 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 102
		// content test algorithm: check size +/- 5%, defined content size = 102
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 102, 5);		// Test [4] <- Index 4
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [5] <- WEB ADMIN Index 5 ---
		String requestProt0005 = "http";
		String requestHost0005 = "www.cnn.com";
		int    requestPort0005 = 80;
		String requestFile0005 = "/";
		String requestHeader0005 = "GET " + requestFile0005 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0005, requestHost0005, requestPort0005, requestHeader0005, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0005 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [5] <- Index 5
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [6] <- WEB ADMIN Index 6 ---
		log();
		log("# title: CNN - Breaking News, U.S., World, Weather, Entertainment & Video News");
		String requestProt0006 = "http";
		String requestHost0006 = "edition.cnn.com";
		int    requestPort0006 = 80;
		String requestFile0006 = "/";
		String requestHeader0006 = "GET " + requestFile0006 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0006, requestHost0006, requestPort0006, requestHeader0006, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0006 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 32454
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Clashes erupt in migrant camp before eviction");		// Test [6] <- Index 6
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [7] <- WEB ADMIN Index 8 ---
		String requestProt0007 = "https";
		String requestHost0007 = "self-repair.mozilla.org";
		int    requestPort0007 = 443;
		String requestFile0007 = "/en-GB/repair";
		String requestHeader0007 = "GET " + requestFile0007 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: self-repair.mozilla.org\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0007, requestHost0007, requestPort0007, requestHeader0007, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0007 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 294
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "data-classify-url=\"/api/v1/classify_client/\"");		// Test [7] <- Index 7
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [8] <- WEB ADMIN Index 10 ---
		String requestProt0008 = "http";
		String requestHost0008 = "edition.cnn.com";
		int    requestPort0008 = 80;
		String requestFile0008 = "/data/ocs/section/index.html:intl_homepage1-zone-2/views/zones/common/zone-manager.html";
		String requestHeader0008 = "GET " + requestFile0008 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0008, requestHost0008, requestPort0008, requestHeader0008, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0008 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 3303
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "How to reduce risk of sudden infant death syndrome");		// Test [8] <- Index 8
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [9] <- WEB ADMIN Index 11 ---
		String requestProt0009 = "http";
		String requestHost0009 = "edition.cnn.com";
		int    requestPort0009 = 80;
		String requestFile0009 = "/data/ocs/section/index.html:intl_homepage1-zone-4/views/zones/common/zone-manager.html";
		String requestHeader0009 = "GET " + requestFile0009 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0009, requestHost0009, requestPort0009, requestHeader0009, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0009 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 2314
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Child predator caught by tiny clue in photo");		// Test [9] <- Index 9
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [10] <- WEB ADMIN Index 12 ---
		String requestProt0010 = "http";
		String requestHost0010 = "edition.cnn.com";
		int    requestPort0010 = 80;
		String requestFile0010 = "/data/ocs/section/index.html:intl_homepage2-zone-1/views/zones/common/zone-manager.html";
		String requestHeader0010 = "GET " + requestFile0010 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0010, requestHost0010, requestPort0010, requestHeader0010, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0010 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 2443
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Experts claim they've solved Bermuda Triangle mystery");		// Test [10] <- Index 10
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [11] <- WEB ADMIN Index 13 ---
		String requestProt0011 = "http";
		String requestHost0011 = "edition.cnn.com";
		int    requestPort0011 = 80;
		String requestFile0011 = "/data/ocs/section/index.html:intl_homepage3-zone-1/views/zones/common/zone-manager.html";
		String requestHeader0011 = "GET " + requestFile0011 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0011, requestHost0011, requestPort0011, requestHeader0011, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0011 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 2706
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Dark seas, vast skies and full sails");		// Test [11] <- Index 11
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [12] <- WEB ADMIN Index 14 ---
		String requestProt0012 = "http";
		String requestHost0012 = "edition.cnn.com";
		int    requestPort0012 = 80;
		String requestFile0012 = "/data/ocs/section/index.html:intl_homepage3-zone-2/views/zones/common/zone-manager.html";
		String requestHeader0012 = "GET " + requestFile0012 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0012, requestHost0012, requestPort0012, requestHeader0012, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0012 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [12] <- Index 12
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [13] <- WEB ADMIN Index 15 ---
		String requestProt0013 = "http";
		String requestHost0013 = "edition.cnn.com";
		int    requestPort0013 = 80;
		String requestFile0013 = "/data/ocs/section/index.html:intl_homepage3-zone-3/views/zones/common/zone-manager.html";
		String requestHeader0013 = "GET " + requestFile0013 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0013, requestHost0013, requestPort0013, requestHeader0013, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0013 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 3249
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Send your money Fee Free to Family abroad");		// Test [13] <- Index 13
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [14] <- WEB ADMIN Index 16 ---
		String requestProt0014 = "http";
		String requestHost0014 = "edition.cnn.com";
		int    requestPort0014 = 80;
		String requestFile0014 = "/data/ocs/section/index.html:intl_homepage1-zone-3/views/zones/common/zone-manager.html";
		String requestHeader0014 = "GET " + requestFile0014 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0014, requestHost0014, requestPort0014, requestHeader0014, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0014 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 3093
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Walls to keep out immigrants helps terrorists");		// Test [14] <- Index 14
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [15] <- WEB ADMIN Index 17 ---
		String requestProt0015 = "http";
		String requestHost0015 = "edition.cnn.com";
		int    requestPort0015 = 80;
		String requestFile0015 = "/data/ocs/section/index.html:intl_homepage3-zone-4/views/zones/common/zone-manager.html";
		String requestHeader0015 = "GET " + requestFile0015 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0015, requestHost0015, requestPort0015, requestHeader0015, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0015 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 1776
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Pirate radio risks death to fight ISIS on airwaves");		// Test [15] <- Index 15
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [16] <- WEB ADMIN Index 19 ---
		String requestProt0016 = "http";
		String requestHost0016 = "jadserve.postrelease.com";
		int    requestPort0016 = 80;
		String requestFile0016 = "/t" +
				"?ntv_url=http%3A%2F%2Fedition.cnn.com%2F";
		String requestHeader0016 = "GET " + requestFile0016 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0016, requestHost0016, requestPort0016, requestHeader0016, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0016 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 694
		// content test algorithm: check size +/- 5%, defined content size = 694
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 694, 5);		// Test [16] <- Index 16
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [17] <- WEB ADMIN Index 20 ---
		String requestProt0017 = "http";
		String requestHost0017 = "i2.cdn.turner.com";
		int    requestPort0017 = 80;
		String requestFile0017 = "/cnnnext/dam/assets/161021171113-obama-putin-new-cold-war-super-tease.jpg";
		String requestHeader0017 = "GET " + requestFile0017 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0017, requestHost0017, requestPort0017, requestHeader0017, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0017 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 131968
		// content test algorithm: check size +/- 5%, defined content size = 131968
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 131968, 5);		// Test [17] <- Index 17
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [18] <- WEB ADMIN Index 21 ---
		String requestProt0018 = "http";
		String requestHost0018 = "i2.cdn.turner.com";
		int    requestPort0018 = 80;
		String requestFile0018 = "/cnnnext/dam/assets/161021154826-savannasaurus-elliottorum-dinosaur-super-tease.jpg";
		String requestHeader0018 = "GET " + requestFile0018 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0018, requestHost0018, requestPort0018, requestHeader0018, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0018 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 187211
		// content test algorithm: check size +/- 5%, defined content size = 187211
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 187211, 5);		// Test [18] <- Index 18
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [19] <- WEB ADMIN Index 22 ---
		String requestProt0019 = "http";
		String requestHost0019 = "i2.cdn.turner.com";
		int    requestPort0019 = 80;
		String requestFile0019 = "/cnnnext/dam/assets/161019120824-iraq-mosul-isis-tunnels-damon-lkl-00020013-super-tease.jpg";
		String requestHeader0019 = "GET " + requestFile0019 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0019, requestHost0019, requestPort0019, requestHeader0019, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0019 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 196571
		// content test algorithm: check size +/- 5%, defined content size = 196571
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 196571, 5);		// Test [19] <- Index 19
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [20] <- WEB ADMIN Index 23 ---
		String requestProt0020 = "http";
		String requestHost0020 = "i2.cdn.turner.com";
		int    requestPort0020 = 80;
		String requestFile0020 = "/cnnnext/dam/assets/161017093533-mosul-2-super-tease.jpg";
		String requestHeader0020 = "GET " + requestFile0020 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0020, requestHost0020, requestPort0020, requestHeader0020, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0020 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 123180
		// content test algorithm: check size +/- 5%, defined content size = 123180
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 123180, 5);		// Test [20] <- Index 20
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_1.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_1(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 2 of 26)
		// -----------------------------------------



		// --- HTTP REQUEST: Test [21] <- WEB ADMIN Index 24 ---
		String requestProt0021 = "http";
		String requestHost0021 = "i2.cdn.turner.com";
		int    requestPort0021 = 80;
		String requestFile0021 = "/cnnnext/dam/assets/161022160121-radio-for-mosul-super-tease.jpg";
		String requestHeader0021 = "GET " + requestFile0021 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0021, requestHost0021, requestPort0021, requestHeader0021, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0021 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 61913
		// content test algorithm: check size +/- 5%, defined content size = 61913
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 61913, 5);		// Test [21] <- Index 21
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [22] <- WEB ADMIN Index 25 ---
		String requestProt0022 = "http";
		String requestHost0022 = "i2.cdn.turner.com";
		int    requestPort0022 = 80;
		String requestFile0022 = "/cnnnext/dam/assets/161023202431-bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan-00001016-super-tease.jpg";
		String requestHeader0022 = "GET " + requestFile0022 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0022, requestHost0022, requestPort0022, requestHeader0022, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0022 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 181286
		// content test algorithm: check size +/- 5%, defined content size = 181286
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 181286, 5);		// Test [22] <- Index 22
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [23] <- WEB ADMIN Index 26 ---
		String requestProt0023 = "http";
		String requestHost0023 = "i2.cdn.turner.com";
		int    requestPort0023 = 80;
		String requestFile0023 = "/cnnnext/dam/assets/161019173748-04-baby-born-twice-super-tease.jpg";
		String requestHeader0023 = "GET " + requestFile0023 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0023, requestHost0023, requestPort0023, requestHeader0023, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0023 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 91338
		// content test algorithm: check size +/- 5%, defined content size = 91338
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 91338, 5);		// Test [23] <- Index 23
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [24] <- WEB ADMIN Index 27 ---
		String requestProt0024 = "http";
		String requestHost0024 = "i2.cdn.turner.com";
		int    requestPort0024 = 80;
		String requestFile0024 = "/cnnnext/dam/assets/161021144242-05-cnnphotos-norwegian-singers-restricted-tease-medium-tease.jpg";
		String requestHeader0024 = "GET " + requestFile0024 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0024, requestHost0024, requestPort0024, requestHeader0024, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0024 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 23281
		// content test algorithm: check size +/- 5%, defined content size = 23281
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 23281, 5);		// Test [24] <- Index 24
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [25] <- WEB ADMIN Index 28 ---
		String requestProt0025 = "http";
		String requestHost0025 = "i2.cdn.turner.com";
		int    requestPort0025 = 80;
		String requestFile0025 = "/cnnnext/dam/assets/161023171144-01-bus-crash-california-1023-medium-tease.jpg";
		String requestHeader0025 = "GET " + requestFile0025 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0025, requestHost0025, requestPort0025, requestHeader0025, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0025 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 20114
		// content test algorithm: check size +/- 5%, defined content size = 20114
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 20114, 5);		// Test [25] <- Index 25
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [26] <- WEB ADMIN Index 29 ---
		String requestProt0026 = "http";
		String requestHost0026 = "i2.cdn.turner.com";
		int    requestPort0026 = 80;
		String requestFile0026 = "/cnnnext/dam/assets/160311105801-090604-medium-tease.jpg";
		String requestHeader0026 = "GET " + requestFile0026 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0026, requestHost0026, requestPort0026, requestHeader0026, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0026 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 22327
		// content test algorithm: check size +/- 5%, defined content size = 22327
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 22327, 5);		// Test [26] <- Index 26
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [27] <- WEB ADMIN Index 30 ---
		String requestProt0027 = "http";
		String requestHost0027 = "i2.cdn.turner.com";
		int    requestPort0027 = 80;
		String requestFile0027 = "/cnnnext/dam/assets/161023181729-the-walking-dead-returns-medium-tease.jpg";
		String requestHeader0027 = "GET " + requestFile0027 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0027, requestHost0027, requestPort0027, requestHeader0027, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0027 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 14829
		// content test algorithm: check size +/- 5%, defined content size = 14829
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 14829, 5);		// Test [27] <- Index 27
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [28] <- WEB ADMIN Index 31 ---
		String requestProt0028 = "http";
		String requestHost0028 = "i2.cdn.turner.com";
		int    requestPort0028 = 80;
		String requestFile0028 = "/cnnnext/dam/assets/161018162750-kevin-durant-gsw-nba-medium-tease.jpg";
		String requestHeader0028 = "GET " + requestFile0028 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0028, requestHost0028, requestPort0028, requestHeader0028, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0028 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7899
		// content test algorithm: check size +/- 5%, defined content size = 7899
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7899, 5);		// Test [28] <- Index 28
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [29] <- WEB ADMIN Index 32 ---
		String requestProt0029 = "http";
		String requestHost0029 = "i2.cdn.turner.com";
		int    requestPort0029 = 80;
		String requestFile0029 = "/cnnnext/dam/assets/161018190739-rafael-nadal-smiles-2014-medium-tease.jpg";
		String requestHeader0029 = "GET " + requestFile0029 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0029, requestHost0029, requestPort0029, requestHeader0029, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0029 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 11570
		// content test algorithm: check size +/- 5%, defined content size = 11570
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 11570, 5);		// Test [29] <- Index 29
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [30] <- WEB ADMIN Index 33 ---
		String requestProt0030 = "http";
		String requestHost0030 = "i2.cdn.turner.com";
		int    requestPort0030 = 80;
		String requestFile0030 = "/cnnnext/dam/assets/161017153635-cliff-diving-gal-1-medium-tease.jpg";
		String requestHeader0030 = "GET " + requestFile0030 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0030, requestHost0030, requestPort0030, requestHeader0030, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0030 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 22330
		// content test algorithm: check size +/- 5%, defined content size = 22330
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 22330, 5);		// Test [30] <- Index 30
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [31] <- WEB ADMIN Index 34 ---
		String requestProt0031 = "http";
		String requestHost0031 = "i2.cdn.turner.com";
		int    requestPort0031 = 80;
		String requestFile0031 = "/cnnnext/dam/assets/161017194606-38-what-a-shot-1018-medium-tease.jpg";
		String requestHeader0031 = "GET " + requestFile0031 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0031, requestHost0031, requestPort0031, requestHeader0031, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0031 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 16211
		// content test algorithm: check size +/- 5%, defined content size = 16211
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 16211, 5);		// Test [31] <- Index 31
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [32] <- WEB ADMIN Index 35 ---
		String requestProt0032 = "http";
		String requestHost0032 = "i2.cdn.turner.com";
		int    requestPort0032 = 80;
		String requestFile0032 = "/cnnnext/dam/assets/160927180609-carlo-borlenghi-curling-wave-medium-tease.jpg";
		String requestHeader0032 = "GET " + requestFile0032 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0032, requestHost0032, requestPort0032, requestHeader0032, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0032 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 21942
		// content test algorithm: check size +/- 5%, defined content size = 21942
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 21942, 5);		// Test [32] <- Index 32
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [33] <- WEB ADMIN Index 36 ---
		String requestProt0033 = "http";
		String requestHost0033 = "i2.cdn.turner.com";
		int    requestPort0033 = 80;
		String requestFile0033 = "/cnnnext/dam/assets/161004151112-leno-gal-8-medium-tease.jpg";
		String requestHeader0033 = "GET " + requestFile0033 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0033, requestHost0033, requestPort0033, requestHeader0033, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0033 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 23707
		// content test algorithm: check size +/- 5%, defined content size = 23707
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 23707, 5);		// Test [33] <- Index 33
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [34] <- WEB ADMIN Index 37 ---
		String requestProt0034 = "http";
		String requestHost0034 = "secure-us.imrworldwide.com";
		int    requestPort0034 = 80;
		String requestFile0034 = "/cgi-bin/m" +
				"?ci=us-204044h" +
				"&cg=0" +
				"&cc=1" +
				"&si=http%3A//edition.cnn.com/" +
				"&rp=" +
				"&ts=compact" +
				"&rnd=1477307052396";
		String requestHeader0034 = "GET " + requestFile0034 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: secure-us.imrworldwide.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0034, requestHost0034, requestPort0034, requestHeader0034, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0034 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 44
		// content test algorithm: check size +/- 5%, defined content size = 44
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 44, 5);		// Test [34] <- Index 34
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [35] <- WEB ADMIN Index 38 ---
		String requestProt0035 = "http";
		String requestHost0035 = "metrics.cnn.com";
		int    requestPort0035 = 80;
		String requestFile0035 = "/b/ss/cnn-adbp-intl/1/H.26.1/s74474392103749" +
				"?AQB=1" +
				"&ndh=1" +
				"&t=24%2F9%2F2016%2013%3A4%3A12%201%20-120" +
				"&fid=0DE0D1A7EC740073-0D35F412D19C24F3" +
				"&ce=UTF-8" +
				"&ns=cnn" +
				"&pageName=cnn%3Ain%3Aedition%3A%2F" +
				"&g=http%3A%2F%2Fedition.cnn.com%2F" +
				"&cc=USD" +
				"&ch=cnn%20homepage" +
				"&server=edition.cnn.com" +
				"&events=event26" +
				"&c5=nvs" +
				"&v5=D%3Dc5" +
				"&c8=repeat%3A2" +
				"&v8=D%3Dc8" +
				"&c9=nvs" +
				"&v9=D%3Dc9" +
				"&c13=section" +
				"&v13=D%3Dc13" +
				"&c17=anonymous" +
				"&v17=D%3Dc17" +
				"&c20=23" +
				"&v20=D%3Dc20" +
				"&v22=0" +
				"&c26=edition.cnn.com%2F" +
				"&v26=D%3DpageName" +
				"&v27=D%3Dch" +
				"&c28=cnn%20homepage%3Anvs" +
				"&v28=D%3Dc28" +
				"&v29=edition.cnn.com" +
				"&c30=cnn%20international" +
				"&v30=D%3Dc30" +
				"&c32=adbp%3Aindex" +
				"&v32=D%3Dc32" +
				"&c33=none" +
				"&v33=D%3Dc33" +
				"&c35=cnn.166.1-0-0.20161009%3A0" +
				"&v35=D%3Dc35" +
				"&c37=desktop" +
				"&v37=D%3Dc37" +
				"&c46=14773070514960706261364921" +
				"&v46=D%3Dc46" +
				"&c47=580de97e063d0a0a3c875a117700647f" +
				"&v47=D%3Dc47" +
				"&c56=landscape" +
				"&v56=D%3Dc56" +
				"&c57=no%20mvpd%20set" +
				"&v57=D%3Dc57" +
				"&c59=nvs" +
				"&v59=D%3Dc59" +
				"&c64=cnn%20news" +
				"&v64=D%3Dc64" +
				"&c65=nvs" +
				"&c73=960%20x%20950" +
				"&v73=D%3Dc73" +
				"&c75=nvs" +
				"&v75=D%3Dc75" +
				"&h1=news%7Ccnn%7Ccnn%20international%7Cedition.cnn.com%7Ccnn%20homepage%7Ccnn%20homepage%3Anvs" +
				"&l1=D%3Dc65" +
				"&s=1920x1080" +
				"&c=24" +
				"&j=1.8.5" +
				"&v=Y" +
				"&k=Y" +
				"&bw=960" +
				"&bh=950" +
				"&AQE=1";
		String requestHeader0035 = "GET " + requestFile0035 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: metrics.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0035, requestHost0035, requestPort0035, requestHeader0035, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0035 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [35] <- Index 35
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [36] <- WEB ADMIN Index 39 ---
		String requestProt0036 = "http";
		String requestHost0036 = "mab.chartbeat.com";
		int    requestPort0036 = 80;
		String requestFile0036 = "/mab_strategy/headline_testing/get_strategy/" +
				"?host=edition.cnn.com" +
				"&domain=edition.cnn.com" +
				"&path=%2F";
		String requestHeader0036 = "GET " + requestFile0036 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: mab.chartbeat.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0036, requestHost0036, requestPort0036, requestHeader0036, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0036 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 357
		// content test algorithm: check size +/- 5%, defined content size = 357
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 357, 5);		// Test [36] <- Index 36
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [37] <- WEB ADMIN Index 41 ---
		String requestProt0037 = "http";
		String requestHost0037 = "jadserve.postrelease.com";
		int    requestPort0037 = 80;
		String requestFile0037 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303,302" +
				"&ntv_a=AAAAAAAAAAdF0LA" +
				"&ord=1477307053228" +
				"&ntv_it";
		String requestHeader0037 = "GET " + requestFile0037 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0037, requestHost0037, requestPort0037, requestHeader0037, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0037 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [37] <- Index 37
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [38] <- WEB ADMIN Index 42 ---
		String requestProt0038 = "http";
		String requestHost0038 = "i2.cdn.turner.com";
		int    requestPort0038 = 80;
		String requestFile0038 = "/cnnnext/dam/assets/161018190739-rafael-nadal-smiles-2014-medium-tease.jpg";
		String requestHeader0038 = "GET " + requestFile0038 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0038, requestHost0038, requestPort0038, requestHeader0038, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0038 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 11570
		// content test algorithm: check size +/- 5%, defined content size = 11570
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 11570, 5);		// Test [38] <- Index 38
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [39] <- WEB ADMIN Index 43 ---
		String requestProt0039 = "http";
		String requestHost0039 = "i2.cdn.turner.com";
		int    requestPort0039 = 80;
		String requestFile0039 = "/cnnnext/dam/assets/161018162750-kevin-durant-gsw-nba-medium-tease.jpg";
		String requestHeader0039 = "GET " + requestFile0039 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0039, requestHost0039, requestPort0039, requestHeader0039, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0039 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7899
		// content test algorithm: check size +/- 5%, defined content size = 7899
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7899, 5);		// Test [39] <- Index 39
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [40] <- WEB ADMIN Index 44 ---
		String requestProt0040 = "http";
		String requestHost0040 = "i2.cdn.turner.com";
		int    requestPort0040 = 80;
		String requestFile0040 = "/cnnnext/dam/assets/161017153635-cliff-diving-gal-1-medium-tease.jpg";
		String requestHeader0040 = "GET " + requestFile0040 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0040, requestHost0040, requestPort0040, requestHeader0040, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0040 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 22330
		// content test algorithm: check size +/- 5%, defined content size = 22330
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 22330, 5);		// Test [40] <- Index 40
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_1 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_2.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_2(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 3 of 26)
		// -----------------------------------------



		// --- HTTP REQUEST: Test [41] <- WEB ADMIN Index 45 ---
		String requestProt0041 = "http";
		String requestHost0041 = "i2.cdn.turner.com";
		int    requestPort0041 = 80;
		String requestFile0041 = "/cnnnext/dam/assets/161017194606-38-what-a-shot-1018-medium-tease.jpg";
		String requestHeader0041 = "GET " + requestFile0041 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0041, requestHost0041, requestPort0041, requestHeader0041, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0041 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 16211
		// content test algorithm: check size +/- 5%, defined content size = 16211
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 16211, 5);		// Test [41] <- Index 41
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [42] <- WEB ADMIN Index 46 ---
		String requestProt0042 = "http";
		String requestHost0042 = "i2.cdn.turner.com";
		int    requestPort0042 = 80;
		String requestFile0042 = "/cnnnext/dam/assets/160927180609-carlo-borlenghi-curling-wave-medium-tease.jpg";
		String requestHeader0042 = "GET " + requestFile0042 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0042, requestHost0042, requestPort0042, requestHeader0042, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0042 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 21942
		// content test algorithm: check size +/- 5%, defined content size = 21942
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 21942, 5);		// Test [42] <- Index 42
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [43] <- WEB ADMIN Index 47 ---
		String requestProt0043 = "http";
		String requestHost0043 = "i2.cdn.turner.com";
		int    requestPort0043 = 80;
		String requestFile0043 = "/cnnnext/dam/assets/161004151112-leno-gal-8-medium-tease.jpg";
		String requestHeader0043 = "GET " + requestFile0043 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0043, requestHost0043, requestPort0043, requestHeader0043, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0043 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 23707
		// content test algorithm: check size +/- 5%, defined content size = 23707
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 23707, 5);		// Test [43] <- Index 43
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [44] <- WEB ADMIN Index 48 ---
		String requestProt0044 = "https";
		String requestHost0044 = "self-repair.mozilla.org";
		int    requestPort0044 = 443;
		String requestFile0044 = "/api/v1/recipe/" +
				"?enabled=true";
		String requestHeader0044 = "GET " + requestFile0044 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: self-repair.mozilla.org\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Origin: https://self-repair.mozilla.org\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0044, requestHost0044, requestPort0044, requestHeader0044, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0044 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 1144
		// content test algorithm: check size +/- 5%, defined content size = 1144
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 1144, 5);		// Test [44] <- Index 44
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [45] <- WEB ADMIN Index 49 ---
		String requestProt0045 = "http";
		String requestHost0045 = "flapi1.rubiconproject.com";
		int    requestPort0045 = 80;
		String requestFile0045 = "/a/api/fastlane.json" +
				"?account_id=11016" +
				"&site_id=78582" +
				"&zone_id=369850" +
				"&size_id=2" +
				"&p_pos=atf" +
				"&rp_floor=0.01" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_bnr_atf_01" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=bnr_atf_01" +
				"&rand=0.25356729547913015";
		String requestHeader0045 = "GET " + requestFile0045 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi1.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0045, requestHost0045, requestPort0045, requestHeader0045, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0045 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 322
		// content test algorithm: check size +/- 5%, defined content size = 322
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 322, 5);		// Test [45] <- Index 45
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [46] <- WEB ADMIN Index 50 ---
		String requestProt0046 = "http";
		String requestHost0046 = "flapi2.rubiconproject.com";
		int    requestPort0046 = 80;
		String requestFile0046 = "/a/api/fastlane.json" +
				"?account_id=11016" +
				"&site_id=78582" +
				"&zone_id=369850" +
				"&size_id=15" +
				"&p_pos=atf" +
				"&rp_floor=0.01" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_atf_01" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=rect_atf_01" +
				"&rand=0.6911297255622476";
		String requestHeader0046 = "GET " + requestFile0046 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi2.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0046, requestHost0046, requestPort0046, requestHeader0046, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0046 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 324
		// content test algorithm: check size +/- 5%, defined content size = 324
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 324, 5);		// Test [46] <- Index 46
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [47] <- WEB ADMIN Index 51 ---
		String requestProt0047 = "http";
		String requestHost0047 = "flapi1.rubiconproject.com";
		int    requestPort0047 = 80;
		String requestFile0047 = "/a/api/fastlane.json" +
				"?account_id=11016" +
				"&site_id=78582" +
				"&zone_id=369850" +
				"&size_id=15" +
				"&p_pos=btf" +
				"&rp_floor=0.01" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_btf_02" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=rect_btf_02" +
				"&rand=0.9499471135607936";
		String requestHeader0047 = "GET " + requestFile0047 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi1.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0047, requestHost0047, requestPort0047, requestHeader0047, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0047 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 324
		// content test algorithm: check size +/- 5%, defined content size = 324
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 324, 5);		// Test [47] <- Index 47
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [48] <- WEB ADMIN Index 52 ---
		String requestProt0048 = "http";
		String requestHost0048 = "flapi2.rubiconproject.com";
		int    requestPort0048 = 80;
		String requestFile0048 = "/a/api/fastlane.json" +
				"?account_id=11016" +
				"&site_id=78582" +
				"&zone_id=369850" +
				"&size_id=2" +
				"&p_pos=btf" +
				"&rp_floor=0.01" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_bnr_btf_04" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=bnr_btf_04" +
				"&rand=0.8691493691317543";
		String requestHeader0048 = "GET " + requestFile0048 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi2.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0048, requestHost0048, requestPort0048, requestHeader0048, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0048 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 326
		// content test algorithm: check size +/- 5%, defined content size = 326
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 326, 5);		// Test [48] <- Index 48
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [49] <- WEB ADMIN Index 53 ---
		String requestProt0049 = "http";
		String requestHost0049 = "optimized-by.rubiconproject.com";
		int    requestPort0049 = 80;
		String requestFile0049 = "/a/api/fastlane.json" +
				"?account_id=11016" +
				"&site_id=78582" +
				"&zone_id=369850" +
				"&size_id=15" +
				"&p_pos=btf" +
				"&rp_floor=0.01" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_btf_01" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=rect_btf_01" +
				"&rand=0.7917789578571163";
		String requestHeader0049 = "GET " + requestFile0049 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: optimized-by.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0049, requestHost0049, requestPort0049, requestHeader0049, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0049 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 324
		// content test algorithm: check size +/- 5%, defined content size = 324
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 324, 5);		// Test [49] <- Index 49
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [50] <- WEB ADMIN Index 54 ---
		String requestProt0050 = "http";
		String requestHost0050 = "flapi1.rubiconproject.com";
		int    requestPort0050 = 80;
		String requestFile0050 = "/a/api/fastlane.json" +
				"?account_id=12324" +
				"&site_id=47188" +
				"&zone_id=238164" +
				"&size_id=2" +
				"&p_pos=atf" +
				"&rp_floor=10" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_bnr_atf_01" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=bnr_atf_01" +
				"&rand=0.5489247931263112";
		String requestHeader0050 = "GET " + requestFile0050 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi1.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0050, requestHost0050, requestPort0050, requestHeader0050, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0050 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4722
		// content test algorithm: check size +/- 5%, defined content size = 4722
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4722, 5);		// Test [50] <- Index 50
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [51] <- WEB ADMIN Index 55 ---
		String requestProt0051 = "http";
		String requestHost0051 = "optimized-by.rubiconproject.com";
		int    requestPort0051 = 80;
		String requestFile0051 = "/a/api/fastlane.json" +
				"?account_id=12324" +
				"&site_id=47188" +
				"&zone_id=238164" +
				"&size_id=15" +
				"&p_pos=btf" +
				"&rp_floor=10" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_btf_01" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=rect_btf_01" +
				"&rand=0.3449339009907131";
		String requestHeader0051 = "GET " + requestFile0051 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: optimized-by.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0051, requestHost0051, requestPort0051, requestHeader0051, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0051 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4726
		// content test algorithm: check size +/- 5%, defined content size = 4726
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4726, 5);		// Test [51] <- Index 51
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [52] <- WEB ADMIN Index 56 ---
		String requestProt0052 = "http";
		String requestHost0052 = "flapi2.rubiconproject.com";
		int    requestPort0052 = 80;
		String requestFile0052 = "/a/api/fastlane.json" +
				"?account_id=12324" +
				"&site_id=47188" +
				"&zone_id=238164" +
				"&size_id=15" +
				"&p_pos=atf" +
				"&rp_floor=10" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_atf_01" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=rect_atf_01" +
				"&rand=0.9733254483340401";
		String requestHeader0052 = "GET " + requestFile0052 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi2.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0052, requestHost0052, requestPort0052, requestHeader0052, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0052 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4726
		// content test algorithm: check size +/- 5%, defined content size = 4726
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4726, 5);		// Test [52] <- Index 52
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [53] <- WEB ADMIN Index 57 ---
		String requestProt0053 = "http";
		String requestHost0053 = "flapi1.rubiconproject.com";
		int    requestPort0053 = 80;
		String requestFile0053 = "/a/api/fastlane.json" +
				"?account_id=12324" +
				"&site_id=47188" +
				"&zone_id=238164" +
				"&size_id=15" +
				"&p_pos=btf" +
				"&rp_floor=10" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_btf_02" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=rect_btf_02" +
				"&rand=0.2889838684871413";
		String requestHeader0053 = "GET " + requestFile0053 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi1.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0053, requestHost0053, requestPort0053, requestHeader0053, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0053 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4943
		// content test algorithm: check size +/- 5%, defined content size = 4943
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4943, 5);		// Test [53] <- Index 53
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [54] <- WEB ADMIN Index 58 ---
		String requestProt0054 = "http";
		String requestHost0054 = "flapi2.rubiconproject.com";
		int    requestPort0054 = 80;
		String requestFile0054 = "/a/api/fastlane.json" +
				"?account_id=12324" +
				"&site_id=47188" +
				"&zone_id=238164" +
				"&size_id=2" +
				"&p_pos=btf" +
				"&rp_floor=10" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2F" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_bnr_btf_04" +
				"&kw=CNNi%2Fhomepage%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=homepage" +
				"&tg_i.pos=bnr_btf_04" +
				"&rand=0.21262309548232572";
		String requestHeader0054 = "GET " + requestFile0054 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi2.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0054, requestHost0054, requestPort0054, requestHeader0054, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0054 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4722
		// content test algorithm: check size +/- 5%, defined content size = 4722
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4722, 5);		// Test [54] <- Index 54
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [55] <- WEB ADMIN Index 59 ---
		String requestProt0055 = "http";
		String requestHost0055 = "c.go-mpulse.net";
		int    requestPort0055 = 80;
		String requestFile0055 = "/boomerang/config.js" +
				"?key=3ELNE-XNZJH-GJW9A-GMCCC-HF5K6" +
				"&d=edition.cnn.com" +
				"&t=4924357" +
				"&v=1.246.1441122062" +
				"&if=" +
				"&sl=1" +
				"&si=13492985-28f0-44d0-bf59-32d514dae8a6-ofjt6l" +
				"&bcn=%2F%2F364bf52c.mpstat.us%2F" +
				"&plugins=GPT,ConfigOverride,PageParams,AutoXHR,SPA,Angular,Backbone,Ember,RT,BW,NavigationTiming,ResourceTiming,Memory,CACHE_RELOAD,LOGN";
		String requestHeader0055 = "GET " + requestFile0055 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: c.go-mpulse.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0055, requestHost0055, requestPort0055, requestHeader0055, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0055 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 2055
		// content test algorithm: check size +/- 5%, defined content size = 2055
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JAVASCRIPT", null, 2055, 5);		// Test [55] <- Index 55
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [56] <- WEB ADMIN Index 60 ---
		String requestProt0056 = "http";
		String requestHost0056 = "pixel.quantserve.com";
		int    requestPort0056 = 80;
		String requestFile0056 = "/pixel;r=85977641;a=p-D1yc5zQgjmqr5;ezt=1;labels=International.Edition.Homepage;fpan=0;fpa=P0-1198943827-1477306754078;ns=0;ce=1;cm=;je=1;sr=1920x1080x24;enc=n;dst=1;et=1477307053365;tzo=-120;ref=;url=http%3A%2F%2Fedition.cnn.com%2F;ogl=pubdate.2014-02-24T14%3A45%3A54Z%2Curl.http%3A%2F%2Fwww%252Ecnn%252Ecom%2Ctitle.CNN%20-%20Breaking%20News%252C%20U%252ES%252E%252C%20World%252C%20Weather%252C%20Entertainment%20%26%20Video%20News%2Cdescription.Find%20the%20latest%20breaking%20news%20and%20information%20on%20the%20top%20stories%252C%20weather%252C%20busin%2Csite_name.CNN%2Ctype.website";
		String requestHeader0056 = "GET " + requestFile0056 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pixel.quantserve.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0056, requestHost0056, requestPort0056, requestHeader0056, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0056 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 35
		// content test algorithm: check size +/- 5%, defined content size = 35
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 35, 5);		// Test [56] <- Index 56
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [57] <- WEB ADMIN Index 61 ---
		String requestProt0057 = "http";
		String requestHost0057 = "jadserve.postrelease.com";
		int    requestPort0057 = 80;
		String requestFile0057 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAAeF0LA" +
				"&ord=1477307053438" +
				"&ntv_it";
		String requestHeader0057 = "GET " + requestFile0057 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0057, requestHost0057, requestPort0057, requestHeader0057, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0057 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [57] <- Index 57
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [58] <- WEB ADMIN Index 62 ---
		String requestProt0058 = "http";
		String requestHost0058 = "vrt.outbrain.com";
		int    requestPort0058 = 80;
		String requestFile0058 = "/" +
				"?idsite=396" +
				"&url=http%3A%2F%2Fedition.cnn.com" +
				"&seen_url=http%3A%2F%2Fedition.cnn.com%2F" +
				"&t=CNN%20-%20Breaking%20News%2C%20U.S.%2C%20World%2C%20Weather%2C%20Entertainment%20%26%20Video%20News" +
				"&c=1477306754100ug55TLtBm3duDg4oCiUPG1Kq8V50F7nW" +
				"&zone=" +
				"&debug={%22frame%22:false,%22loadTime%22:5,%22timestamp%22:1477307053357,%22transport%22:%22cors%22}" +
				"&content_type=text/html" +
				"&v=52";
		String requestHeader0058 = "GET " + requestFile0058 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: vrt.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0058, requestHost0058, requestPort0058, requestHeader0058, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0058 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 2
		// content test algorithm: check size +/- 5%, defined content size = 2
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 2, 5);		// Test [58] <- Index 58
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [59] <- WEB ADMIN Index 63 ---
		String requestProt0059 = "http";
		String requestHost0059 = "hpr.outbrain.com";
		int    requestPort0059 = 80;
		String requestFile0059 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2F" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=HOP_14" +
				"&key=NANOWDGT01" +
				"&idx=0" +
				"&version=01001112" +
				"&ref=" +
				"&apv=false" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=89324" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false" +
				"&fbk=cnnEditionHpSport";
		String requestHeader0059 = "GET " + requestFile0059 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: hpr.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0059, requestHost0059, requestPort0059, requestHeader0059, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0059 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 6972
		// content test algorithm: check size +/- 5%, defined content size = 6972
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 6972, 5);		// Test [59] <- Index 59
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [60] <- WEB ADMIN Index 64 ---
		String requestProt0060 = "http";
		String requestHost0060 = "jadserve.postrelease.com";
		int    requestPort0060 = 80;
		String requestFile0060 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAAcV0LA" +
				"&ord=1477307053439" +
				"&ntv_it";
		String requestHeader0060 = "GET " + requestFile0060 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0060, requestHost0060, requestPort0060, requestHeader0060, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0060 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [60] <- Index 60
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_2 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_3.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_3(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 4 of 26)
		// -----------------------------------------



		// --- HTTP REQUEST: Test [61] <- WEB ADMIN Index 65 ---
		String requestProt0061 = "http";
		String requestHost0061 = "jadserve.postrelease.com";
		int    requestPort0061 = 80;
		String requestFile0061 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAA2lYLA" +
				"&ord=1477307053441" +
				"&ntv_it";
		String requestHeader0061 = "GET " + requestFile0061 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0061, requestHost0061, requestPort0061, requestHeader0061, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0061 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [61] <- Index 61
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [62] <- WEB ADMIN Index 66 ---
		String requestProt0062 = "http";
		String requestHost0062 = "jadserve.postrelease.com";
		int    requestPort0062 = 80;
		String requestFile0062 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAAdl0LA" +
				"&ord=1477307053442" +
				"&ntv_it";
		String requestHeader0062 = "GET " + requestFile0062 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0062, requestHost0062, requestPort0062, requestHeader0062, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0062 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [62] <- Index 62
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [63] <- WEB ADMIN Index 67 ---
		String requestProt0063 = "http";
		String requestHost0063 = "jadserve.postrelease.com";
		int    requestPort0063 = 80;
		String requestFile0063 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAAc10LA" +
				"&ord=1477307053446" +
				"&ntv_it";
		String requestHeader0063 = "GET " + requestFile0063 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0063, requestHost0063, requestPort0063, requestHeader0063, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0063 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [63] <- Index 63
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [64] <- WEB ADMIN Index 68 ---
		String requestProt0064 = "http";
		String requestHost0064 = "jadserve.postrelease.com";
		int    requestPort0064 = 80;
		String requestFile0064 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAAb10LA" +
				"&ord=1477307053444" +
				"&ntv_it";
		String requestHeader0064 = "GET " + requestFile0064 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0064, requestHost0064, requestPort0064, requestHeader0064, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0064 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [64] <- Index 64
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [65] <- WEB ADMIN Index 69 ---
		String requestProt0065 = "http";
		String requestHost0065 = "jadserve.postrelease.com";
		int    requestPort0065 = 80;
		String requestFile0065 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAAdV0LA" +
				"&ord=1477307053447" +
				"&ntv_it";
		String requestHeader0065 = "GET " + requestFile0065 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0065, requestHost0065, requestPort0065, requestHeader0065, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0065 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [65] <- Index 65
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [66] <- WEB ADMIN Index 70 ---
		String requestProt0066 = "http";
		String requestHost0066 = "b.scorecardresearch.com";
		int    requestPort0066 = 80;
		String requestFile0066 = "/r" +
				"?c2=6035748" +
				"&d.c=gif" +
				"&d.o=cnn-adbp-intl" +
				"&d.x=171886137" +
				"&d.t=page" +
				"&d.u=http%3A%2F%2Fedition.cnn.com%2F";
		String requestHeader0066 = "GET " + requestFile0066 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0066, requestHost0066, requestPort0066, requestHeader0066, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0066 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [66] <- Index 66
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [67] <- WEB ADMIN Index 71 ---
		String requestProt0067 = "http";
		String requestHost0067 = "jadserve.postrelease.com";
		int    requestPort0067 = 80;
		String requestFile0067 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAAcl0LA" +
				"&ord=1477307053449" +
				"&ntv_it";
		String requestHeader0067 = "GET " + requestFile0067 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0067, requestHost0067, requestPort0067, requestHeader0067, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0067 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [67] <- Index 67
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [68] <- WEB ADMIN Index 72 ---
		String requestProt0068 = "http";
		String requestHost0068 = "jadserve.postrelease.com";
		int    requestPort0068 = 80;
		String requestFile0068 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAAd10LA" +
				"&ord=1477307053451" +
				"&ntv_it";
		String requestHeader0068 = "GET " + requestFile0068 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0068, requestHost0068, requestPort0068, requestHeader0068, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0068 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [68] <- Index 68
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [69] <- WEB ADMIN Index 74 ---
		String requestProt0069 = "http";
		String requestHost0069 = "vrp.outbrain.com";
		int    requestPort0069 = 80;
		String requestFile0069 = "/" +
				"?transport=jsonp" +
				"&idsite=396" +
				"&url=http%3A%2F%2Fedition.cnn.com" +
				"&content_type=text/html" +
				"&callback=_vrq.jsonp.callbackFn";
		String requestHeader0069 = "GET " + requestFile0069 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: vrp.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0069, requestHost0069, requestPort0069, requestHeader0069, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0069 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 1939
		// content test algorithm: check size +/- 5%, defined content size = 1939
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 1939, 5);		// Test [69] <- Index 69
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [70] <- WEB ADMIN Index 75 ---
		String requestProt0070 = "http";
		String requestHost0070 = "jadserve.postrelease.com";
		int    requestPort0070 = 80;
		String requestFile0070 = "/trk.gif" +
				"?ntv_ht=q-oNWAA" +
				"&ntv_at=303" +
				"&ntv_a=AAAAAAAAAAcF0LA" +
				"&ord=1477307053452" +
				"&ntv_it";
		String requestHeader0070 = "GET " + requestFile0070 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0070, requestHost0070, requestPort0070, requestHeader0070, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0070 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [70] <- Index 70
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [71] <- WEB ADMIN Index 76 ---
		String requestProt0071 = "http";
		String requestHost0071 = "weather.api.cnn.io";
		int    requestPort0071 = 80;
		String requestFile0071 = "/graphql" +
				"?query=%7BwsiForecast(locCode%3A%22UKXX0085%22%2Ccelcius%3A%22true%22)%7BcurrentConditions%7Btemperature%2Cdescription%2Cicon%7D%2Clocation%7Bcity%2CstateOrCountry%7D%7D%7D";
		String requestHeader0071 = "GET " + requestFile0071 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: weather.api.cnn.io\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json, text/javascript, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0071, requestHost0071, requestPort0071, requestHeader0071, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0071 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 150
		// content test algorithm: check size +/- 5%, defined content size = 150
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 150, 5);		// Test [71] <- Index 71
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [72] <- WEB ADMIN Index 77 ---
		String requestProt0072 = "http";
		String requestHost0072 = "ad.doubleclick.net";
		int    requestPort0072 = 80;
		String requestFile0072 = "/ddm/ad/qh0/sa6vqtw3e6/;ord=1477307054050?";
		String requestHeader0072 = "GET " + requestFile0072 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ad.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0072, requestHost0072, requestPort0072, requestHeader0072, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0072 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [72] <- Index 72
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [73] <- WEB ADMIN Index 78 ---
		String requestProt0073 = "http";
		String requestHost0073 = "images.outbrain.com";
		int    requestPort0073 = 80;
		String requestFile0073 = "/Imaginarium/api/uuid/7fb1720121c5ead87b8dac84814eb921b1b1b7020c8ac2cdd7ae5d0bd4dfa36f/712/400";
		String requestHeader0073 = "GET " + requestFile0073 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0073, requestHost0073, requestPort0073, requestHeader0073, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0073 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 63281
		// content test algorithm: check size +/- 5%, defined content size = 63281
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 63281, 5);		// Test [73] <- Index 73
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [74] <- WEB ADMIN Index 79 ---
		String requestProt0074 = "http";
		String requestHost0074 = "www.budgetedbauer.com";
		int    requestPort0074 = 80;
		String requestFile0074 = "/okq47x5qmc";
		String requestHeader0074 = "GET " + requestFile0074 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.budgetedbauer.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0074, requestHost0074, requestPort0074, requestHeader0074, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0074 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/PLAIN", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/PLAIN", null, 0, 5);		// Test [74] <- Index 74
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [75] <- WEB ADMIN Index 80 ---
		String requestProt0075 = "http";
		String requestHost0075 = "hpr.outbrain.com";
		int    requestPort0075 = 80;
		String requestFile0075 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2F" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=HOP_15" +
				"&key=NANOWDGT01" +
				"&idx=1" +
				"&version=01001112" +
				"&ref=" +
				"&apv=false" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=39034" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV8xZTZjMDQ1NmY2ZmRmZDZkZmFjM2IyMjg2NTgxNTU4N18w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false" +
				"&fbk=cnnEditionHpTravel";
		String requestHeader0075 = "GET " + requestFile0075 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: hpr.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0075, requestHost0075, requestPort0075, requestHeader0075, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0075 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 6968
		// content test algorithm: check size +/- 5%, defined content size = 6968
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 6968, 5);		// Test [75] <- Index 75
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [76] <- WEB ADMIN Index 81 ---
		String requestProt0076 = "http";
		String requestHost0076 = "ad.doubleclick.net";
		int    requestPort0076 = 80;
		String requestFile0076 = "/ddm/ad/qh0/sa6vqtw3e6/;ord=1477307054050?";
		String requestHeader0076 = "GET " + requestFile0076 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ad.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0076, requestHost0076, requestPort0076, requestHeader0076, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0076 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [76] <- Index 76
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [77] <- WEB ADMIN Index 82 ---
		String requestProt0077 = "https";
		String requestHost0077 = "self-repair.mozilla.org";
		int    requestPort0077 = 443;
		String requestFile0077 = "/api/v1/classify_client/";
		String requestHeader0077 = "GET " + requestFile0077 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: self-repair.mozilla.org\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Origin: https://self-repair.mozilla.org\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0077, requestHost0077, requestPort0077, requestHeader0077, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0077 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 80
		// content test algorithm: check size +/- 5%, defined content size = 80
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 80, 5);		// Test [77] <- Index 77
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [78] <- WEB ADMIN Index 83 ---
		String requestProt0078 = "http";
		String requestHost0078 = "images.outbrain.com";
		int    requestPort0078 = 80;
		String requestFile0078 = "/Imaginarium/api/uuid/dd55d301e5eb7d82e6ab860b5b3e6b2f982fd6489fde67717cdbeb670ec4ed6f/712/400";
		String requestHeader0078 = "GET " + requestFile0078 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0078, requestHost0078, requestPort0078, requestHeader0078, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0078 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 127659
		// content test algorithm: check size +/- 5%, defined content size = 127659
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 127659, 5);		// Test [78] <- Index 78
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [79] <- WEB ADMIN Index 84 ---
		String requestProt0079 = "http";
		String requestHost0079 = "hpr.outbrain.com";
		int    requestPort0079 = 80;
		String requestFile0079 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2F" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=HOP_13" +
				"&key=NANOWDGT01" +
				"&idx=2" +
				"&version=01001112" +
				"&ref=" +
				"&apv=false" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=81148" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV8xZTZjMDQ1NmY2ZmRmZDZkZmFjM2IyMjg2NTgxNTU4N18w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false" +
				"&fbk=cnnEditionHpStyle";
		String requestHeader0079 = "GET " + requestFile0079 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: hpr.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0079, requestHost0079, requestPort0079, requestHeader0079, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0079 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 6971
		// content test algorithm: check size +/- 5%, defined content size = 6971
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 6971, 5);		// Test [79] <- Index 79
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [80] <- WEB ADMIN Index 86 ---
		String requestProt0080 = "http";
		String requestHost0080 = "images.outbrain.com";
		int    requestPort0080 = 80;
		String requestFile0080 = "/Imaginarium/api/uuid/e5aea6dbc78f0ccd99a73e8593cb02fdf6e64c66529573f39c516c69194c4d0d/712/400";
		String requestHeader0080 = "GET " + requestFile0080 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0080, requestHost0080, requestPort0080, requestHeader0080, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0080 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 82761
		// content test algorithm: check size +/- 5%, defined content size = 82761
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 82761, 5);		// Test [80] <- Index 80
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_3 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_4.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_4(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 5 of 26)
		// -----------------------------------------



		// --- HTTP REQUEST: Test [81] <- WEB ADMIN Index 87 ---
		String requestProt0081 = "http";
		String requestHost0081 = "www.fallingfalcon.com";
		int    requestPort0081 = 80;
		String requestFile0081 = "/bcn" +
				"?xlg=" +
				"&vv=1477306754662" +
				"&id=1477307054049" +
				"&vqwo=1" +
				"&deo=0" +
				"&hu=0" +
				"&fe=1477307054378" +
				"&y=1.7.0" +
				"&elg=798465048" +
				"&flg=PflrxvqvbvAxzwG" +
				"&x=hglwlrq.fqq.frp%2F";
		String requestHeader0081 = "GET " + requestFile0081 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.fallingfalcon.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0081, requestHost0081, requestPort0081, requestHeader0081, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0081 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [81] <- Index 81
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [82] <- WEB ADMIN Index 88 ---
		String requestProt0082 = "http";
		String requestHost0082 = "images.outbrain.com";
		int    requestPort0082 = 80;
		String requestFile0082 = "/Imaginarium/api/uuid/30a09549e698ababe9485da248adb30f45bcfea39003fb2281050813f3f0853f/712/400";
		String requestHeader0082 = "GET " + requestFile0082 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0082, requestHost0082, requestPort0082, requestHeader0082, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0082 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 101199
		// content test algorithm: check size +/- 5%, defined content size = 101199
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 101199, 5);		// Test [82] <- Index 82
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [83] <- WEB ADMIN Index 89 ---
		String requestProt0083 = "http";
		String requestHost0083 = "images.outbrain.com";
		int    requestPort0083 = 80;
		String requestFile0083 = "/Imaginarium/api/uuid/eb621625ef4c96220511ee6626409f27d88547d84d19b78a1cd7d0282deaf1ca/712/400";
		String requestHeader0083 = "GET " + requestFile0083 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0083, requestHost0083, requestPort0083, requestHeader0083, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0083 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 45684
		// content test algorithm: check size +/- 5%, defined content size = 45684
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 45684, 5);		// Test [83] <- Index 83
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [84] <- WEB ADMIN Index 90 ---
		String requestProt0084 = "http";
		String requestHost0084 = "hpr.outbrain.com";
		int    requestPort0084 = 80;
		String requestFile0084 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2F" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=HOP_10" +
				"&key=NANOWDGT01" +
				"&idx=3" +
				"&version=01001112" +
				"&ref=" +
				"&apv=false" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=27324" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV8xZTZjMDQ1NmY2ZmRmZDZkZmFjM2IyMjg2NTgxNTU4N18w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false" +
				"&fbk=cnnEditionHpMoney";
		String requestHeader0084 = "GET " + requestFile0084 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: hpr.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0084, requestHost0084, requestPort0084, requestHeader0084, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0084 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 6990
		// content test algorithm: check size +/- 5%, defined content size = 6990
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 6990, 5);		// Test [84] <- Index 84
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [85] <- WEB ADMIN Index 91 ---
		String requestProt0085 = "http";
		String requestHost0085 = "log.outbrain.com";
		int    requestPort0085 = 80;
		String requestFile0085 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=1163" +
				"&pid=235" +
				"&sid=171366" +
				"&wId=165" +
				"&wRV=01001112" +
				"&rId=beb7e9a1a588f6a780cd7af1116baaa0" +
				"&idx=1" +
				"&pvId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&org=5" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0085 = "GET " + requestFile0085 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0085, requestHost0085, requestPort0085, requestHeader0085, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0085 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [85] <- Index 85
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [86] <- WEB ADMIN Index 92 ---
		String requestProt0086 = "http";
		String requestHost0086 = "log.outbrain.com";
		int    requestPort0086 = 80;
		String requestFile0086 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=1161" +
				"&pid=235" +
				"&sid=171366" +
				"&wId=164" +
				"&wRV=01001112" +
				"&rId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&idx=0" +
				"&pvId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&org=5" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0086 = "GET " + requestFile0086 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0086, requestHost0086, requestPort0086, requestHeader0086, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0086 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [86] <- Index 86
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [87] <- WEB ADMIN Index 93 ---
		String requestProt0087 = "http";
		String requestHost0087 = "log.outbrain.com";
		int    requestPort0087 = 80;
		String requestFile0087 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=1291" +
				"&pid=235" +
				"&sid=171366" +
				"&wId=163" +
				"&wRV=01001112" +
				"&rId=bbeb24a5c0fed0b470e2342761cc380b" +
				"&idx=2" +
				"&pvId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&org=5" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0087 = "GET " + requestFile0087 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0087, requestHost0087, requestPort0087, requestHeader0087, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0087 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [87] <- Index 87
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [88] <- WEB ADMIN Index 94 ---
		String requestProt0088 = "http";
		String requestHost0088 = "aax.amazon-adsystem.com";
		int    requestPort0088 = 80;
		String requestFile0088 = "/e/dtb/bid" +
				"?src=3288" +
				"&u=http%3A%2F%2Fedition.cnn.com%2F" +
				"&cb=1064559" +
				"&t=1000";
		String requestHeader0088 = "GET " + requestFile0088 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: aax.amazon-adsystem.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0088, requestHost0088, requestPort0088, requestHeader0088, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0088 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 19
		// content test algorithm: check size +/- 5%, defined content size = 19
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 19, 5);		// Test [88] <- Index 88
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [89] <- WEB ADMIN Index 95 ---
		String requestProt0089 = "http";
		String requestHost0089 = "b.scorecardresearch.com";
		int    requestPort0089 = 80;
		String requestFile0089 = "/b" +
				"?c1=7" +
				"&c2=14320224" +
				"&c3=235" +
				"&ns__t=1477307055357" +
				"&ns_c=windows-1252" +
				"&ns_if=1" +
				"&cv=3.1" +
				"&c8=" +
				"&c7=http%3A%2F%2Fwidgets.outbrain.com%2FnanoWidget%2Fexternals%2FobFrame%2FobFrame.htm%23pid%3D235%26dmpenabled%3Dtrue%26csenabled%3Dtrue%26d%3DJO1nvR1RQN3_GLBS5Cr_eswqerWMmmbqNmtnW-zwXr8YUlIqd9qOsQx1ms-jF0Xv" +
				"&c9=http%3A%2F%2Fedition.cnn.com%2F";
		String requestHeader0089 = "GET " + requestFile0089 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0089, requestHost0089, requestPort0089, requestHeader0089, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0089 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, null, null, 0, 5);		// Test [89] <- Index 89
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [90] <- WEB ADMIN Index 96 ---
		String requestProt0090 = "http";
		String requestHost0090 = "images.outbrain.com";
		int    requestPort0090 = 80;
		String requestFile0090 = "/Imaginarium/api/uuid/ec784d7dbdcb5b8eaa5bb350ab0381f4c533d68dd1d8031daa7dfb4f7d962b05/712/400";
		String requestHeader0090 = "GET " + requestFile0090 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0090, requestHost0090, requestPort0090, requestHeader0090, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0090 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 18672
		// content test algorithm: check size +/- 5%, defined content size = 18672
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 18672, 5);		// Test [90] <- Index 90
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [91] <- WEB ADMIN Index 97 ---
		String requestProt0091 = "http";
		String requestHost0091 = "images.outbrain.com";
		int    requestPort0091 = 80;
		String requestFile0091 = "/Imaginarium/api/uuid/4d9b543cd0ff76f0c673c317bc46322e0cf247ef9b009008761c49452ae05b49/712/400";
		String requestHeader0091 = "GET " + requestFile0091 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0091, requestHost0091, requestPort0091, requestHeader0091, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0091 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 47457
		// content test algorithm: check size +/- 5%, defined content size = 47457
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 47457, 5);		// Test [91] <- Index 91
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [92] <- WEB ADMIN Index 98 ---
		String requestProt0092 = "http";
		String requestHost0092 = "images.outbrain.com";
		int    requestPort0092 = 80;
		String requestFile0092 = "/Imaginarium/api/uuid/bfee788b56776365773d2a858515d03277c1a481cd33d608b1ed718ca5dcdef6/712/400";
		String requestHeader0092 = "GET " + requestFile0092 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0092, requestHost0092, requestPort0092, requestHeader0092, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0092 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 40224
		// content test algorithm: check size +/- 5%, defined content size = 40224
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 40224, 5);		// Test [92] <- Index 92
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [93] <- WEB ADMIN Index 99 ---
		String requestProt0093 = "http";
		String requestHost0093 = "odb.outbrain.com";
		int    requestPort0093 = 80;
		String requestFile0093 = "/utils/get" +
				"?url=http%3A%2F%2Fwww.cnn.com" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=TR_1" +
				"&key=NANOWDGT01" +
				"&idx=4" +
				"&version=01001112" +
				"&ref=" +
				"&apv=false" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=96453" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV8xZTZjMDQ1NmY2ZmRmZDZkZmFjM2IyMjg2NTgxNTU4N18w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false";
		String requestHeader0093 = "GET " + requestFile0093 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: odb.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0093, requestHost0093, requestPort0093, requestHeader0093, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0093 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 560
		// content test algorithm: check size +/- 5%, defined content size = 560
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 560, 5);		// Test [93] <- Index 93
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [94] <- WEB ADMIN Index 100 ---
		String requestProt0094 = "http";
		String requestHost0094 = "log.outbrain.com";
		int    requestPort0094 = 80;
		String requestFile0094 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=1915" +
				"&pid=235" +
				"&sid=171366" +
				"&wId=160" +
				"&wRV=01001112" +
				"&rId=a15b9314404fbdf2ad89ba6a885a903e" +
				"&idx=3" +
				"&pvId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&org=5" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0094 = "GET " + requestFile0094 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0094, requestHost0094, requestPort0094, requestHeader0094, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0094 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [94] <- Index 94
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [95] <- WEB ADMIN Index 101 ---
		String requestProt0095 = "https";
		String requestHost0095 = "www.facebook.com";
		int    requestPort0095 = 443;
		String requestFile0095 = "/impression.php/f8c6e368a38438/" +
				"?api_key=80401312489" +
				"&lid=115" +
				"&payload=%7B%22source%22%3A%22jssdk%22%7D";
		String requestHeader0095 = "GET " + requestFile0095 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0095, requestHost0095, requestPort0095, requestHeader0095, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0095 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 48
		// content test algorithm: check size +/- 5%, defined content size = 48
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 48, 5);		// Test [95] <- Index 95
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [96] <- WEB ADMIN Index 102 ---
		String requestProt0096 = "https";
		String requestHost0096 = "securepubads.g.doubleclick.net";
		int    requestPort0096 = 443;
		String requestFile0096 = "/gampad/ads" +
				"?gdfp_req=1" +
				"&correlator=2928785739607866" +
				"&output=json_html" +
				"&callback=callbackProxy" +
				"&impl=fifs" +
				"&json_a=1" +
				"&eid=108809080%2C108809133%2C108809146%2C108809136" +
				"&sc=0" +
				"&sfv=1-0-4" +
				"&iu_parts=8663477%2CCNNi%2Chomepage" +
				"&enc_prev_ius=%2F0%2F1%2F2%2C%2F0%2F1%2F2%2C%2F0%2F1%2F2%2C%2F0%2F1%2F2%2C%2F0%2F1%2F2%2C%2F0%2F1%2F2%2C%2F0%2F1%2F2%2C%2F0%2F1%2F2%2C%2F0%2F1%2F2" +
				"&prev_iu_szs=728x90%7C1x2%2C300x250%7C1x2%2C1x1%2C300x251%7C300x250%7C1x2%2C1x1%2C728x91%7C728x90%7C1x2%2C1x1%2C1x2%2C1x2" +
				"&ists=4" +
				"&prev_scp=pos%3Dbnr_atf_01%26rpfl_elemid%3Dad_bnr_atf_01%26fln_to%3D0%7Cpos%3Drect_atf_01%26rpfl_elemid%3Dad_rect_atf_01%26fln_to%3D0%7Cpos%3Dbnr_btf_01%26rpfl_elemid%3Dad_bnr_btf_01%26fln_to%3D0%7Cpos%3Drect_btf_01%26rpfl_elemid%3Dad_rect_btf_01%26fln_to%3D0%7Cpos%3Dbnr_btf_03%26rpfl_elemid%3Dad_bnr_btf_03%26fln_to%3D0%7Cpos%3Dbnr_btf_04%26rpfl_elemid%3Dad_bnr_btf_04%26fln_to%3D0%7Cpos%3Doop_float_01%7Cpos%3Dnat_atf_02%26strnativekey%3DXABekEh4zryPunytceAQeqty%26rpfl_elemid%3Dad_nat_atf_02%26fln_to%3D0%7Cpos%3Dnat_atf_03%26strnativekey%3De38e2aab%26rpfl_elemid%3Dad_nat_atf_03%26fln_to%3D0" +
				"&eri=1" +
				"&cust_params=guid%3D580de97e063d0a0a3c875a117700647f%26prx_to%3D1%26transId%3D14773070514960706261364921%26kuid%3Dq7dgd6wiu%26refdom%3Dother%26azn_to%3D0" +
				"&cookie=ID%3D575a79a92856696c%3AT%3D1477306756%3AS%3DALNI_Mb_EXc_S3b8JqeseM1QooOOGTvF_w" +
				"&lmt=1477307055" +
				"&dt=1477307055636" +
				"&cc=14" +
				"&frm=20" +
				"&biw=960" +
				"&bih=950" +
				"&oid=3" +
				"&adxs=0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0" +
				"&adys=0%2C0%2C0%2C0%2C0%2C0%2C0%2C0%2C0" +
				"&adks=401663639%2C1154918749%2C1422824962%2C2977233875%2C1422824964%2C2449731352%2C953993490%2C1569275916%2C1569275917" +
				"&gut=v2" +
				"&ifi=1" +
				"&u_tz=120" +
				"&u_his=2" +
				"&u_java=true" +
				"&u_h=1080" +
				"&u_w=1920" +
				"&u_ah=1057" +
				"&u_aw=1920" +
				"&u_cd=24" +
				"&u_nplug=5" +
				"&u_nmime=26" +
				"&u_sd=1" +
				"&flash=23.0.0" +
				"&url=http%3A%2F%2Fedition.cnn.com%2F" +
				"&dssz=48" +
				"&icsg=8813272891392" +
				"&mso=1" +
				"&std=18" +
				"&vrg=103" +
				"&vrp=103" +
				"&ga_vid=303054101.1477307056" +
				"&ga_sid=1477307056" +
				"&ga_hid=1507017412";
		String requestHeader0096 = "GET " + requestFile0096 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: securepubads.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0096, requestHost0096, requestPort0096, requestHeader0096, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0096 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 82605
		// content test algorithm: check size +/- 5%, defined content size = 82605
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 82605, 5);		// Test [96] <- Index 96
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [97] <- WEB ADMIN Index 103 ---
		String requestProt0097 = "http";
		String requestHost0097 = "log.outbrain.com";
		int    requestPort0097 = 80;
		String requestFile0097 = "/loggerServices/widgetGlobalEvent" +
				"?eT=6" +
				"&tm=2317" +
				"&pid=185" +
				"&sid=185984" +
				"&wId=117" +
				"&wRV=01001112" +
				"&rId=6d9c513382bdf933583fd3c1ae2a85a4" +
				"&idx=4" +
				"&pvId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&org=0" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0097 = "GET " + requestFile0097 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0097, requestHost0097, requestPort0097, requestHeader0097, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0097 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [97] <- Index 97
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [98] <- WEB ADMIN Index 104 ---
		String requestProt0098 = "http";
		String requestHost0098 = "www.google.com";
		int    requestPort0098 = 80;
		String requestFile0098 = "/ads/measurement/l" +
				"?ebcid=ALh7CaRrkUaKSWqK6th6kc5A-35Ti2fS3oH7n4uWQD0l7Kk3WqXH1lVQlksMpwnkYqZPcnq4DWg209PFVHrhjrqD2Co-j0XlSQ";
		String requestHeader0098 = "GET " + requestFile0098 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.google.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0098, requestHost0098, requestPort0098, requestHeader0098, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0098 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, "TEXT/HTML", null, 0, 5);		// Test [98] <- Index 98
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [99] <- WEB ADMIN Index 107 ---
		String requestProt0099 = "https";
		String requestHost0099 = "cm.g.doubleclick.net";
		int    requestPort0099 = 443;
		String requestFile0099 = "/push" +
				"?client=ca-pub-2855247441935805" +
				"&srn=gdn";
		String requestHeader0099 = "GET " + requestFile0099 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: cm.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0099, requestHost0099, requestPort0099, requestHeader0099, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0099 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, "TEXT/HTML", null, 0, 5);		// Test [99] <- Index 99
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [100] <- WEB ADMIN Index 108 ---
		String requestProt0100 = "http";
		String requestHost0100 = "www.google.com";
		int    requestPort0100 = 80;
		String requestFile0100 = "/ads/measurement/l" +
				"?ebcid=ALh7CaSeSmI963xbccJo1jDTFAZGQKOLubLZvlLrGurf6w2ThNFN3rWohSm1tuNUjriNseA1UtQGTC2OpMrZqcTQDbPY-1zKnw";
		String requestHeader0100 = "GET " + requestFile0100 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.google.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0100, requestHost0100, requestPort0100, requestHeader0100, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0100 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, "TEXT/HTML", null, 0, 5);		// Test [100] <- Index 100
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_4 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_5.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_5(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 6 of 26)
		// -----------------------------------------



		// --- HTTP REQUEST: Test [101] <- WEB ADMIN Index 109 ---
		log();
		log("# title: Untitled");
		String requestProt0101 = "http";
		String requestHost0101 = "s0.2mdn.net";
		int    requestPort0101 = 80;
		String requestFile0101 = "/ads/richmedia/studio/pv2/43981326/20160623044125234/web/moneytransfer_300x250_65_v4.html" +
				"?e=69" +
				"&renderingType=2" +
				"&leftOffset=0" +
				"&topOffset=0" +
				"&c=k78Cy6HAJy" +
				"&t=1";
		String requestHeader0101 = "GET " + requestFile0101 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0101, requestHost0101, requestPort0101, requestHeader0101, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0101 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 518
		// content test algorithm: check size +/- 5%, defined content size = 518
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 518, 5);		// Test [101] <- Index 101
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [102] <- WEB ADMIN Index 110 ---
		log();
		log("# title: Untitled");
		String requestProt0102 = "http";
		String requestHost0102 = "s0.2mdn.net";
		int    requestPort0102 = 80;
		String requestFile0102 = "/ads/richmedia/studio/pv2/43981304/20160623043727387/web/moneytransfer_728x90_45-65_v2.html" +
				"?e=69" +
				"&renderingType=2" +
				"&leftOffset=0" +
				"&topOffset=0" +
				"&c=WolYRejTyG" +
				"&t=1";
		String requestHeader0102 = "GET " + requestFile0102 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0102, requestHost0102, requestPort0102, requestHeader0102, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0102 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 516
		// content test algorithm: check size +/- 5%, defined content size = 516
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 516, 5);		// Test [102] <- Index 102
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [103] <- WEB ADMIN Index 111 ---
		String requestProt0103 = "http";
		String requestHost0103 = "tags.bluekai.com";
		int    requestPort0103 = 80;
		String requestFile0103 = "/site/20087" +
				"?ret=js" +
				"&jscb=STRBKCallback" +
				"&_=1477307051490";
		String requestHeader0103 = "GET " + requestFile0103 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: tags.bluekai.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0103, requestHost0103, requestPort0103, requestHeader0103, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0103 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 1386
		// content test algorithm: check size +/- 5%, defined content size = 1386
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 1386, 5);		// Test [103] <- Index 103
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [104] <- WEB ADMIN Index 112 ---
		String requestProt0104 = "http";
		String requestHost0104 = "tags.bluekai.com";
		int    requestPort0104 = 80;
		String requestFile0104 = "/site/20214" +
				"?limit=1" +
				"&phint=user%3Dtrue";
		String requestHeader0104 = "GET " + requestFile0104 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: tags.bluekai.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0104, requestHost0104, requestPort0104, requestHeader0104, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0104 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 62
		// content test algorithm: check size +/- 5%, defined content size = 62
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 62, 5);		// Test [104] <- Index 104
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [105] <- WEB ADMIN Index 113 ---
		String requestProt0105 = "http";
		String requestHost0105 = "btlr.sharethrough.com";
		int    requestPort0105 = 80;
		String requestFile0105 = "/v4" +
				"?placement_key=e38e2aab" +
				"&creative_key=DSPag5ZnkXa6VQBEAzCUCUBaTS" +
				"&bluekai=%7B%22status%22%3A%22not_available%22%7D" +
				"&ijson=native_callback_1" +
				"&cache=1477307057242";
		String requestHeader0105 = "GET " + requestFile0105 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: btlr.sharethrough.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0105, requestHost0105, requestPort0105, requestHeader0105, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0105 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 2552
		// content test algorithm: check size +/- 5%, defined content size = 2552
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 2552, 5);		// Test [105] <- Index 105
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [106] <- WEB ADMIN Index 114 ---
		String requestProt0106 = "http";
		String requestHost0106 = "btlr.sharethrough.com";
		int    requestPort0106 = 80;
		String requestFile0106 = "/v4" +
				"?placement_key=XABekEh4zryPunytceAQeqty" +
				"&creative_key=DSuhRYegqnLoBoCdvjcyyP9NEy" +
				"&bluekai=%7B%22status%22%3A%22not_available%22%7D" +
				"&ijson=native_callback_2" +
				"&cache=1477307057245";
		String requestHeader0106 = "GET " + requestFile0106 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: btlr.sharethrough.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0106, requestHost0106, requestPort0106, requestHeader0106, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0106 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 2895
		// content test algorithm: check size +/- 5%, defined content size = 2895
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 2895, 5);		// Test [106] <- Index 106
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [107] <- WEB ADMIN Index 115 ---
		String requestProt0107 = "http";
		String requestHost0107 = "b.sharethrough.com";
		int    requestPort0107 = 80;
		String requestFile0107 = "/butler" +
				"?type=impressionRequest" +
				"&pkey=e38e2aab" +
				"&ckey=DSPag5ZnkXa6VQBEAzCUCUBaTS" +
				"&bkuuid=" +
				"&bkstatus=not_available" +
				"&session=cb7979c6-2415-4cf5-9c3a-b27328c5b0d9" +
				"&bwidth=960" +
				"&bheight=950" +
				"&pref=" +
				"&ploc=http%253A%252F%252Fedition.cnn.com%252F" +
				"&ua=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.12%3B%20rv%3A49.0)%20Gecko%2F20100101%20Firefox%2F49.0" +
				"&umtime=1477307057240" +
				"&uid=";
		String requestHeader0107 = "GET " + requestFile0107 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.sharethrough.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0107, requestHost0107, requestPort0107, requestHeader0107, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0107 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 0, 5);		// Test [107] <- Index 107
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [108] <- WEB ADMIN Index 116 ---
		String requestProt0108 = "http";
		String requestHost0108 = "b.sharethrough.com";
		int    requestPort0108 = 80;
		String requestFile0108 = "/butler" +
				"?type=impressionRequest" +
				"&pkey=XABekEh4zryPunytceAQeqty" +
				"&ckey=DSuhRYegqnLoBoCdvjcyyP9NEy" +
				"&bkuuid=" +
				"&bkstatus=not_available" +
				"&session=cb7979c6-2415-4cf5-9c3a-b27328c5b0d9" +
				"&bwidth=960" +
				"&bheight=950" +
				"&pref=" +
				"&ploc=http%253A%252F%252Fedition.cnn.com%252F" +
				"&ua=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.12%3B%20rv%3A49.0)%20Gecko%2F20100101%20Firefox%2F49.0" +
				"&umtime=1477307057243" +
				"&uid=";
		String requestHeader0108 = "GET " + requestFile0108 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.sharethrough.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0108, requestHost0108, requestPort0108, requestHeader0108, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0108 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 0, 5);		// Test [108] <- Index 108
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [109] <- WEB ADMIN Index 117 ---
		String requestProt0109 = "https";
		String requestHost0109 = "cm.g.doubleclick.net";
		int    requestPort0109 = 443;
		String requestFile0109 = "/push" +
				"?client=ca-pub-8566795000208645" +
				"&aid=41519752,45746260";
		String requestHeader0109 = "GET " + requestFile0109 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: cm.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0109, requestHost0109, requestPort0109, requestHeader0109, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0109 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 254
		// content test algorithm: check size +/- 5%, defined content size = 254
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 254, 5);		// Test [109] <- Index 109
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [110] <- WEB ADMIN Index 118 ---
		String requestProt0110 = "https";
		String requestHost0110 = "geo.moatads.com";
		int    requestPort0110 = 443;
		String requestFile0110 = "/n.js" +
				"?e=35" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&gz=0" +
				"&hh=0" +
				"&hn=0" +
				"&qt=0" +
				"&i=TURNERDFP1" +
				"&hp=1" +
				"&zMoatPS=rect_btf_01" +
				"&zMoatWD=300" +
				"&zMoatHT=250" +
				"&zMoatST=Site%20Not%20Defined" +
				"&zMoatPSB=rect_btf_01" +
				"&zMoatOrigSlicer1=%2F8663477%2FCNNi%2Fhomepage" +
				"&zMoatOrigSlicer2=52125397" +
				"&cm=33" +
				"&kq=1" +
				"&bq=0" +
				"&f=0" +
				"&j=" +
				"&o=3" +
				"&t=1477307057007" +
				"&de=126408829377" +
				"&m=0" +
				"&ar=a243607-clean" +
				"&q=1" +
				"&cb=0" +
				"&cu=1477307057007" +
				"&ll=2" +
				"&ln=1" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=60921397%3A407762077%3A157758997%3A102208840837" +
				"&cadf=-" +
				"&gptMoat_pg=-" +
				"&gptMoat_appname=-" +
				"&gptMoat_pos=rect_btf_01" +
				"&gptMoat_mivr=-" +
				"&qs=1" +
				"&bo=%2F8663477%2FCNNi%2Fhomepage" +
				"&bp=52125397" +
				"&bd=rect_btf_01" +
				"&zMoatAltSL=zMoatAdUnit1%3AzMoatAdUnit2%3AzMoatPS" +
				"&dfp=0%2C4" +
				"&la=52125397" +
				"&gw=turnerdfpcwrefresh475219962180" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=95074" +
				"&na=411681960" +
				"&cs=0" +
				"&callback=MoatSuperV22.gna463928";
		String requestHeader0110 = "GET " + requestFile0110 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: geo.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0110, requestHost0110, requestPort0110, requestHeader0110, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0110 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 66
		// content test algorithm: check size +/- 5%, defined content size = 66
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 66, 5);		// Test [110] <- Index 110
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [111] <- WEB ADMIN Index 119 ---
		String requestProt0111 = "http";
		String requestHost0111 = "www.google.com";
		int    requestPort0111 = 80;
		String requestFile0111 = "/ads/measurement/l" +
				"?ebcid=ALh7CaSeSmI963xbccJo1jDTFAZGQKOLubLZvlLrGurf6w2ThNFN3rWohSm1tuNUjriNseA1UtQGTC2OpMrZqcTQDbPY-1zKnw";
		String requestHeader0111 = "GET " + requestFile0111 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.google.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0111, requestHost0111, requestPort0111, requestHeader0111, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0111 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, "TEXT/HTML", null, 0, 5);		// Test [111] <- Index 111
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [112] <- WEB ADMIN Index 120 ---
		String requestProt0112 = "https";
		String requestHost0112 = "geo.moatads.com";
		int    requestPort0112 = 443;
		String requestFile0112 = "/n.js" +
				"?e=35" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&gz=0" +
				"&hh=0" +
				"&hn=0" +
				"&qt=0" +
				"&i=TURNERDFP1" +
				"&hp=1" +
				"&zMoatPS=bnr_btf_04" +
				"&zMoatWD=728" +
				"&zMoatHT=90" +
				"&zMoatST=Site%20Not%20Defined" +
				"&zMoatPSB=bnr_btf_04" +
				"&zMoatOrigSlicer1=%2F8663477%2FCNNi%2Fhomepage" +
				"&zMoatOrigSlicer2=52125397" +
				"&cm=33" +
				"&kq=1" +
				"&bq=0" +
				"&f=0" +
				"&j=" +
				"&o=3" +
				"&t=1477307057089" +
				"&de=802268203661" +
				"&m=0" +
				"&ar=a243607-clean" +
				"&q=4" +
				"&cb=0" +
				"&cu=1477307057089" +
				"&ll=2" +
				"&ln=1" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=60921397%3A407762077%3A157758997%3A102208811677" +
				"&cadf=-" +
				"&gptMoat_pg=-" +
				"&gptMoat_appname=-" +
				"&gptMoat_pos=bnr_btf_04" +
				"&gptMoat_mivr=-" +
				"&qs=1" +
				"&bo=%2F8663477%2FCNNi%2Fhomepage" +
				"&bp=52125397" +
				"&bd=bnr_btf_04" +
				"&zMoatAltSL=zMoatAdUnit1%3AzMoatAdUnit2%3AzMoatPS" +
				"&dfp=0%2C4" +
				"&la=52125397" +
				"&gw=turnerdfpcwrefresh475219962180" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=95074" +
				"&na=1531184984" +
				"&cs=0" +
				"&callback=MoatSuperV22.gna41030";
		String requestHeader0112 = "GET " + requestFile0112 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: geo.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0112, requestHost0112, requestPort0112, requestHeader0112, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0112 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 65
		// content test algorithm: check size +/- 5%, defined content size = 65
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 65, 5);		// Test [112] <- Index 112
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [113] <- WEB ADMIN Index 121 ---
		String requestProt0113 = "https";
		String requestHost0113 = "geo.moatads.com";
		int    requestPort0113 = 443;
		String requestFile0113 = "/n.js" +
				"?e=35" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&gz=0" +
				"&hh=0" +
				"&hn=0" +
				"&qt=0" +
				"&i=TURNERDFP1" +
				"&hp=1" +
				"&zMoatPS=bnr_atf_01" +
				"&zMoatWD=1" +
				"&zMoatHT=2" +
				"&zMoatST=Site%20Not%20Defined" +
				"&zMoatRetail=true" +
				"&zMoatPSB=bnr_atf_01" +
				"&zMoatAdUnitRetail=true" +
				"&zMoatOrigSlicer1=%2F8663477%2FCNNi%2Fhomepage" +
				"&zMoatOrigSlicer2=52125397" +
				"&cm=33" +
				"&kq=1" +
				"&bq=0" +
				"&f=0" +
				"&j=" +
				"&o=3" +
				"&t=1477307057174" +
				"&de=130914175917" +
				"&m=0" +
				"&ar=a243607-clean" +
				"&q=7" +
				"&cb=0" +
				"&cu=1477307057174" +
				"&ll=2" +
				"&ln=1" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=38600317%3A265617637%3A103631077%3A64168752997" +
				"&cadf=-" +
				"&gptMoat_pg=-" +
				"&gptMoat_appname=-" +
				"&gptMoat_pos=bnr_atf_01" +
				"&gptMoat_mivr=-" +
				"&qs=1" +
				"&bo=%2F8663477%2FCNNi%2Fhomepage" +
				"&bp=52125397" +
				"&bd=bnr_atf_01" +
				"&zMoatAltSL=zMoatAdUnit1%3AzMoatAdUnit2%3AzMoatPS" +
				"&dfp=0%2C4" +
				"&la=52125397" +
				"&gw=turnerdfpcwrefresh475219962180" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=95074" +
				"&na=722818904" +
				"&cs=0" +
				"&callback=MoatSuperV22.gna532679";
		String requestHeader0113 = "GET " + requestFile0113 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: geo.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0113, requestHost0113, requestPort0113, requestHeader0113, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0113 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 65
		// content test algorithm: check size +/- 5%, defined content size = 65
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 65, 5);		// Test [113] <- Index 113
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [114] <- WEB ADMIN Index 122 ---
		String requestProt0114 = "http";
		String requestHost0114 = "match.adsrvr.org";
		int    requestPort0114 = 80;
		String requestFile0114 = "/track/cmf/generic" +
				"?ttd_pid=sharethrough" +
				"&ttd_tpi=1";
		String requestHeader0114 = "GET " + requestFile0114 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: match.adsrvr.org\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0114, requestHost0114, requestPort0114, requestHeader0114, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0114 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 70
		// content test algorithm: check size +/- 5%, defined content size = 70
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 70, 5);		// Test [114] <- Index 114
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [115] <- WEB ADMIN Index 123 ---
		String requestProt0115 = "http";
		String requestHost0115 = "match.adsrvr.org";
		int    requestPort0115 = 80;
		String requestFile0115 = "/track/cmf/generic" +
				"?ttd_pid=sharethrough" +
				"&ttd_tpi=1";
		String requestHeader0115 = "GET " + requestFile0115 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: match.adsrvr.org\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0115, requestHost0115, requestPort0115, requestHeader0115, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0115 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 70
		// content test algorithm: check size +/- 5%, defined content size = 70
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 70, 5);		// Test [115] <- Index 115
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [116] <- WEB ADMIN Index 124 ---
		String requestProt0116 = "http";
		String requestHost0116 = "b.sharethrough.com";
		int    requestPort0116 = 80;
		String requestFile0116 = "/butler" +
				"?session=cb7979c6-2415-4cf5-9c3a-b27328c5b0d9" +
				"&bwidth=960" +
				"&bheight=950" +
				"&pwidth=293.29998779296875" +
				"&pheight=251" +
				"&pxoff=10" +
				"&pyoff=3313" +
				"&pkey=e38e2aab" +
				"&ckey=sfp-DSPag5ZnkXa6VQBEAzCUCUBaTS" +
				"&vkey=DSkJMvmvRtd5VwmYFwAcaPUJEb" +
				"&arid=098674cb-07d9-4852-a56c-f0d0422dfb62" +
				"&awid=248acadb-916c-4a51-bdea-05049f03c7c8" +
				"&renderInPlace=false" +
				"&placementIndex=1" +
				"&twidth=293" +
				"&theight=169" +
				"&type=impression" +
				"&bkuuid=" +
				"&bkstatus=not_available" +
				"&pref=" +
				"&ploc=http%253A%252F%252Fedition.cnn.com%252F" +
				"&ua=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.12%3B%20rv%3A49.0)%20Gecko%2F20100101%20Firefox%2F49.0" +
				"&umtime=1477307057836" +
				"&uid=";
		String requestHeader0116 = "GET " + requestFile0116 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.sharethrough.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0116, requestHost0116, requestPort0116, requestHeader0116, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0116 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 0, 5);		// Test [116] <- Index 116
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [117] <- WEB ADMIN Index 125 ---
		log();
		log("# title: CNN - Breaking News, U.S., World, Weather, Entertainment & Video News");
		String requestProt0117 = "http";
		String requestHost0117 = "edition.cnn.com";
		int    requestPort0117 = 80;
		String requestFile0117 = "/";
		String requestHeader0117 = "GET " + requestFile0117 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0117, requestHost0117, requestPort0117, requestHeader0117, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0117 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 32454
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Clashes erupt in migrant camp before eviction");		// Test [117] <- Index 117
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [118] <- WEB ADMIN Index 126 ---
		String requestProt0118 = "https";
		String requestHost0118 = "z.moatads.com";
		int    requestPort0118 = 443;
		String requestFile0118 = "/sharethroughv2465247317527/moatad.js" +
				"?moatClientLevel1=04c75099" +
				"&moatClientLevel2=DScT9Lxk9xjW6c2bnqMoZFRZLE" +
				"&moatClientLevel3=sfp-DSPag5ZnkXa6VQBEAzCUCUBaTS" +
				"&moatClientLevel4=DSkJMvmvRtd5VwmYFwAcaPUJEb" +
				"&moatClientSlicer1=1c23453dc1379d1ca8d1af5a" +
				"&moatClientSlicer2=e38e2aab" +
				"&zMoatDSP=sfp" +
				"&zMoatURLFunc=str-third-party-sfp-DSPag5ZnkXa6VQBEAzCUCUBaTS-e38e2aab" +
				"&zMoatIsInView=str-visibility-sfp-DSPag5ZnkXa6VQBEAzCUCUBaTS-e38e2aab" +
				"&zMoatTimeInView=str-time-sfp-DSPag5ZnkXa6VQBEAzCUCUBaTS-e38e2aab" +
				"&_=1477307051491";
		String requestHeader0118 = "GET " + requestFile0118 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: z.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0118, requestHost0118, requestPort0118, requestHeader0118, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0118 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/X-JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 60764
		// content test algorithm: check size +/- 5%, defined content size = 60764
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/X-JAVASCRIPT", null, 60764, 5);		// Test [118] <- Index 118
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [119] <- WEB ADMIN Index 127 ---
		String requestProt0119 = "http";
		String requestHost0119 = "b.sharethrough.com";
		int    requestPort0119 = 80;
		String requestFile0119 = "/butler" +
				"?session=cb7979c6-2415-4cf5-9c3a-b27328c5b0d9" +
				"&bwidth=960" +
				"&bheight=950" +
				"&pwidth=300" +
				"&pheight=140.0833282470703" +
				"&pxoff=650" +
				"&pyoff=1102" +
				"&pkey=XABekEh4zryPunytceAQeqty" +
				"&ckey=sfp-DSuhRYegqnLoBoCdvjcyyP9NEy" +
				"&vkey=DSHL2iv5NxbvuBSSemUC24QCBU" +
				"&arid=8c455f65-4e2a-4160-b76b-c32b2c081f66" +
				"&awid=4a50ccb2-4aa5-4006-9892-b8a67c82632c" +
				"&renderInPlace=false" +
				"&placementIndex=1" +
				"&twidth=183" +
				"&theight=103" +
				"&type=impression" +
				"&bkuuid=" +
				"&bkstatus=not_available" +
				"&pref=" +
				"&ploc=http%253A%252F%252Fedition.cnn.com%252F" +
				"&ua=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.12%3B%20rv%3A49.0)%20Gecko%2F20100101%20Firefox%2F49.0" +
				"&umtime=1477307058067" +
				"&uid=";
		String requestHeader0119 = "GET " + requestFile0119 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.sharethrough.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0119, requestHost0119, requestPort0119, requestHeader0119, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0119 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 0, 5);		// Test [119] <- Index 119
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [120] <- WEB ADMIN Index 128 ---
		String requestProt0120 = "https";
		String requestHost0120 = "z.moatads.com";
		int    requestPort0120 = 443;
		String requestFile0120 = "/sharethroughv2465247317527/moatad.js" +
				"?moatClientLevel1=04c75099" +
				"&moatClientLevel2=DScT9Lxk9xjW6c2bnqMoZFRZLE" +
				"&moatClientLevel3=sfp-DSuhRYegqnLoBoCdvjcyyP9NEy" +
				"&moatClientLevel4=DSHL2iv5NxbvuBSSemUC24QCBU" +
				"&moatClientSlicer1=1c23453dc1379d1ca8d1af5a" +
				"&moatClientSlicer2=XABekEh4zryPunytceAQeqty" +
				"&zMoatDSP=sfp" +
				"&zMoatURLFunc=str-third-party-sfp-DSuhRYegqnLoBoCdvjcyyP9NEy-XABekEh4zryPunytceAQeqty" +
				"&zMoatIsInView=str-visibility-sfp-DSuhRYegqnLoBoCdvjcyyP9NEy-XABekEh4zryPunytceAQeqty" +
				"&zMoatTimeInView=str-time-sfp-DSuhRYegqnLoBoCdvjcyyP9NEy-XABekEh4zryPunytceAQeqty" +
				"&_=1477307051492";
		String requestHeader0120 = "GET " + requestFile0120 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: z.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0120, requestHost0120, requestPort0120, requestHeader0120, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0120 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/X-JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 60764
		// content test algorithm: check size +/- 5%, defined content size = 60764
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/X-JAVASCRIPT", null, 60764, 5);		// Test [120] <- Index 120
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_5 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_6.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_6(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 7 of 26)
		// -----------------------------------------



		// --- HTTP REQUEST: Test [121] <- WEB ADMIN Index 129 ---
		String requestProt0121 = "http";
		String requestHost0121 = "www.youtube.com";
		int    requestPort0121 = 80;
		String requestFile0121 = "/iframe_api";
		String requestHeader0121 = "GET " + requestFile0121 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.youtube.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0121, requestHost0121, requestPort0121, requestHeader0121, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0121 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 744
		// content test algorithm: check size +/- 5%, defined content size = 744
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JAVASCRIPT", null, 744, 5);		// Test [121] <- Index 121
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [122] <- WEB ADMIN Index 133 ---
		String requestProt0122 = "http";
		String requestHost0122 = "pagead2.googlesyndication.com";
		int    requestPort0122 = 80;
		String requestFile0122 = "/activeview" +
				"?avi=Bp0rFr-oNWMq9M4WPZLGbt8gPAAAAABABOAHIAQLAAgLgAgDIA5kE4AQBoAYU" +
				"&cid=CAASFeRotPJtAXwnGOcleqzoNoDXcmUH-Q" +
				"&id=osdim" +
				"&ti=1" +
				"&adk=401663639" +
				"&p=0,0,0,0" +
				"&tos=0,0,0,0,0" +
				"&mtos=0,0,0,0,0" +
				"&rs=3" +
				"&ht=0" +
				"&mc=0" +
				"&lte=-1" +
				"&bas=0" +
				"&bac=0" +
				"&fp=correlator%3D2928785739607866%26eid%3D108809080%252C108809133%252C108809146%252C108809136%26iu%3D%252F8663477%252FCNNi%252Fhomepage%26oid%3D3%26url%3Dhttp%253A%252F%252Fedition.cnn.com%252F" +
				"&afp=%26output%3Djson_html%26impl%3Dfif%26dt%3D1477307055653%26adx%3D0%26ady%3D0%26ifi%3D2%26flash%3D23.0.0" +
				"&r=u" +
				"&bs=960,950" +
				"&bos=960,1057" +
				"&ps=960,7262" +
				"&ss=1920,1080" +
				"&tt=1565" +
				"&pt=-1" +
				"&deb=1-0-6-2-2--1" +
				"&tvt=298" +
				"&uc=1" +
				"&tgt=nf" +
				"&cl=0";
		String requestHeader0122 = "GET " + requestFile0122 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pagead2.googlesyndication.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0122, requestHost0122, requestPort0122, requestHeader0122, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0122 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [122] <- Index 122
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [123] <- WEB ADMIN Index 134 ---
		String requestProt0123 = "http";
		String requestHost0123 = "beacon.krxd.net";
		int    requestPort0123 = 80;
		String requestFile0123 = "/optout_check" +
				"?callback=Krux.ns._default.kxjsonp_optOutCheck";
		String requestHeader0123 = "GET " + requestFile0123 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: beacon.krxd.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0123, requestHost0123, requestPort0123, requestHeader0123, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0123 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 90
		// content test algorithm: check size +/- 5%, defined content size = 90
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 90, 5);		// Test [123] <- Index 123
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [124] <- WEB ADMIN Index 135 ---
		String requestProt0124 = "http";
		String requestHost0124 = "social-login.cnn.com";
		int    requestPort0124 = 80;
		String requestFile0124 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22loadc%22%2C%22time%22%3A%221477307053820%22%2C%22reportData%22%3A%7B%22sref%22%3A%22%22%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R2684800261";
		String requestHeader0124 = "GET " + requestFile0124 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0124, requestHost0124, requestPort0124, requestHeader0124, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0124 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [124] <- Index 124
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [125] <- WEB ADMIN Index 136 ---
		String requestProt0125 = "http";
		String requestHost0125 = "beacon.krxd.net";
		int    requestPort0125 = 80;
		String requestFile0125 = "/pixel.gif" +
				"?source=smarttag" +
				"&fired=report" +
				"&confid=ITb_9Zup" +
				"&_kpid=e9eaedd3-c1da-4334-82f0-d7e3ff883c87" +
				"&_kcp_s=CNN%20International%20Edition" +
				"&_kcp_d=edition.cnn.com" +
				"&_knifr=14" +
				"&_kua_kx_tz=-120" +
				"&geo_country=se" +
				"&geo_region=ab" +
				"&_kua_kx_lang=en-gb" +
				"&_kua_kx_tech_browser_language=en-gb" +
				"&_kua_kx_geo_country=se" +
				"&_kua_kx_geo_region=ab" +
				"&_kua_kx_tech_browser=Firefox%204" +
				"&_kua_kx_tech_manufacturer=Apple%20Inc." +
				"&_kua_kx_tech_device=Computer" +
				"&_kua_kx_tech_os=Mac%20OS%20X" +
				"&_kua_turner_guid=580de97e063d0a0a3c875a117700647f" +
				"&_kua_aa_id=2C06F4C0851D16CD-600001280000E699" +
				"&_kua_af_id=0DE0D1A7EC740073-0D35F412D19C24F3" +
				"&_kua_kx_whistle=0" +
				"&_kpa_cnn_international_site=cnn_international" +
				"&_kpa_cnn_international_rollup=homepage" +
				"&_kpa_keywords=breaking%20news%2C%20news%20online%2C%20U.S.%20news%2C%20world%20news%2C%20developing%20story%2C%20news%20video%2C%20CNN%20news%2C%20weather%2C%20business%2C%20money%2C%20politics%2C%20law%2C%20technology%2C%20entertainment%2C%20education%2C%20travel%2C%20health%2C%20special%20reports%2C%20autos%2C%20CNN%20TV" +
				"&_kpa_cnn_international_lob=news" +
				"&_kpa_cnn_international_brand=cnn" +
				"&_kpa_cnn_international_bizunit=cnn%20international" +
				"&_kpa_cnn_international_sitename=edition.cnn.com" +
				"&_kpa_cnn_international_sitesectionlevel1=cnn%20homepage" +
				"&_kpa_cnn_international_sitesectionlevel2=cnn%20homepage%3Anvs" +
				"&t_navigation_type=0" +
				"&t_dns=0" +
				"&t_tcp=0" +
				"&t_http_request=-1" +
				"&t_http_response=1" +
				"&t_content_ready=918" +
				"&t_window_load=0" +
				"&t_redirect=0" +
				"&interchange_ran=true" +
				"&store_user=q7dgd6wiu" +
				"&userdata_was_requested=true" +
				"&userdata_did_respond=true" +
				"&store_user_after=q7dgd6wiu" +
				"&_kurl_=http%3A%2F%2Fwww.cnn.com" +
				"&userdata_user=K2kp92OU%2Cq7dgd6wiu" +
				"&sview=1" +
				"&kplt5=23412" +
				"&kplt7=23445" +
				"&kplt9=23474" +
				"&kplt10=23477" +
				"&jsonp_requests=%2F%2Fbeacon.krxd.net%2Foptout_check%2C404%2C%2F%2Fcdn.krxd.net%2Fuserdata%2Fget%2C188";
		String requestHeader0125 = "GET " + requestFile0125 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: beacon.krxd.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0125, requestHost0125, requestPort0125, requestHeader0125, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0125 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, "IMAGE/GIF", null, 0, 5);		// Test [125] <- Index 125
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [126] <- WEB ADMIN Index 137 ---
		String requestProt0126 = "https";
		String requestHost0126 = "adx.adnxs.com";
		int    requestPort0126 = 443;
		String requestFile0126 = "/getuid" +
				"?https%3A%2F%2Fcm.g.doubleclick.net%2Fpixel%3Fgoogle_nid%3Dappnexus1%26google_hm%3D%24%7BBASE64_UID_ENC%7D%26google_push=" +
				"&google_gid=CAESEAXqPOuexA9axIQw7nPpbE4" +
				"&google_cver=1" +
				"&google_push=AHNF13Jqc2Fz2xbGn87-K7ee8WYfs5Syp_PWoIWKyg";
		String requestHeader0126 = "GET " + requestFile0126 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: adx.adnxs.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0126, requestHost0126, requestPort0126, requestHeader0126, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0126 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [126] <- Index 126
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [127] <- WEB ADMIN Index 138 ---
		String requestProt0127 = "https";
		String requestHost0127 = "cm.g.doubleclick.net";
		int    requestPort0127 = 443;
		String requestFile0127 = "/pixel" +
				"?google_nid=appnexus1" +
				"&google_hm=NTk3MzAxODA2MTU0ODk4MTY3NA%3D%3D" +
				"&google_push=" +
				"&google_gid=CAESEAXqPOuexA9axIQw7nPpbE4" +
				"&google_cver=1" +
				"&google_push=AHNF13Jqc2Fz2xbGn87-K7ee8WYfs5Syp_PWoIWKyg";
		String requestHeader0127 = "GET " + requestFile0127 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: cm.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0127, requestHost0127, requestPort0127, requestHeader0127, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0127 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/PNG", header text fragment = [verification disabled], recorded content size = 170
		// content test algorithm: check size +/- 5%, defined content size = 170
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/PNG", null, 170, 5);		// Test [127] <- Index 127
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [128] <- WEB ADMIN Index 139 ---
		String requestProt0128 = "https";
		String requestHost0128 = "www.facebook.com";
		int    requestPort0128 = 443;
		String requestFile0128 = "/connect/ping" +
				"?client_id=80401312489" +
				"&domain=edition.cnn.com" +
				"&origin=1" +
				"&redirect_uri=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2FfTmIQU3LxvB.js%3Fversion%3D42%23cb%3Df23f71f534989da%26domain%3Dedition.cnn.com%26origin%3Dhttp%253A%252F%252Fedition.cnn.com%252Ff378cffc77a111a%26relation%3Dparent" +
				"&response_type=token%2Csigned_request%2Ccode" +
				"&sdk=joey";
		String requestHeader0128 = "GET " + requestFile0128 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0128, requestHost0128, requestPort0128, requestHeader0128, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0128 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [128] <- Index 128
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [129] <- WEB ADMIN Index 140 ---
		String requestProt0129 = "http";
		String requestHost0129 = "mabping.chartbeat.net";
		int    requestPort0129 = 80;
		String requestFile0129 = "/ping/mab" +
				"?h=edition.cnn.com" +
				"&p=%2F" +
				"&d=edition.cnn.com" +
				"&u=DK-3L5D9nIqOBXmMI4" +
				"&c=0" +
				"&x=[e0001b8a]" +
				"&v=A" +
				"&ml=m" +
				"&e=-1";
		String requestHeader0129 = "GET " + requestFile0129 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: mabping.chartbeat.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0129, requestHost0129, requestPort0129, requestHeader0129, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0129 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [129] <- Index 129
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [130] <- WEB ADMIN Index 141 ---
		String requestProt0130 = "http";
		String requestHost0130 = "ping.chartbeat.net";
		int    requestPort0130 = 80;
		String requestFile0130 = "/ping" +
				"?h=edition.cnn.com" +
				"&p=%2F" +
				"&u=DK-3L5D9nIqOBXmMI4" +
				"&d=edition.cnn.com" +
				"&g=37612" +
				"&n=1" +
				"&f=00001" +
				"&c=0" +
				"&x=0" +
				"&m=0" +
				"&y=7262" +
				"&o=960" +
				"&w=950" +
				"&j=45" +
				"&R=1" +
				"&W=0" +
				"&I=0" +
				"&E=0" +
				"&e=0" +
				"&r=" +
				"&b=8534" +
				"&t=CODTOgCa3BMm8GfOkqaJWQI_YTq" +
				"&V=83" +
				"&i=CNN%20-%20Breaking%20News%2C%20U.S.%2C%20World%2C%20Weather%2C%20Entertainment%20%26%20Video%20News" +
				"&tz=-120" +
				"&sn=1" +
				"&EE=0" +
				"&_";
		String requestHeader0130 = "GET " + requestFile0130 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ping.chartbeat.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0130, requestHost0130, requestPort0130, requestHeader0130, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0130 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [130] <- Index 130
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [131] <- WEB ADMIN Index 142 ---
		String requestProt0131 = "http";
		String requestHost0131 = "pagead2.googlesyndication.com";
		int    requestPort0131 = 80;
		String requestFile0131 = "/activeview" +
				"?avi=BETk3r-oNWIKHOIHStgfPp47wCQDf0JPy5QIAABABOAHIAQHgAgDIA5oE4AQBwhMGGP2y-_UD" +
				"&cid=CAASFeRolFntjzWGDNOTsY3R2gLJVpcdVw" +
				"&id=osdim" +
				"&ti=1" +
				"&adk=1154918749" +
				"&p=714,650,964,950" +
				"&tos=0,1215,0,0,0" +
				"&mtos=0,1215,1215,1215,1215" +
				"&rs=3" +
				"&ht=0" +
				"&tfs=3014" +
				"&tls=4229" +
				"&mc=0.94" +
				"&lte=0.94" +
				"&bas=0" +
				"&bac=0" +
				"&fp=correlator%3D2928785739607866%26eid%3D108809080%252C108809133%252C108809146%252C108809136%26iu%3D%252F8663477%252FCNNi%252Fhomepage%26oid%3D3%26url%3Dhttp%253A%252F%252Fedition.cnn.com%252F" +
				"&afp=%26output%3Djson_html%26impl%3Dfif%26dt%3D1477307055658%26adx%3D0%26ady%3D0%26ifi%3D3%26flash%3D23.0.0" +
				"&r=u" +
				"&bs=960,950" +
				"&bos=960,1057" +
				"&ps=960,7262" +
				"&ss=1920,1080" +
				"&tt=558" +
				"&pt=3673" +
				"&deb=1-6-6-20-12-5" +
				"&tvt=2964" +
				"&uc=2" +
				"&tgt=nf" +
				"&cl=0";
		String requestHeader0131 = "GET " + requestFile0131 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pagead2.googlesyndication.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0131, requestHost0131, requestPort0131, requestHeader0131, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0131 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [131] <- Index 131
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [132] <- WEB ADMIN Index 143 ---
		String requestProt0132 = "http";
		String requestHost0132 = "log.outbrain.com";
		int    requestPort0132 = 80;
		String requestFile0132 = "/loggerServices/widgetGlobalEvent" +
				"?eT=3" +
				"&tm=8657" +
				"&pid=235" +
				"&sid=171366" +
				"&wId=165" +
				"&wRV=01001112" +
				"&rId=beb7e9a1a588f6a780cd7af1116baaa0" +
				"&idx=1" +
				"&pvId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&org=5" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=1" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0132 = "GET " + requestFile0132 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0132, requestHost0132, requestPort0132, requestHeader0132, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0132 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [132] <- Index 132
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [133] <- WEB ADMIN Index 144 ---
		String requestProt0133 = "http";
		String requestHost0133 = "log.outbrain.com";
		int    requestPort0133 = 80;
		String requestFile0133 = "/loggerServices/widgetGlobalEvent" +
				"?eT=3" +
				"&tm=8655" +
				"&pid=235" +
				"&sid=171366" +
				"&wId=164" +
				"&wRV=01001112" +
				"&rId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&idx=0" +
				"&pvId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&org=5" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=0" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0133 = "GET " + requestFile0133 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0133, requestHost0133, requestPort0133, requestHeader0133, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0133 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [133] <- Index 133
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [134] <- WEB ADMIN Index 145 ---
		String requestProt0134 = "http";
		String requestHost0134 = "log.outbrain.com";
		int    requestPort0134 = 80;
		String requestFile0134 = "/loggerServices/widgetGlobalEvent" +
				"?eT=3" +
				"&tm=8831" +
				"&pid=235" +
				"&sid=171366" +
				"&wId=163" +
				"&wRV=01001112" +
				"&rId=bbeb24a5c0fed0b470e2342761cc380b" +
				"&idx=2" +
				"&pvId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&org=5" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=2" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0134 = "GET " + requestFile0134 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0134, requestHost0134, requestPort0134, requestHeader0134, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0134 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [134] <- Index 134
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [135] <- WEB ADMIN Index 146 ---
		String requestProt0135 = "http";
		String requestHost0135 = "log.outbrain.com";
		int    requestPort0135 = 80;
		String requestFile0135 = "/loggerServices/widgetGlobalEvent" +
				"?eT=3" +
				"&tm=8832" +
				"&pid=235" +
				"&sid=171366" +
				"&wId=160" +
				"&wRV=01001112" +
				"&rId=a15b9314404fbdf2ad89ba6a885a903e" +
				"&idx=3" +
				"&pvId=1e6c0456f6fdfd6dfac3b22865815587" +
				"&org=5" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=3" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0135 = "GET " + requestFile0135 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0135, requestHost0135, requestPort0135, requestHeader0135, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0135 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [135] <- Index 135
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [136] <- WEB ADMIN Index 147 ---
		String requestProt0136 = "http";
		String requestHost0136 = "jadserve.postrelease.com";
		int    requestPort0136 = 80;
		String requestFile0136 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAcV0LA" +
				"&ord=963126755" +
				"&ntv_it";
		String requestHeader0136 = "GET " + requestFile0136 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0136, requestHost0136, requestPort0136, requestHeader0136, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0136 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [136] <- Index 136
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [137] <- WEB ADMIN Index 148 ---
		String requestProt0137 = "http";
		String requestHost0137 = "jadserve.postrelease.com";
		int    requestPort0137 = 80;
		String requestFile0137 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAb10LA" +
				"&ord=-169300523" +
				"&ntv_it";
		String requestHeader0137 = "GET " + requestFile0137 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0137, requestHost0137, requestPort0137, requestHeader0137, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0137 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [137] <- Index 137
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [138] <- WEB ADMIN Index 149 ---
		String requestProt0138 = "http";
		String requestHost0138 = "jadserve.postrelease.com";
		int    requestPort0138 = 80;
		String requestFile0138 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAc10LA" +
				"&ord=1597890314" +
				"&ntv_it";
		String requestHeader0138 = "GET " + requestFile0138 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0138, requestHost0138, requestPort0138, requestHeader0138, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0138 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [138] <- Index 138
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [139] <- WEB ADMIN Index 150 ---
		String requestProt0139 = "http";
		String requestHost0139 = "jadserve.postrelease.com";
		int    requestPort0139 = 80;
		String requestFile0139 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAcl0LA" +
				"&ord=-1384390811" +
				"&ntv_it";
		String requestHeader0139 = "GET " + requestFile0139 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0139, requestHost0139, requestPort0139, requestHeader0139, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0139 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [139] <- Index 139
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [140] <- WEB ADMIN Index 151 ---
		String requestProt0140 = "http";
		String requestHost0140 = "jadserve.postrelease.com";
		int    requestPort0140 = 80;
		String requestFile0140 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAcF0LA" +
				"&ord=-2019980856" +
				"&ntv_it";
		String requestHeader0140 = "GET " + requestFile0140 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0140, requestHost0140, requestPort0140, requestHeader0140, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0140 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [140] <- Index 140
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_6 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_7.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_7(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 8 of 26)
		// -----------------------------------------



		// --- HTTP REQUEST: Test [141] <- WEB ADMIN Index 152 ---
		String requestProt0141 = "http";
		String requestHost0141 = "pagead2.googlesyndication.com";
		int    requestPort0141 = 80;
		String requestFile0141 = "/activeview" +
				"?avi=B7xu-r-oNWM29M4WPZLGbt8gPAAAAABABOAHIAQnAAgLgAgDgBAGgBi8" +
				"&cid=CAASFeRoXuFY74khCl89iIdZqLBjHOtgEw" +
				"&id=osdim" +
				"&ti=1" +
				"&adk=2977233875" +
				"&p=1760,330,2010,630" +
				"&tos=474,296,707,0,0" +
				"&mtos=474,770,1477,1477,1477" +
				"&rs=3" +
				"&ht=0" +
				"&tfs=5208" +
				"&tls=6685" +
				"&mc=1" +
				"&lte=0" +
				"&bas=0" +
				"&bac=0" +
				"&fp=correlator%3D2928785739607866%26eid%3D108809080%252C108809133%252C108809146%252C108809136%26iu%3D%252F8663477%252FCNNi%252Fhomepage%26oid%3D3%26url%3Dhttp%253A%252F%252Fedition.cnn.com%252F" +
				"&afp=%26output%3Djson_html%26impl%3Dfif%26dt%3D1477307055664%26adx%3D0%26ady%3D0%26ifi%3D5%26flash%3D23.0.0" +
				"&r=u" +
				"&bs=960,950" +
				"&bos=960,1057" +
				"&ps=960,7262" +
				"&ss=1920,1080" +
				"&tt=3012" +
				"&pt=3673" +
				"&deb=1-6-6-33-27-5" +
				"&tvt=5418" +
				"&uc=23" +
				"&tgt=IFRAME" +
				"&cl=1";
		String requestHeader0141 = "GET " + requestFile0141 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pagead2.googlesyndication.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0141, requestHost0141, requestPort0141, requestHeader0141, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0141 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [141] <- Index 141
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [142] <- WEB ADMIN Index 153 ---
		String requestProt0142 = "http";
		String requestHost0142 = "jadserve.postrelease.com";
		int    requestPort0142 = 80;
		String requestFile0142 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAdF0LA" +
				"&ord=1330315130" +
				"&ntv_it";
		String requestHeader0142 = "GET " + requestFile0142 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0142, requestHost0142, requestPort0142, requestHeader0142, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0142 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [142] <- Index 142
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [143] <- WEB ADMIN Index 154 ---
		String requestProt0143 = "http";
		String requestHost0143 = "jadserve.postrelease.com";
		int    requestPort0143 = 80;
		String requestFile0143 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAeF0LA" +
				"&ord=1243205720" +
				"&ntv_it";
		String requestHeader0143 = "GET " + requestFile0143 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0143, requestHost0143, requestPort0143, requestHeader0143, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0143 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [143] <- Index 143
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [144] <- WEB ADMIN Index 155 ---
		String requestProt0144 = "http";
		String requestHost0144 = "jadserve.postrelease.com";
		int    requestPort0144 = 80;
		String requestFile0144 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAdl0LA" +
				"&ord=2141632272" +
				"&ntv_it";
		String requestHeader0144 = "GET " + requestFile0144 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0144, requestHost0144, requestPort0144, requestHeader0144, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0144 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [144] <- Index 144
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [145] <- WEB ADMIN Index 156 ---
		String requestProt0145 = "http";
		String requestHost0145 = "jadserve.postrelease.com";
		int    requestPort0145 = 80;
		String requestFile0145 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAdV0LA" +
				"&ord=1452062124" +
				"&ntv_it";
		String requestHeader0145 = "GET " + requestFile0145 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0145, requestHost0145, requestPort0145, requestHeader0145, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0145 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [145] <- Index 145
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [146] <- WEB ADMIN Index 157 ---
		String requestProt0146 = "http";
		String requestHost0146 = "jadserve.postrelease.com";
		int    requestPort0146 = 80;
		String requestFile0146 = "/trk.gif" +
				"?ntv_at=304" +
				"&ntv_a=AAAAAAAAAAd10LA" +
				"&ord=1583033121" +
				"&ntv_it";
		String requestHeader0146 = "GET " + requestFile0146 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0146, requestHost0146, requestPort0146, requestHeader0146, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0146 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [146] <- Index 146
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [147] <- WEB ADMIN Index 158 ---
		String requestProt0147 = "http";
		String requestHost0147 = "b.sharethrough.com";
		int    requestPort0147 = 80;
		String requestFile0147 = "/butler" +
				"?session=cb7979c6-2415-4cf5-9c3a-b27328c5b0d9" +
				"&bwidth=960" +
				"&bheight=950" +
				"&pwidth=293.29998779296875" +
				"&pheight=251" +
				"&pxoff=10" +
				"&pyoff=3313" +
				"&pkey=e38e2aab" +
				"&ckey=sfp-DSPag5ZnkXa6VQBEAzCUCUBaTS" +
				"&vkey=DSkJMvmvRtd5VwmYFwAcaPUJEb" +
				"&arid=098674cb-07d9-4852-a56c-f0d0422dfb62" +
				"&awid=248acadb-916c-4a51-bdea-05049f03c7c8" +
				"&renderInPlace=false" +
				"&placementIndex=1" +
				"&twidth=293" +
				"&theight=169" +
				"&type=visible" +
				"&bkuuid=" +
				"&bkstatus=not_available" +
				"&pref=" +
				"&ploc=http%253A%252F%252Fedition.cnn.com%252F" +
				"&ua=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.12%3B%20rv%3A49.0)%20Gecko%2F20100101%20Firefox%2F49.0" +
				"&umtime=1477307057838" +
				"&uid=";
		String requestHeader0147 = "GET " + requestFile0147 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.sharethrough.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0147, requestHost0147, requestPort0147, requestHeader0147, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0147 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 0, 5);		// Test [147] <- Index 147
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [148] <- WEB ADMIN Index 159 ---
		String requestProt0148 = "http";
		String requestHost0148 = "364bf52c.mpstat.us";
		int    requestPort0148 = 80;
		String requestFile0148 = "/";
		String requestContent0148 = 
				requestFileCache.readFile(getSymmetricEncryptContext(), "longTest_RequestContent0148.txt").getFileDataAsString();		// note: consider duplicated definition of this file name near end of the load test program - used for ZIP-dialogue in Project Navigator
		String requestHeader0148 = "POST " + requestFile0148 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: 364bf52c.mpstat.us\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"Content-Type: application/x-www-form-urlencoded\r\n" + 
				"Content-Length: " + requestContent0148.length() + "\r\n" + 		// Content-Length: 18969
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0148, requestHost0148, requestPort0148, requestHeader0148, requestContent0148.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0148 = null;		// support garbage collector to reduce memory
		requestContent0148 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, null, null, 0, 5);		// Test [148] <- Index 148
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [149] <- WEB ADMIN Index 160 ---
		String requestProt0149 = "https";
		String requestHost0149 = "pubads.g.doubleclick.net";
		int    requestPort0149 = 443;
		String requestFile0149 = "/activity;csk=BJ0NNr-oNWM29M4WPZLGbt8gPhdSk6wcAAAAQASAAOABYhcn84PwCYPGt_IWkH4IBF2NhLXB1Yi0yODU1MjQ3NDQxOTM1ODA1sgEPZWRpdGlvbi5jbm4uY29tugEJZ2ZwX2ltYWdlyAEJ2gEXaHR0cDovL2VkaXRpb24uY25uLmNvbS_AAgLgAgDqAhYvODY2MzQ3Ny9DTk5pL2hvbWVwYWdl-AL20R6QA8gGmAPgA6gDAdAEkE7gBAHSBQUQleycS5AGAaAGL9gHAOAHCw;&timestamp=1477307069254;eid2=72;ecn2=1;etm2=10;";
		String requestHeader0149 = "GET " + requestFile0149 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pubads.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0149, requestHost0149, requestPort0149, requestHeader0149, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0149 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [149] <- Index 149
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [150] <- WEB ADMIN Index 161 ---
		String requestProt0150 = "https";
		String requestHost0150 = "pubads.g.doubleclick.net";
		int    requestPort0150 = 443;
		String requestFile0150 = "/activity;csk=BagF0r-oNWM-9M4WPZLGbt8gPhdSk6wcAAAAQASAAOABYneX64PwCYPGt_IWkH4IBF2NhLXB1Yi0yODU1MjQ3NDQxOTM1ODA1sgEPZWRpdGlvbi5jbm4uY29tugEJZ2ZwX2ltYWdlyAEJ2gEXaHR0cDovL2VkaXRpb24uY25uLmNvbS_AAgLgAgDqAhYvODY2MzQ3Ny9DTk5pL2hvbWVwYWdl-AL20R6QA8gGmAPgA6gDAdAEkE7gBAHSBQUQleycS5AGAaAGL9gHAOAHCw;&timestamp=1477307069327;eid2=72;ecn2=1;etm2=10;";
		String requestHeader0150 = "GET " + requestFile0150 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pubads.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0150, requestHost0150, requestPort0150, requestHeader0150, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0150 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [150] <- Index 150
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [151] <- WEB ADMIN Index 162 ---
		String requestProt0151 = "http";
		String requestHost0151 = "ping.chartbeat.net";
		int    requestPort0151 = 80;
		String requestFile0151 = "/ping" +
				"?h=edition.cnn.com" +
				"&p=%2F" +
				"&u=DK-3L5D9nIqOBXmMI4" +
				"&d=edition.cnn.com" +
				"&g=37612" +
				"&n=1" +
				"&f=00001" +
				"&c=0.15" +
				"&x=2841" +
				"&m=2841" +
				"&y=7262" +
				"&o=960" +
				"&w=950" +
				"&j=45" +
				"&R=1" +
				"&W=0" +
				"&I=0" +
				"&E=9" +
				"&e=9" +
				"&r=" +
				"&KK=657::3490::CqqirfDGrujlFApEv6LYlJD6W2o_::*%5B%40id%3D%27intl_homepage2-zone-1%27%5D%2Fdiv%5B2%5D%2Fdiv%5B2%5D%2Fdiv%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B6%5D%2Farticle%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B2%5D%2Fh3%5B1%5D%2Fa%5B1%5D::c::http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn::BupFH2HyBBCBH9LmiHjss0CF_Ev" +
				"&b=8534" +
				"&t=CODTOgCa3BMm8GfOkqaJWQI_YTq" +
				"&V=83" +
				"&tz=-120" +
				"&sn=2" +
				"&eS=00e0" +
				"&eM=011e" +
				"&EE=9" +
				"&_";
		String requestHeader0151 = "GET " + requestFile0151 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ping.chartbeat.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0151, requestHost0151, requestPort0151, requestHeader0151, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0151 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [151] <- Index 151
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [152] <- WEB ADMIN Index 163 ---
		String requestProt0152 = "http";
		String requestHost0152 = "b.sharethrough.com";
		int    requestPort0152 = 80;
		String requestFile0152 = "/butler" +
				"?session=cb7979c6-2415-4cf5-9c3a-b27328c5b0d9" +
				"&bwidth=960" +
				"&bheight=950" +
				"&pwidth=293.29998779296875" +
				"&pheight=251" +
				"&pxoff=10" +
				"&pyoff=3313" +
				"&pkey=e38e2aab" +
				"&ckey=sfp-DSPag5ZnkXa6VQBEAzCUCUBaTS" +
				"&vkey=DSkJMvmvRtd5VwmYFwAcaPUJEb" +
				"&arid=098674cb-07d9-4852-a56c-f0d0422dfb62" +
				"&awid=248acadb-916c-4a51-bdea-05049f03c7c8" +
				"&renderInPlace=false" +
				"&placementIndex=1" +
				"&twidth=293" +
				"&theight=169" +
				"&duration=5500" +
				"&sibling=" +
				"&type=timeInView" +
				"&bkuuid=" +
				"&bkstatus=not_available" +
				"&pref=" +
				"&ploc=http%253A%252F%252Fedition.cnn.com%252F" +
				"&ua=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.12%3B%20rv%3A49.0)%20Gecko%2F20100101%20Firefox%2F49.0" +
				"&umtime=1477307069947" +
				"&uid=";
		String requestHeader0152 = "GET " + requestFile0152 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.sharethrough.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0152, requestHost0152, requestPort0152, requestHeader0152, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0152 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 0, 5);		// Test [152] <- Index 152
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [153] <- WEB ADMIN Index 164 ---
		String requestProt0153 = "http";
		String requestHost0153 = "b.sharethrough.com";
		int    requestPort0153 = 80;
		String requestFile0153 = "/butler" +
				"?session=cb7979c6-2415-4cf5-9c3a-b27328c5b0d9" +
				"&bwidth=960" +
				"&bheight=950" +
				"&pwidth=300" +
				"&pheight=140.0833282470703" +
				"&pxoff=650" +
				"&pyoff=1102" +
				"&pkey=XABekEh4zryPunytceAQeqty" +
				"&ckey=sfp-DSuhRYegqnLoBoCdvjcyyP9NEy" +
				"&vkey=DSHL2iv5NxbvuBSSemUC24QCBU" +
				"&arid=8c455f65-4e2a-4160-b76b-c32b2c081f66" +
				"&awid=4a50ccb2-4aa5-4006-9892-b8a67c82632c" +
				"&renderInPlace=false" +
				"&placementIndex=1" +
				"&twidth=183" +
				"&theight=103" +
				"&duration=202" +
				"&sibling=" +
				"&type=timeInView" +
				"&bkuuid=" +
				"&bkstatus=not_available" +
				"&pref=" +
				"&ploc=http%253A%252F%252Fedition.cnn.com%252F" +
				"&ua=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.12%3B%20rv%3A49.0)%20Gecko%2F20100101%20Firefox%2F49.0" +
				"&umtime=1477307069953" +
				"&uid=";
		String requestHeader0153 = "GET " + requestFile0153 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.sharethrough.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0153, requestHost0153, requestPort0153, requestHeader0153, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0153 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 0, 5);		// Test [153] <- Index 153
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [154] <- WEB ADMIN Index 165 ---
		log();
		log("# title: Experts claim they've solved Bermuda Triangle mystery - CNN Video");
		String requestProt0154 = "http";
		String requestHost0154 = "edition.cnn.com";
		int    requestPort0154 = 80;
		String requestFile0154 = "/videos/world/2016/10/23/bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn";
		String requestHeader0154 = "GET " + requestFile0154 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0154, requestHost0154, requestPort0154, requestHeader0154, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0154 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 39494
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Your luggage could follow you around the airport");		// Test [154] <- Index 154
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [155] <- WEB ADMIN Index 166 ---
		String requestProt0155 = "http";
		String requestHost0155 = "pagead2.googlesyndication.com";
		int    requestPort0155 = 80;
		String requestFile0155 = "/activeview" +
				"?avi=B7xu-r-oNWM29M4WPZLGbt8gPAAAAABABOAHIAQnAAgLgAgDgBAGgBi8" +
				"&cid=CAASFeRoXuFY74khCl89iIdZqLBjHOtgEw" +
				"&id=osdtos" +
				"&ti=1" +
				"&adk=2977233875" +
				"&p=1760,330,2010,630" +
				"&tos=474,296,1205,0,0" +
				"&mtos=474,770,1975,1975,1975" +
				"&rs=3" +
				"&ht=0" +
				"&tfs=5208" +
				"&tls=7078" +
				"&mc=1" +
				"&lte=0" +
				"&bas=0" +
				"&bac=0" +
				"&fp=correlator%3D2928785739607866%26eid%3D108809080%252C108809133%252C108809146%252C108809136%26iu%3D%252F8663477%252FCNNi%252Fhomepage%26oid%3D3%26url%3Dhttp%253A%252F%252Fedition.cnn.com%252F" +
				"&afp=%26output%3Djson_html%26impl%3Dfif%26dt%3D1477307055664%26adx%3D0%26ady%3D0%26ifi%3D5%26flash%3D23.0.0" +
				"&r=u" +
				"&bs=960,950" +
				"&bos=960,1057" +
				"&ps=960,7262" +
				"&ss=1920,1080" +
				"&tt=9319" +
				"&pt=3673" +
				"&deb=1-6-6-41-38-5" +
				"&tvt=11725" +
				"&uc=34" +
				"&tgt=IFRAME" +
				"&cl=1";
		String requestHeader0155 = "GET " + requestFile0155 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pagead2.googlesyndication.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0155, requestHost0155, requestPort0155, requestHeader0155, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0155 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [155] <- Index 155
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [156] <- WEB ADMIN Index 167 ---
		String requestProt0156 = "http";
		String requestHost0156 = "pagead2.googlesyndication.com";
		int    requestPort0156 = 80;
		String requestFile0156 = "/activeview" +
				"?avi=BETk3r-oNWIKHOIHStgfPp47wCQDf0JPy5QIAABABOAHIAQHgAgDIA5oE4AQBwhMGGP2y-_UD" +
				"&cid=CAASFeRolFntjzWGDNOTsY3R2gLJVpcdVw" +
				"&id=osdtos" +
				"&ti=1" +
				"&adk=1154918749" +
				"&p=714,650,964,950" +
				"&tos=241,1953,0,0,0" +
				"&mtos=241,2194,2194,2194,2194" +
				"&rs=3" +
				"&ht=0" +
				"&tfs=3014" +
				"&tls=5097" +
				"&mc=1" +
				"&lte=0.94" +
				"&bas=0" +
				"&bac=0" +
				"&fp=correlator%3D2928785739607866%26eid%3D108809080%252C108809133%252C108809146%252C108809136%26iu%3D%252F8663477%252FCNNi%252Fhomepage%26oid%3D3%26url%3Dhttp%253A%252F%252Fedition.cnn.com%252F" +
				"&afp=%26output%3Djson_html%26impl%3Dfif%26dt%3D1477307055658%26adx%3D0%26ady%3D0%26ifi%3D3%26flash%3D23.0.0" +
				"&r=u" +
				"&bs=960,950" +
				"&bos=960,1057" +
				"&ps=960,7262" +
				"&ss=1920,1080" +
				"&tt=9319" +
				"&pt=3673" +
				"&deb=1-6-6-41-38-5" +
				"&tvt=11725" +
				"&uc=28" +
				"&tgt=nf" +
				"&cl=0";
		String requestHeader0156 = "GET " + requestFile0156 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pagead2.googlesyndication.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0156, requestHost0156, requestPort0156, requestHeader0156, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0156 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [156] <- Index 156
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [157] <- WEB ADMIN Index 168 ---
		String requestProt0157 = "http";
		String requestHost0157 = "i2.cdn.turner.com";
		int    requestPort0157 = 80;
		String requestFile0157 = "/cnnnext/dam/assets/161023202431-bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan-00001016-large-169.jpg";
		String requestHeader0157 = "GET " + requestFile0157 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0157, requestHost0157, requestPort0157, requestHeader0157, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0157 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 49423
		// content test algorithm: check size +/- 5%, defined content size = 49423
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 49423, 5);		// Test [157] <- Index 157
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [158] <- WEB ADMIN Index 169 ---
		String requestProt0158 = "http";
		String requestHost0158 = "jadserve.postrelease.com";
		int    requestPort0158 = 80;
		String requestFile0158 = "/t" +
				"?ntv_url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&prx_referrer=http%3A%2F%2Fedition.cnn.com%2F";
		String requestHeader0158 = "GET " + requestFile0158 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0158, requestHost0158, requestPort0158, requestHeader0158, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0158 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 98
		// content test algorithm: check size +/- 5%, defined content size = 98
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 98, 5);		// Test [158] <- Index 158
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [159] <- WEB ADMIN Index 170 ---
		String requestProt0159 = "http";
		String requestHost0159 = "edition.cnn.com";
		int    requestPort0159 = 80;
		String requestFile0159 = "/data/ocs/section/videos/index.html:recommended-videos-stories/views/zones/common/zone-manager.html";
		String requestHeader0159 = "GET " + requestFile0159 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0159, requestHost0159, requestPort0159, requestHeader0159, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0159 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 550
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "div class=\"column zn__column--idx-1\"");		// Test [159] <- Index 159
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [160] <- WEB ADMIN Index 171 ---
		String requestProt0160 = "http";
		String requestHost0160 = "edition.cnn.com";
		int    requestPort0160 = 80;
		String requestFile0160 = "/data/ocs/section/videos/index.html:otherCollections/views/zones/common/zone-manager.html";
		String requestHeader0160 = "GET " + requestFile0160 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0160, requestHost0160, requestPort0160, requestHeader0160, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0160 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 3265
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Explore Arch Rock in the Channel Islands");		// Test [160] <- Index 160
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_7 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_8.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_8(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 9 of 26)
		// -----------------------------------------



		// --- HTTP REQUEST: Test [161] <- WEB ADMIN Index 172 ---
		String requestProt0161 = "http";
		String requestHost0161 = "edition.cnn.com";
		int    requestPort0161 = 80;
		String requestFile0161 = "/data/ocs/section/videos/index.html:recommended-digital-studios/views/zones/common/zone-manager.html";
		String requestHeader0161 = "GET " + requestFile0161 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0161, requestHost0161, requestPort0161, requestHeader0161, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0161 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 621
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "ul class=\"cn cn-list-hierarchical-xs cn--idx-1 cn-zoneAdContainer\"");		// Test [161] <- Index 161
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [162] <- WEB ADMIN Index 173 ---
		String requestProt0162 = "http";
		String requestHost0162 = "edition.cnn.com";
		int    requestPort0162 = 80;
		String requestFile0162 = "/data/ocs/section/videos/index.html:international-video-zone-3/views/zones/common/zone-manager.html";
		String requestHeader0162 = "GET " + requestFile0162 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0162, requestHost0162, requestPort0162, requestHeader0162, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0162 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 4923
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "How to eat dim sum like a Hong Kong local");		// Test [162] <- Index 162
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [163] <- WEB ADMIN Index 175 ---
		String requestProt0163 = "http";
		String requestHost0163 = "mab.chartbeat.com";
		int    requestPort0163 = 80;
		String requestFile0163 = "/mab_strategy/headline_testing/get_strategy/" +
				"?host=edition.cnn.com" +
				"&domain=edition.cnn.com" +
				"&path=%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn";
		String requestHeader0163 = "GET " + requestFile0163 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: mab.chartbeat.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0163, requestHost0163, requestPort0163, requestHeader0163, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0163 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 191
		// content test algorithm: check size +/- 5%, defined content size = 191
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 191, 5);		// Test [163] <- Index 163
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [164] <- WEB ADMIN Index 176 ---
		String requestProt0164 = "http";
		String requestHost0164 = "i2.cdn.turner.com";
		int    requestPort0164 = 80;
		String requestFile0164 = "/cnnnext/dam/assets/161023202431-bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan-00001016-small-169.jpg";
		String requestHeader0164 = "GET " + requestFile0164 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0164, requestHost0164, requestPort0164, requestHeader0164, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0164 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 13817
		// content test algorithm: check size +/- 5%, defined content size = 13817
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 13817, 5);		// Test [164] <- Index 164
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [165] <- WEB ADMIN Index 177 ---
		String requestProt0165 = "http";
		String requestHost0165 = "i2.cdn.turner.com";
		int    requestPort0165 = 80;
		String requestFile0165 = "/cnnnext/dam/assets/161005140925-counterfactual-nixon-image-4-small-169.jpg";
		String requestHeader0165 = "GET " + requestFile0165 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0165, requestHost0165, requestPort0165, requestHeader0165, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0165 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 11528
		// content test algorithm: check size +/- 5%, defined content size = 11528
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 11528, 5);		// Test [165] <- Index 165
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [166] <- WEB ADMIN Index 178 ---
		String requestProt0166 = "http";
		String requestHost0166 = "i2.cdn.turner.com";
		int    requestPort0166 = 80;
		String requestFile0166 = "/cnnnext/dam/assets/161020111033-kodak-ektra-thumbnail-small-169.jpg";
		String requestHeader0166 = "GET " + requestFile0166 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0166, requestHost0166, requestPort0166, requestHeader0166, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0166 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10434
		// content test algorithm: check size +/- 5%, defined content size = 10434
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10434, 5);		// Test [166] <- Index 166
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [167] <- WEB ADMIN Index 179 ---
		String requestProt0167 = "http";
		String requestHost0167 = "i2.cdn.turner.com";
		int    requestPort0167 = 80;
		String requestFile0167 = "/cnnnext/dam/assets/161020184458-murray-still-3-small-169.jpg";
		String requestHeader0167 = "GET " + requestFile0167 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0167, requestHost0167, requestPort0167, requestHeader0167, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0167 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9353
		// content test algorithm: check size +/- 5%, defined content size = 9353
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9353, 5);		// Test [167] <- Index 167
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [168] <- WEB ADMIN Index 180 ---
		String requestProt0168 = "http";
		String requestHost0168 = "i2.cdn.turner.com";
		int    requestPort0168 = 80;
		String requestFile0168 = "/cnnnext/dam/assets/161020171642-google-pop-up-nyc-small-169.jpg";
		String requestHeader0168 = "GET " + requestFile0168 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0168, requestHost0168, requestPort0168, requestHeader0168, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0168 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 11292
		// content test algorithm: check size +/- 5%, defined content size = 11292
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 11292, 5);		// Test [168] <- Index 168
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [169] <- WEB ADMIN Index 181 ---
		String requestProt0169 = "http";
		String requestHost0169 = "i2.cdn.turner.com";
		int    requestPort0169 = 80;
		String requestFile0169 = "/cnnnext/dam/assets/161019171918-ivanka-trump-fortune-most-powerful-women-summit-small-169.jpg";
		String requestHeader0169 = "GET " + requestFile0169 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0169, requestHost0169, requestPort0169, requestHeader0169, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0169 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 6409
		// content test algorithm: check size +/- 5%, defined content size = 6409
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 6409, 5);		// Test [169] <- Index 169
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [170] <- WEB ADMIN Index 182 ---
		String requestProt0170 = "http";
		String requestHost0170 = "i2.cdn.turner.com";
		int    requestPort0170 = 80;
		String requestFile0170 = "/cnnnext/dam/assets/161019174355-jon-bon-jovi-soul-foundation-small-169.png";
		String requestHeader0170 = "GET " + requestFile0170 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0170, requestHost0170, requestPort0170, requestHeader0170, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0170 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/PNG", header text fragment = [verification disabled], recorded content size = 45677
		// content test algorithm: check size +/- 5%, defined content size = 45677
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/PNG", null, 45677, 5);		// Test [170] <- Index 170
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [171] <- WEB ADMIN Index 183 ---
		String requestProt0171 = "http";
		String requestHost0171 = "i2.cdn.turner.com";
		int    requestPort0171 = 80;
		String requestFile0171 = "/cnnnext/dam/assets/161021091605-classic-ipod-small-169.png";
		String requestHeader0171 = "GET " + requestFile0171 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0171, requestHost0171, requestPort0171, requestHeader0171, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0171 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/PNG", header text fragment = [verification disabled], recorded content size = 45473
		// content test algorithm: check size +/- 5%, defined content size = 45473
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/PNG", null, 45473, 5);		// Test [171] <- Index 171
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [172] <- WEB ADMIN Index 184 ---
		String requestProt0172 = "http";
		String requestHost0172 = "i2.cdn.turner.com";
		int    requestPort0172 = 80;
		String requestFile0172 = "/cnnnext/dam/assets/161018165926-stephen-colbert-late-show-desk-small-169.jpg";
		String requestHeader0172 = "GET " + requestFile0172 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0172, requestHost0172, requestPort0172, requestHeader0172, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0172 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9086
		// content test algorithm: check size +/- 5%, defined content size = 9086
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9086, 5);		// Test [172] <- Index 172
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [173] <- WEB ADMIN Index 185 ---
		String requestProt0173 = "http";
		String requestHost0173 = "i2.cdn.turner.com";
		int    requestPort0173 = 80;
		String requestFile0173 = "/cnnnext/dam/assets/161018124933-trump-queens-home-exterior-small-169.jpg";
		String requestHeader0173 = "GET " + requestFile0173 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0173, requestHost0173, requestPort0173, requestHeader0173, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0173 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 12421
		// content test algorithm: check size +/- 5%, defined content size = 12421
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 12421, 5);		// Test [173] <- Index 173
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [174] <- WEB ADMIN Index 186 ---
		String requestProt0174 = "http";
		String requestHost0174 = "i2.cdn.turner.com";
		int    requestPort0174 = 80;
		String requestFile0174 = "/cnnnext/dam/assets/161019100950-maserati-levante-small-169.jpg";
		String requestHeader0174 = "GET " + requestFile0174 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0174, requestHost0174, requestPort0174, requestHeader0174, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0174 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15314
		// content test algorithm: check size +/- 5%, defined content size = 15314
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15314, 5);		// Test [174] <- Index 174
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [175] <- WEB ADMIN Index 187 ---
		String requestProt0175 = "http";
		String requestHost0175 = "i2.cdn.turner.com";
		int    requestPort0175 = 80;
		String requestFile0175 = "/cnnnext/dam/assets/161018084420-travelmate-suitcase-small-169.jpg";
		String requestHeader0175 = "GET " + requestFile0175 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0175, requestHost0175, requestPort0175, requestHeader0175, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0175 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10107
		// content test algorithm: check size +/- 5%, defined content size = 10107
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10107, 5);		// Test [175] <- Index 175
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [176] <- WEB ADMIN Index 188 ---
		String requestProt0176 = "http";
		String requestHost0176 = "i2.cdn.turner.com";
		int    requestPort0176 = 80;
		String requestFile0176 = "/cnnnext/dam/assets/161018150423-amy-schumer-donald-trump-split-file-small-169.jpg";
		String requestHeader0176 = "GET " + requestFile0176 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0176, requestHost0176, requestPort0176, requestHeader0176, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0176 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7810
		// content test algorithm: check size +/- 5%, defined content size = 7810
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7810, 5);		// Test [176] <- Index 176
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [177] <- WEB ADMIN Index 189 ---
		String requestProt0177 = "http";
		String requestHost0177 = "i2.cdn.turner.com";
		int    requestPort0177 = 80;
		String requestFile0177 = "/cnnnext/dam/assets/161017112413-trump-clinton-debate-small-169.jpg";
		String requestHeader0177 = "GET " + requestFile0177 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0177, requestHost0177, requestPort0177, requestHeader0177, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0177 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7199
		// content test algorithm: check size +/- 5%, defined content size = 7199
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7199, 5);		// Test [177] <- Index 177
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [178] <- WEB ADMIN Index 190 ---
		String requestProt0178 = "http";
		String requestHost0178 = "i2.cdn.turner.com";
		int    requestPort0178 = 80;
		String requestFile0178 = "/cnnnext/dam/assets/161018103216-mms-caramel-2-small-169.jpg";
		String requestHeader0178 = "GET " + requestFile0178 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0178, requestHost0178, requestPort0178, requestHeader0178, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0178 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7981
		// content test algorithm: check size +/- 5%, defined content size = 7981
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7981, 5);		// Test [178] <- Index 178
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [179] <- WEB ADMIN Index 191 ---
		String requestProt0179 = "http";
		String requestHost0179 = "i2.cdn.turner.com";
		int    requestPort0179 = 80;
		String requestFile0179 = "/cnnnext/dam/assets/161014202505-mark-burnett-with-donald-trump-file-small-169.jpg";
		String requestHeader0179 = "GET " + requestFile0179 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0179, requestHost0179, requestPort0179, requestHeader0179, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0179 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7810
		// content test algorithm: check size +/- 5%, defined content size = 7810
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7810, 5);		// Test [179] <- Index 179
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [180] <- WEB ADMIN Index 192 ---
		String requestProt0180 = "http";
		String requestHost0180 = "i2.cdn.turner.com";
		int    requestPort0180 = 80;
		String requestFile0180 = "/cnnnext/dam/assets/160324223127-art-basel-dancer-00010227-medium-tease.jpg";
		String requestHeader0180 = "GET " + requestFile0180 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0180, requestHost0180, requestPort0180, requestHeader0180, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0180 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10219
		// content test algorithm: check size +/- 5%, defined content size = 10219
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10219, 5);		// Test [180] <- Index 180
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_8 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_9.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_9(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 10 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [181] <- WEB ADMIN Index 193 ---
		String requestProt0181 = "http";
		String requestHost0181 = "i2.cdn.turner.com";
		int    requestPort0181 = 80;
		String requestFile0181 = "/cnnnext/dam/assets/160512162312-khalid-shafari-medium-tease.jpg";
		String requestHeader0181 = "GET " + requestFile0181 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0181, requestHost0181, requestPort0181, requestHeader0181, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0181 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 11703
		// content test algorithm: check size +/- 5%, defined content size = 11703
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 11703, 5);		// Test [181] <- Index 181
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [182] <- WEB ADMIN Index 194 ---
		String requestProt0182 = "http";
		String requestHost0182 = "i2.cdn.turner.com";
		int    requestPort0182 = 80;
		String requestFile0182 = "/cnnnext/dam/assets/160321111209-style-ferrari-nine-things-00012923-medium-tease.jpg";
		String requestHeader0182 = "GET " + requestFile0182 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0182, requestHost0182, requestPort0182, requestHeader0182, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0182 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9244
		// content test algorithm: check size +/- 5%, defined content size = 9244
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9244, 5);		// Test [182] <- Index 182
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [183] <- WEB ADMIN Index 195 ---
		String requestProt0183 = "http";
		String requestHost0183 = "i2.cdn.turner.com";
		int    requestPort0183 = 80;
		String requestFile0183 = "/cnnnext/dam/assets/160503134115-emma-watson-met-gala-medium-tease.jpg";
		String requestHeader0183 = "GET " + requestFile0183 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0183, requestHost0183, requestPort0183, requestHeader0183, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0183 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15017
		// content test algorithm: check size +/- 5%, defined content size = 15017
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15017, 5);		// Test [183] <- Index 183
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [184] <- WEB ADMIN Index 196 ---
		String requestProt0184 = "http";
		String requestHost0184 = "i2.cdn.turner.com";
		int    requestPort0184 = 80;
		String requestFile0184 = "/cnnnext/dam/assets/160421134543-36-prince-file-medium-tease.jpg";
		String requestHeader0184 = "GET " + requestFile0184 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0184, requestHost0184, requestPort0184, requestHeader0184, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0184 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10153
		// content test algorithm: check size +/- 5%, defined content size = 10153
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10153, 5);		// Test [184] <- Index 184
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [185] <- WEB ADMIN Index 197 ---
		String requestProt0185 = "http";
		String requestHost0185 = "i2.cdn.turner.com";
		int    requestPort0185 = 80;
		String requestFile0185 = "/cnnnext/dam/assets/151119203858-event-horizon-the-immobile-men-invading-hong-kong-natpkg-00011501-medium-tease.jpg";
		String requestHeader0185 = "GET " + requestFile0185 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0185, requestHost0185, requestPort0185, requestHeader0185, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0185 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 14984
		// content test algorithm: check size +/- 5%, defined content size = 14984
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 14984, 5);		// Test [185] <- Index 185
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [186] <- WEB ADMIN Index 198 ---
		String requestProt0186 = "http";
		String requestHost0186 = "i2.cdn.turner.com";
		int    requestPort0186 = 80;
		String requestFile0186 = "/cnnnext/dam/assets/141208113229-bond-car-3-story-body.jpg";
		String requestHeader0186 = "GET " + requestFile0186 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0186, requestHost0186, requestPort0186, requestHeader0186, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0186 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 19098
		// content test algorithm: check size +/- 5%, defined content size = 19098
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 19098, 5);		// Test [186] <- Index 186
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [187] <- WEB ADMIN Index 199 ---
		String requestProt0187 = "http";
		String requestHost0187 = "i2.cdn.turner.com";
		int    requestPort0187 = 80;
		String requestFile0187 = "/cnnnext/dam/assets/160707103810-lapo-elkann-tease-2-medium-tease.jpg";
		String requestHeader0187 = "GET " + requestFile0187 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0187, requestHost0187, requestPort0187, requestHeader0187, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0187 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 20502
		// content test algorithm: check size +/- 5%, defined content size = 20502
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 20502, 5);		// Test [187] <- Index 187
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [188] <- WEB ADMIN Index 200 ---
		String requestProt0188 = "http";
		String requestHost0188 = "i2.cdn.turner.com";
		int    requestPort0188 = 80;
		String requestFile0188 = "/cnnnext/dam/assets/160405224925-dim-sum-quirks-orig-pkg-00000606-medium-tease.jpg";
		String requestHeader0188 = "GET " + requestFile0188 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0188, requestHost0188, requestPort0188, requestHeader0188, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0188 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15359
		// content test algorithm: check size +/- 5%, defined content size = 15359
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15359, 5);		// Test [188] <- Index 188
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [189] <- WEB ADMIN Index 201 ---
		String requestProt0189 = "http";
		String requestHost0189 = "i2.cdn.turner.com";
		int    requestPort0189 = 80;
		String requestFile0189 = "/cnnnext/dam/assets/160323100940-airlander-10-getty-medium-tease.jpg";
		String requestHeader0189 = "GET " + requestFile0189 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0189, requestHost0189, requestPort0189, requestHeader0189, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0189 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 12951
		// content test algorithm: check size +/- 5%, defined content size = 12951
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 12951, 5);		// Test [189] <- Index 189
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [190] <- WEB ADMIN Index 202 ---
		String requestProt0190 = "http";
		String requestHost0190 = "i2.cdn.turner.com";
		int    requestPort0190 = 80;
		String requestFile0190 = "/cnnnext/dam/assets/151111151444-27-pools-damajagua-medium-tease.jpg";
		String requestHeader0190 = "GET " + requestFile0190 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0190, requestHost0190, requestPort0190, requestHeader0190, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0190 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15390
		// content test algorithm: check size +/- 5%, defined content size = 15390
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15390, 5);		// Test [190] <- Index 190
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [191] <- WEB ADMIN Index 203 ---
		String requestProt0191 = "http";
		String requestHost0191 = "i2.cdn.turner.com";
		int    requestPort0191 = 80;
		String requestFile0191 = "/cnnnext/dam/assets/160211142404-cool-underground-spaces-london-jsten-orig-00011024-medium-tease.jpg";
		String requestHeader0191 = "GET " + requestFile0191 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0191, requestHost0191, requestPort0191, requestHeader0191, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0191 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 19107
		// content test algorithm: check size +/- 5%, defined content size = 19107
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 19107, 5);		// Test [191] <- Index 191
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [192] <- WEB ADMIN Index 204 ---
		String requestProt0192 = "http";
		String requestHost0192 = "i2.cdn.turner.com";
		int    requestPort0192 = 80;
		String requestFile0192 = "/cnnnext/dam/assets/151104110925-poo-curry-japan-travel-00005230-medium-tease.jpg";
		String requestHeader0192 = "GET " + requestFile0192 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0192, requestHost0192, requestPort0192, requestHeader0192, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0192 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 18095
		// content test algorithm: check size +/- 5%, defined content size = 18095
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 18095, 5);		// Test [192] <- Index 192
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [193] <- WEB ADMIN Index 205 ---
		String requestProt0193 = "http";
		String requestHost0193 = "i2.cdn.turner.com";
		int    requestPort0193 = 80;
		String requestFile0193 = "/cnnnext/dam/assets/151027115113-polynesia-medium-tease.jpg";
		String requestHeader0193 = "GET " + requestFile0193 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0193, requestHost0193, requestPort0193, requestHeader0193, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0193 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 22316
		// content test algorithm: check size +/- 5%, defined content size = 22316
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 22316, 5);		// Test [193] <- Index 193
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [194] <- WEB ADMIN Index 206 ---
		String requestProt0194 = "http";
		String requestHost0194 = "i2.cdn.turner.com";
		int    requestPort0194 = 80;
		String requestFile0194 = "/cnnnext/dam/assets/160203151744-underwater-museum-lanzarote-medium-tease.jpg";
		String requestHeader0194 = "GET " + requestFile0194 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0194, requestHost0194, requestPort0194, requestHeader0194, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0194 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 12512
		// content test algorithm: check size +/- 5%, defined content size = 12512
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 12512, 5);		// Test [194] <- Index 194
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [195] <- WEB ADMIN Index 207 ---
		String requestProt0195 = "http";
		String requestHost0195 = "i2.cdn.turner.com";
		int    requestPort0195 = 80;
		String requestFile0195 = "/cnnnext/dam/assets/160706091912-getu-karst-mountains-china-orig-00000404-medium-tease.jpg";
		String requestHeader0195 = "GET " + requestFile0195 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0195, requestHost0195, requestPort0195, requestHeader0195, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0195 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 20470
		// content test algorithm: check size +/- 5%, defined content size = 20470
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 20470, 5);		// Test [195] <- Index 195
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [196] <- WEB ADMIN Index 208 ---
		String requestProt0196 = "http";
		String requestHost0196 = "i2.cdn.turner.com";
		int    requestPort0196 = 80;
		String requestFile0196 = "/cnnnext/dam/assets/160902174758-saints-and-miracles-animation-orig-00012830-super-tease.jpg";
		String requestHeader0196 = "GET " + requestFile0196 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0196, requestHost0196, requestPort0196, requestHeader0196, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0196 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 20485
		// content test algorithm: check size +/- 5%, defined content size = 20485
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 20485, 5);		// Test [196] <- Index 196
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [197] <- WEB ADMIN Index 209 ---
		String requestProt0197 = "http";
		String requestHost0197 = "i2.cdn.turner.com";
		int    requestPort0197 = 80;
		String requestFile0197 = "/cnnnext/dam/assets/160825175309-migrant-rescue-at-sea-01-super-tease.jpg";
		String requestHeader0197 = "GET " + requestFile0197 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0197, requestHost0197, requestPort0197, requestHeader0197, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0197 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 72114
		// content test algorithm: check size +/- 5%, defined content size = 72114
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 72114, 5);		// Test [197] <- Index 197
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [198] <- WEB ADMIN Index 210 ---
		String requestProt0198 = "http";
		String requestHost0198 = "i2.cdn.turner.com";
		int    requestPort0198 = 80;
		String requestFile0198 = "/cnnnext/dam/assets/160829153746-its-a-thing-kq-rave-6-super-tease.jpg";
		String requestHeader0198 = "GET " + requestFile0198 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0198, requestHost0198, requestPort0198, requestHeader0198, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0198 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 123590
		// content test algorithm: check size +/- 5%, defined content size = 123590
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 123590, 5);		// Test [198] <- Index 198
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [199] <- WEB ADMIN Index 211 ---
		String requestProt0199 = "http";
		String requestHost0199 = "i2.cdn.turner.com";
		int    requestPort0199 = 80;
		String requestFile0199 = "/cnnnext/dam/assets/160825151931-european-bison-poland-primeval-forest-orig-00000629-super-tease.jpg";
		String requestHeader0199 = "GET " + requestFile0199 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0199, requestHost0199, requestPort0199, requestHeader0199, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0199 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 146117
		// content test algorithm: check size +/- 5%, defined content size = 146117
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 146117, 5);		// Test [199] <- Index 199
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [200] <- WEB ADMIN Index 212 ---
		String requestProt0200 = "http";
		String requestHost0200 = "i2.cdn.turner.com";
		int    requestPort0200 = 80;
		String requestFile0200 = "/cnnnext/dam/assets/160613175555-assault-rifle-1-super-tease.jpg";
		String requestHeader0200 = "GET " + requestFile0200 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0200, requestHost0200, requestPort0200, requestHeader0200, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0200 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 185669
		// content test algorithm: check size +/- 5%, defined content size = 185669
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 185669, 5);		// Test [200] <- Index 200
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_9 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_10.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_10(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 11 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [201] <- WEB ADMIN Index 213 ---
		String requestProt0201 = "http";
		String requestHost0201 = "i2.cdn.turner.com";
		int    requestPort0201 = 80;
		String requestFile0201 = "/cnnnext/dam/assets/160622125544-kayaking-channel-islands-national-parks-nccorig-00002009-super-tease.jpg";
		String requestHeader0201 = "GET " + requestFile0201 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0201, requestHost0201, requestPort0201, requestHeader0201, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0201 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 131126
		// content test algorithm: check size +/- 5%, defined content size = 131126
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 131126, 5);		// Test [201] <- Index 201
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [202] <- WEB ADMIN Index 214 ---
		String requestProt0202 = "http";
		String requestHost0202 = "i2.cdn.turner.com";
		int    requestPort0202 = 80;
		String requestFile0202 = "/cnnnext/dam/assets/160708113221-who-is-theresa-may-oakley-orig-00004624-super-tease.jpg";
		String requestHeader0202 = "GET " + requestFile0202 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0202, requestHost0202, requestPort0202, requestHeader0202, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0202 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 149457
		// content test algorithm: check size +/- 5%, defined content size = 149457
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 149457, 5);		// Test [202] <- Index 202
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [203] <- WEB ADMIN Index 215 ---
		String requestProt0203 = "http";
		String requestHost0203 = "i2.cdn.turner.com";
		int    requestPort0203 = 80;
		String requestFile0203 = "/cnnnext/dam/assets/160404091153-future-of-adventure-kim-chambers-swims-01-super-tease.jpg";
		String requestHeader0203 = "GET " + requestFile0203 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0203, requestHost0203, requestPort0203, requestHeader0203, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0203 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 117347
		// content test algorithm: check size +/- 5%, defined content size = 117347
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 117347, 5);		// Test [203] <- Index 203
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [204] <- WEB ADMIN Index 216 ---
		String requestProt0204 = "http";
		String requestHost0204 = "i2.cdn.turner.com";
		int    requestPort0204 = 80;
		String requestFile0204 = "/cnnnext/dam/assets/160706082644-how-to-make-a-healthy-bed-1-super-tease.jpg";
		String requestHeader0204 = "GET " + requestFile0204 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0204, requestHost0204, requestPort0204, requestHeader0204, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0204 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 132661
		// content test algorithm: check size +/- 5%, defined content size = 132661
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 132661, 5);		// Test [204] <- Index 204
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [205] <- WEB ADMIN Index 217 ---
		String requestProt0205 = "http";
		String requestHost0205 = "i2.cdn.turner.com";
		int    requestPort0205 = 80;
		String requestFile0205 = "/cnnnext/dam/assets/160407100300-how-isis-govern-super-tease.jpg";
		String requestHeader0205 = "GET " + requestFile0205 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0205, requestHost0205, requestPort0205, requestHeader0205, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0205 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 72823
		// content test algorithm: check size +/- 5%, defined content size = 72823
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 72823, 5);		// Test [205] <- Index 205
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [206] <- WEB ADMIN Index 218 ---
		String requestProt0206 = "http";
		String requestHost0206 = "i2.cdn.turner.com";
		int    requestPort0206 = 80;
		String requestFile0206 = "/cnnnext/dam/assets/160407101833-amnesty-report-death-penalty-super-tease.png";
		String requestHeader0206 = "GET " + requestFile0206 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0206, requestHost0206, requestPort0206, requestHeader0206, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0206 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/PNG", header text fragment = [verification disabled], recorded content size = 914432
		// content test algorithm: check size +/- 5%, defined content size = 914432
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/PNG", null, 914432, 5);		// Test [206] <- Index 206
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [207] <- WEB ADMIN Index 219 ---
		String requestProt0207 = "http";
		String requestHost0207 = "i2.cdn.turner.com";
		int    requestPort0207 = 80;
		String requestFile0207 = "/cnnnext/dam/assets/141009182112-this-is-the-messy-truth-about-ebola-still-from-graphic-package-horizontal-large-gallery.png";
		String requestHeader0207 = "GET " + requestFile0207 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0207, requestHost0207, requestPort0207, requestHeader0207, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0207 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/PNG", header text fragment = [verification disabled], recorded content size = 152112
		// content test algorithm: check size +/- 5%, defined content size = 152112
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/PNG", null, 152112, 5);		// Test [207] <- Index 207
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [208] <- WEB ADMIN Index 220 ---
		String requestProt0208 = "http";
		String requestHost0208 = "z.cdn.turner.com";
		int    requestPort0208 = 80;
		String requestFile0208 = "/ads/cnni/cnni_world_video.js";
		String requestHeader0208 = "GET " + requestFile0208 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: z.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0208, requestHost0208, requestPort0208, requestHeader0208, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0208 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/X-JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 450
		// content test algorithm: check size +/- 5%, defined content size = 450
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/X-JAVASCRIPT", null, 450, 5);		// Test [208] <- Index 208
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [209] <- WEB ADMIN Index 221 ---
		String requestProt0209 = "http";
		String requestHost0209 = "metrics.cnn.com";
		int    requestPort0209 = 80;
		String requestFile0209 = "/b/ss/cnn-adbp-intl/1/H.26.1/s75792958720965" +
				"?AQB=1" +
				"&ndh=1" +
				"&t=24%2F9%2F2016%2013%3A4%3A31%201%20-120" +
				"&fid=0DE0D1A7EC740073-0D35F412D19C24F3" +
				"&ce=UTF-8" +
				"&ns=cnn" +
				"&pageName=cnn%3Av%3Aediti%3Adeos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&g=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&r=http%3A%2F%2Fedition.cnn.com%2F" +
				"&cc=USD" +
				"&ch=world" +
				"&server=edition.cnn.com" +
				"&events=event26" +
				"&c4=page_12col_intl_homepage_index_zone-0-4_watch%20it_cn-grid--small_must-see-videos" +
				"&v4=D%3Dc4" +
				"&c5=general%20news" +
				"&v5=D%3Dc5" +
				"&c8=repeat%3A2" +
				"&v8=D%3Dc8" +
				"&c9=video" +
				"&v9=D%3Dc9" +
				"&c10=1" +
				"&v10=D%3Dc10" +
				"&c13=video" +
				"&v13=D%3Dc13" +
				"&c16=2016%2F10%2F24" +
				"&v16=D%3Dc16" +
				"&c17=anonymous" +
				"&v17=D%3Dc17" +
				"&c18=page_12col_intl_homepage_index_zone-0-4_balanced_cn-grid--small_grid%3Agrid" +
				"&v18=D%3Dc18" +
				"&c20=23" +
				"&v20=D%3Dc20" +
				"&v22=1" +
				"&c23=experts%20claim%20they%27ve%20solved%20bermuda%20triangle%20mystery" +
				"&v23=D%3Dc23" +
				"&c26=edition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2F" +
				"&v26=D%3DpageName" +
				"&v27=D%3Dch" +
				"&c28=world%3Anvs" +
				"&v28=D%3Dc28" +
				"&v29=edition.cnn.com" +
				"&c30=cnn%20international" +
				"&v30=D%3Dc30" +
				"&c32=adbp%3Avideo" +
				"&v32=D%3Dc32" +
				"&c33=none" +
				"&v33=D%3Dc33" +
				"&c35=cnn.166.1-0-0.20161009%3A0" +
				"&v35=D%3Dc35" +
				"&c37=desktop" +
				"&v37=D%3Dc37" +
				"&c46=14773070702343746156750741" +
				"&v46=D%3Dc46" +
				"&c47=580de97e063d0a0a3c875a117700647f" +
				"&v47=D%3Dc47" +
				"&c56=landscape" +
				"&v56=D%3Dc56" +
				"&c57=no%20mvpd%20set" +
				"&v57=D%3Dc57" +
				"&c59=nvs" +
				"&v59=D%3Dc59" +
				"&c64=cnn%20news" +
				"&v64=D%3Dc64" +
				"&c65=dbd_54r_5dm" +
				"&c73=960%20x%20950" +
				"&v73=D%3Dc73" +
				"&c75=nvs" +
				"&v75=D%3Dc75" +
				"&h1=news%7Ccnn%7Ccnn%20international%7Cedition.cnn.com%7Cworld%7Cworld%3Anvs" +
				"&l1=D%3Dc65" +
				"&s=1920x1080" +
				"&c=24" +
				"&j=1.8.5" +
				"&v=Y" +
				"&k=Y" +
				"&bw=960" +
				"&bh=950" +
				"&AQE=1";
		String requestHeader0209 = "GET " + requestFile0209 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: metrics.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0209, requestHost0209, requestPort0209, requestHeader0209, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0209 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [209] <- Index 209
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [210] <- WEB ADMIN Index 222 ---
		String requestProt0210 = "http";
		String requestHost0210 = "secure-us.imrworldwide.com";
		int    requestPort0210 = 80;
		String requestFile0210 = "/cgi-bin/m" +
				"?ci=us-204044h" +
				"&cg=0" +
				"&cc=1" +
				"&si=http%3A//edition.cnn.com/videos/world/2016/10/23/bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&rp=http%3A//edition.cnn.com/" +
				"&ts=compact" +
				"&rnd=1477307071683";
		String requestHeader0210 = "GET " + requestFile0210 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: secure-us.imrworldwide.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0210, requestHost0210, requestPort0210, requestHeader0210, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0210 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 44
		// content test algorithm: check size +/- 5%, defined content size = 44
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 44, 5);		// Test [210] <- Index 210
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [211] <- WEB ADMIN Index 225 ---
		String requestProt0211 = "http";
		String requestHost0211 = "flapi1.rubiconproject.com";
		int    requestPort0211 = 80;
		String requestFile0211 = "/a/api/fastlane.json" +
				"?account_id=11016" +
				"&site_id=78582" +
				"&zone_id=369850" +
				"&size_id=15" +
				"&p_pos=btf" +
				"&rp_floor=0.01" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_btf_01" +
				"&alt_size_ids=10" +
				"&kw=CNNi%2Fworld%2Fvideo%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=world" +
				"&tg_i.subsection=video" +
				"&tg_i.pos=rect_btf_01" +
				"&rand=0.5049959959543199";
		String requestHeader0211 = "GET " + requestFile0211 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi1.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0211, requestHost0211, requestPort0211, requestHeader0211, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0211 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 368
		// content test algorithm: check size +/- 5%, defined content size = 368
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 368, 5);		// Test [211] <- Index 211
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [212] <- WEB ADMIN Index 226 ---
		String requestProt0212 = "http";
		String requestHost0212 = "flapi1.rubiconproject.com";
		int    requestPort0212 = 80;
		String requestFile0212 = "/a/api/fastlane.json" +
				"?account_id=12324" +
				"&site_id=47188" +
				"&zone_id=238176" +
				"&size_id=15" +
				"&p_pos=btf" +
				"&rp_floor=10" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_btf_01" +
				"&alt_size_ids=10" +
				"&kw=CNNi%2Fworld%2Fvideo%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=world" +
				"&tg_i.subsection=video" +
				"&tg_i.pos=rect_btf_01" +
				"&rand=0.5061660643060547";
		String requestHeader0212 = "GET " + requestFile0212 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi1.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0212, requestHost0212, requestPort0212, requestHeader0212, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0212 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4770
		// content test algorithm: check size +/- 5%, defined content size = 4770
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4770, 5);		// Test [212] <- Index 212
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [213] <- WEB ADMIN Index 227 ---
		String requestProt0213 = "http";
		String requestHost0213 = "pixel.quantserve.com";
		int    requestPort0213 = 80;
		String requestFile0213 = "/pixel;r=2091362146;a=p-D1yc5zQgjmqr5;ezt=1;labels=International.Edition.World%2CInternational.Edition.Homepage;fpan=0;fpa=P0-1198943827-1477306754078;ns=0;ce=1;cm=;je=1;sr=1920x1080x24;enc=n;dst=1;et=1477307072527;tzo=-120;ref=http%3A%2F%2Fedition.cnn.com%2F;url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn;ogl=pubdate.2016-10-24T01%3A20%3A04Z%2Curl.http%3A%2F%2Fwww%252Ecnn%252Ecom%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-scien%2Ctitle.Experts%20claim%20they've%20solved%20Bermuda%20Triangle%20mystery%20-%20CNN%20Video%2Cdescription.A%20Science%20Channel%20found%20hexagon-shaped%20%22air%20bombs%22%20over%20the%20Bermuda%20Triangle%252E%20Th%2Csite_name.CNN%2Ctype.video%252Eother%2Cimage.http%3A%2F%2Fi2%252Ecdn%252Eturner%252Ecom%2Fcnnnext%2Fdam%2Fassets%2F161023202431-bermuda-triangle-clouds";
		String requestHeader0213 = "GET " + requestFile0213 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pixel.quantserve.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0213, requestHost0213, requestPort0213, requestHeader0213, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0213 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 35
		// content test algorithm: check size +/- 5%, defined content size = 35
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 35, 5);		// Test [213] <- Index 213
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [214] <- WEB ADMIN Index 228 ---
		String requestProt0214 = "http";
		String requestHost0214 = "i2.cdn.turner.com";
		int    requestPort0214 = 80;
		String requestFile0214 = "/cnnnext/dam/assets/161023202431-bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan-00001016-small-169.jpg";
		String requestHeader0214 = "GET " + requestFile0214 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0214, requestHost0214, requestPort0214, requestHeader0214, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0214 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 13817
		// content test algorithm: check size +/- 5%, defined content size = 13817
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 13817, 5);		// Test [214] <- Index 214
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [215] <- WEB ADMIN Index 229 ---
		String requestProt0215 = "http";
		String requestHost0215 = "i2.cdn.turner.com";
		int    requestPort0215 = 80;
		String requestFile0215 = "/cnnnext/dam/assets/161019174355-jon-bon-jovi-soul-foundation-small-169.png";
		String requestHeader0215 = "GET " + requestFile0215 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0215, requestHost0215, requestPort0215, requestHeader0215, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0215 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/PNG", header text fragment = [verification disabled], recorded content size = 45677
		// content test algorithm: check size +/- 5%, defined content size = 45677
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/PNG", null, 45677, 5);		// Test [215] <- Index 215
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [216] <- WEB ADMIN Index 230 ---
		String requestProt0216 = "http";
		String requestHost0216 = "i2.cdn.turner.com";
		int    requestPort0216 = 80;
		String requestFile0216 = "/cnnnext/dam/assets/161018124933-trump-queens-home-exterior-small-169.jpg";
		String requestHeader0216 = "GET " + requestFile0216 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0216, requestHost0216, requestPort0216, requestHeader0216, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0216 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 12421
		// content test algorithm: check size +/- 5%, defined content size = 12421
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 12421, 5);		// Test [216] <- Index 216
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [217] <- WEB ADMIN Index 231 ---
		String requestProt0217 = "http";
		String requestHost0217 = "i2.cdn.turner.com";
		int    requestPort0217 = 80;
		String requestFile0217 = "/cnnnext/dam/assets/161019100950-maserati-levante-small-169.jpg";
		String requestHeader0217 = "GET " + requestFile0217 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0217, requestHost0217, requestPort0217, requestHeader0217, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0217 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15314
		// content test algorithm: check size +/- 5%, defined content size = 15314
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15314, 5);		// Test [217] <- Index 217
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [218] <- WEB ADMIN Index 232 ---
		String requestProt0218 = "http";
		String requestHost0218 = "i2.cdn.turner.com";
		int    requestPort0218 = 80;
		String requestFile0218 = "/cnnnext/dam/assets/161018165926-stephen-colbert-late-show-desk-small-169.jpg";
		String requestHeader0218 = "GET " + requestFile0218 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0218, requestHost0218, requestPort0218, requestHeader0218, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0218 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9086
		// content test algorithm: check size +/- 5%, defined content size = 9086
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9086, 5);		// Test [218] <- Index 218
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [219] <- WEB ADMIN Index 233 ---
		String requestProt0219 = "http";
		String requestHost0219 = "i2.cdn.turner.com";
		int    requestPort0219 = 80;
		String requestFile0219 = "/cnnnext/dam/assets/161019171918-ivanka-trump-fortune-most-powerful-women-summit-small-169.jpg";
		String requestHeader0219 = "GET " + requestFile0219 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0219, requestHost0219, requestPort0219, requestHeader0219, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0219 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 6409
		// content test algorithm: check size +/- 5%, defined content size = 6409
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 6409, 5);		// Test [219] <- Index 219
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [220] <- WEB ADMIN Index 234 ---
		String requestProt0220 = "http";
		String requestHost0220 = "i2.cdn.turner.com";
		int    requestPort0220 = 80;
		String requestFile0220 = "/cnnnext/dam/assets/161020171642-google-pop-up-nyc-small-169.jpg";
		String requestHeader0220 = "GET " + requestFile0220 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0220, requestHost0220, requestPort0220, requestHeader0220, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0220 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 11292
		// content test algorithm: check size +/- 5%, defined content size = 11292
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 11292, 5);		// Test [220] <- Index 220
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_10 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_11.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_11(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 12 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [221] <- WEB ADMIN Index 235 ---
		String requestProt0221 = "http";
		String requestHost0221 = "i2.cdn.turner.com";
		int    requestPort0221 = 80;
		String requestFile0221 = "/cnnnext/dam/assets/161005140925-counterfactual-nixon-image-4-small-169.jpg";
		String requestHeader0221 = "GET " + requestFile0221 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0221, requestHost0221, requestPort0221, requestHeader0221, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0221 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 11528
		// content test algorithm: check size +/- 5%, defined content size = 11528
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 11528, 5);		// Test [221] <- Index 221
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [222] <- WEB ADMIN Index 236 ---
		String requestProt0222 = "http";
		String requestHost0222 = "i2.cdn.turner.com";
		int    requestPort0222 = 80;
		String requestFile0222 = "/cnnnext/dam/assets/161020111033-kodak-ektra-thumbnail-small-169.jpg";
		String requestHeader0222 = "GET " + requestFile0222 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0222, requestHost0222, requestPort0222, requestHeader0222, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0222 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10434
		// content test algorithm: check size +/- 5%, defined content size = 10434
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10434, 5);		// Test [222] <- Index 222
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [223] <- WEB ADMIN Index 237 ---
		String requestProt0223 = "http";
		String requestHost0223 = "i2.cdn.turner.com";
		int    requestPort0223 = 80;
		String requestFile0223 = "/cnnnext/dam/assets/161018084420-travelmate-suitcase-small-169.jpg";
		String requestHeader0223 = "GET " + requestFile0223 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0223, requestHost0223, requestPort0223, requestHeader0223, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0223 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10107
		// content test algorithm: check size +/- 5%, defined content size = 10107
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10107, 5);		// Test [223] <- Index 223
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [224] <- WEB ADMIN Index 238 ---
		String requestProt0224 = "http";
		String requestHost0224 = "i2.cdn.turner.com";
		int    requestPort0224 = 80;
		String requestFile0224 = "/cnnnext/dam/assets/161018150423-amy-schumer-donald-trump-split-file-small-169.jpg";
		String requestHeader0224 = "GET " + requestFile0224 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0224, requestHost0224, requestPort0224, requestHeader0224, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0224 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7810
		// content test algorithm: check size +/- 5%, defined content size = 7810
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7810, 5);		// Test [224] <- Index 224
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [225] <- WEB ADMIN Index 239 ---
		String requestProt0225 = "http";
		String requestHost0225 = "i2.cdn.turner.com";
		int    requestPort0225 = 80;
		String requestFile0225 = "/cnnnext/dam/assets/161017112413-trump-clinton-debate-small-169.jpg";
		String requestHeader0225 = "GET " + requestFile0225 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0225, requestHost0225, requestPort0225, requestHeader0225, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0225 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7199
		// content test algorithm: check size +/- 5%, defined content size = 7199
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7199, 5);		// Test [225] <- Index 225
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [226] <- WEB ADMIN Index 240 ---
		String requestProt0226 = "http";
		String requestHost0226 = "i2.cdn.turner.com";
		int    requestPort0226 = 80;
		String requestFile0226 = "/cnnnext/dam/assets/161021091605-classic-ipod-small-169.png";
		String requestHeader0226 = "GET " + requestFile0226 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0226, requestHost0226, requestPort0226, requestHeader0226, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0226 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/PNG", header text fragment = [verification disabled], recorded content size = 45473
		// content test algorithm: check size +/- 5%, defined content size = 45473
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/PNG", null, 45473, 5);		// Test [226] <- Index 226
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [227] <- WEB ADMIN Index 241 ---
		String requestProt0227 = "http";
		String requestHost0227 = "i2.cdn.turner.com";
		int    requestPort0227 = 80;
		String requestFile0227 = "/cnnnext/dam/assets/161018103216-mms-caramel-2-small-169.jpg";
		String requestHeader0227 = "GET " + requestFile0227 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0227, requestHost0227, requestPort0227, requestHeader0227, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0227 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7981
		// content test algorithm: check size +/- 5%, defined content size = 7981
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7981, 5);		// Test [227] <- Index 227
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [228] <- WEB ADMIN Index 242 ---
		String requestProt0228 = "http";
		String requestHost0228 = "i2.cdn.turner.com";
		int    requestPort0228 = 80;
		String requestFile0228 = "/cnnnext/dam/assets/161020184458-murray-still-3-small-169.jpg";
		String requestHeader0228 = "GET " + requestFile0228 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0228, requestHost0228, requestPort0228, requestHeader0228, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0228 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9353
		// content test algorithm: check size +/- 5%, defined content size = 9353
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9353, 5);		// Test [228] <- Index 228
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [229] <- WEB ADMIN Index 243 ---
		String requestProt0229 = "http";
		String requestHost0229 = "i2.cdn.turner.com";
		int    requestPort0229 = 80;
		String requestFile0229 = "/cnnnext/dam/assets/161014202505-mark-burnett-with-donald-trump-file-small-169.jpg";
		String requestHeader0229 = "GET " + requestFile0229 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0229, requestHost0229, requestPort0229, requestHeader0229, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0229 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7810
		// content test algorithm: check size +/- 5%, defined content size = 7810
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7810, 5);		// Test [229] <- Index 229
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [230] <- WEB ADMIN Index 244 ---
		String requestProt0230 = "http";
		String requestHost0230 = "i2.cdn.turner.com";
		int    requestPort0230 = 80;
		String requestFile0230 = "/cnnnext/dam/assets/160324223127-art-basel-dancer-00010227-medium-tease.jpg";
		String requestHeader0230 = "GET " + requestFile0230 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0230, requestHost0230, requestPort0230, requestHeader0230, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0230 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10219
		// content test algorithm: check size +/- 5%, defined content size = 10219
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10219, 5);		// Test [230] <- Index 230
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [231] <- WEB ADMIN Index 245 ---
		String requestProt0231 = "http";
		String requestHost0231 = "vrt.outbrain.com";
		int    requestPort0231 = 80;
		String requestFile0231 = "/" +
				"?idsite=396" +
				"&url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&seen_url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&t=Experts%20claim%20they%27ve%20solved%20Bermuda%20Triangle%20mystery%20-%20CNN%20Video" +
				"&c=1477306754100ug55TLtBm3duDg4oCiUPG1Kq8V50F7nW" +
				"&zone=zone-0-4" +
				"&debug={%22frame%22:false,%22loadTime%22:10,%22timestamp%22:1477307072545,%22transport%22:%22cors%22}" +
				"&refurl=http%3A%2F%2Fedition.cnn.com" +
				"&refnp=396" +
				"&norm_refurl=http%3A%2F%2Fedition.cnn.com" +
				"&content_type=text/html" +
				"&v=52";
		String requestHeader0231 = "GET " + requestFile0231 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: vrt.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0231, requestHost0231, requestPort0231, requestHeader0231, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0231 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 2
		// content test algorithm: check size +/- 5%, defined content size = 2
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 2, 5);		// Test [231] <- Index 231
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [232] <- WEB ADMIN Index 246 ---
		String requestProt0232 = "http";
		String requestHost0232 = "vrp.outbrain.com";
		int    requestPort0232 = 80;
		String requestFile0232 = "/" +
				"?transport=jsonp" +
				"&idsite=396" +
				"&url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&content_type=text/html" +
				"&callback=_vrq.jsonp.callbackFn";
		String requestHeader0232 = "GET " + requestFile0232 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: vrp.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0232, requestHost0232, requestPort0232, requestHeader0232, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0232 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 1939
		// content test algorithm: check size +/- 5%, defined content size = 1939
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 1939, 5);		// Test [232] <- Index 232
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [233] <- WEB ADMIN Index 247 ---
		String requestProt0233 = "http";
		String requestHost0233 = "i2.cdn.turner.com";
		int    requestPort0233 = 80;
		String requestFile0233 = "/cnnnext/dam/assets/160512162312-khalid-shafari-medium-tease.jpg";
		String requestHeader0233 = "GET " + requestFile0233 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0233, requestHost0233, requestPort0233, requestHeader0233, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0233 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 11703
		// content test algorithm: check size +/- 5%, defined content size = 11703
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 11703, 5);		// Test [233] <- Index 233
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [234] <- WEB ADMIN Index 248 ---
		String requestProt0234 = "http";
		String requestHost0234 = "i2.cdn.turner.com";
		int    requestPort0234 = 80;
		String requestFile0234 = "/cnnnext/dam/assets/160321111209-style-ferrari-nine-things-00012923-medium-tease.jpg";
		String requestHeader0234 = "GET " + requestFile0234 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0234, requestHost0234, requestPort0234, requestHeader0234, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0234 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9244
		// content test algorithm: check size +/- 5%, defined content size = 9244
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9244, 5);		// Test [234] <- Index 234
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [235] <- WEB ADMIN Index 249 ---
		String requestProt0235 = "http";
		String requestHost0235 = "i2.cdn.turner.com";
		int    requestPort0235 = 80;
		String requestFile0235 = "/cnnnext/dam/assets/160421134543-36-prince-file-medium-tease.jpg";
		String requestHeader0235 = "GET " + requestFile0235 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0235, requestHost0235, requestPort0235, requestHeader0235, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0235 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10153
		// content test algorithm: check size +/- 5%, defined content size = 10153
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10153, 5);		// Test [235] <- Index 235
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [236] <- WEB ADMIN Index 250 ---
		String requestProt0236 = "http";
		String requestHost0236 = "i2.cdn.turner.com";
		int    requestPort0236 = 80;
		String requestFile0236 = "/cnnnext/dam/assets/151119203858-event-horizon-the-immobile-men-invading-hong-kong-natpkg-00011501-medium-tease.jpg";
		String requestHeader0236 = "GET " + requestFile0236 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0236, requestHost0236, requestPort0236, requestHeader0236, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0236 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 14984
		// content test algorithm: check size +/- 5%, defined content size = 14984
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 14984, 5);		// Test [236] <- Index 236
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [237] <- WEB ADMIN Index 251 ---
		String requestProt0237 = "http";
		String requestHost0237 = "i2.cdn.turner.com";
		int    requestPort0237 = 80;
		String requestFile0237 = "/cnnnext/dam/assets/160503134115-emma-watson-met-gala-medium-tease.jpg";
		String requestHeader0237 = "GET " + requestFile0237 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0237, requestHost0237, requestPort0237, requestHeader0237, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0237 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15017
		// content test algorithm: check size +/- 5%, defined content size = 15017
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15017, 5);		// Test [237] <- Index 237
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [238] <- WEB ADMIN Index 252 ---
		String requestProt0238 = "http";
		String requestHost0238 = "i2.cdn.turner.com";
		int    requestPort0238 = 80;
		String requestFile0238 = "/cnnnext/dam/assets/160707103810-lapo-elkann-tease-2-medium-tease.jpg";
		String requestHeader0238 = "GET " + requestFile0238 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0238, requestHost0238, requestPort0238, requestHeader0238, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0238 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 20502
		// content test algorithm: check size +/- 5%, defined content size = 20502
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 20502, 5);		// Test [238] <- Index 238
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [239] <- WEB ADMIN Index 253 ---
		String requestProt0239 = "http";
		String requestHost0239 = "i2.cdn.turner.com";
		int    requestPort0239 = 80;
		String requestFile0239 = "/cnnnext/dam/assets/141208113229-bond-car-3-story-body.jpg";
		String requestHeader0239 = "GET " + requestFile0239 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0239, requestHost0239, requestPort0239, requestHeader0239, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0239 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 19098
		// content test algorithm: check size +/- 5%, defined content size = 19098
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 19098, 5);		// Test [239] <- Index 239
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [240] <- WEB ADMIN Index 254 ---
		String requestProt0240 = "http";
		String requestHost0240 = "i2.cdn.turner.com";
		int    requestPort0240 = 80;
		String requestFile0240 = "/cnnnext/dam/assets/160405224925-dim-sum-quirks-orig-pkg-00000606-medium-tease.jpg";
		String requestHeader0240 = "GET " + requestFile0240 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0240, requestHost0240, requestPort0240, requestHeader0240, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0240 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15359
		// content test algorithm: check size +/- 5%, defined content size = 15359
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15359, 5);		// Test [240] <- Index 240
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_11 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_12.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_12(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 13 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [241] <- WEB ADMIN Index 255 ---
		String requestProt0241 = "http";
		String requestHost0241 = "i2.cdn.turner.com";
		int    requestPort0241 = 80;
		String requestFile0241 = "/cnnnext/dam/assets/160323100940-airlander-10-getty-medium-tease.jpg";
		String requestHeader0241 = "GET " + requestFile0241 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0241, requestHost0241, requestPort0241, requestHeader0241, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0241 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 12951
		// content test algorithm: check size +/- 5%, defined content size = 12951
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 12951, 5);		// Test [241] <- Index 241
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [242] <- WEB ADMIN Index 256 ---
		String requestProt0242 = "http";
		String requestHost0242 = "i2.cdn.turner.com";
		int    requestPort0242 = 80;
		String requestFile0242 = "/cnnnext/dam/assets/151111151444-27-pools-damajagua-medium-tease.jpg";
		String requestHeader0242 = "GET " + requestFile0242 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0242, requestHost0242, requestPort0242, requestHeader0242, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0242 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15390
		// content test algorithm: check size +/- 5%, defined content size = 15390
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15390, 5);		// Test [242] <- Index 242
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [243] <- WEB ADMIN Index 257 ---
		String requestProt0243 = "http";
		String requestHost0243 = "i2.cdn.turner.com";
		int    requestPort0243 = 80;
		String requestFile0243 = "/cnnnext/dam/assets/160211142404-cool-underground-spaces-london-jsten-orig-00011024-medium-tease.jpg";
		String requestHeader0243 = "GET " + requestFile0243 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0243, requestHost0243, requestPort0243, requestHeader0243, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0243 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 19107
		// content test algorithm: check size +/- 5%, defined content size = 19107
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 19107, 5);		// Test [243] <- Index 243
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [244] <- WEB ADMIN Index 258 ---
		String requestProt0244 = "http";
		String requestHost0244 = "i2.cdn.turner.com";
		int    requestPort0244 = 80;
		String requestFile0244 = "/cnnnext/dam/assets/151104110925-poo-curry-japan-travel-00005230-medium-tease.jpg";
		String requestHeader0244 = "GET " + requestFile0244 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0244, requestHost0244, requestPort0244, requestHeader0244, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0244 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 18095
		// content test algorithm: check size +/- 5%, defined content size = 18095
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 18095, 5);		// Test [244] <- Index 244
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [245] <- WEB ADMIN Index 259 ---
		String requestProt0245 = "http";
		String requestHost0245 = "i2.cdn.turner.com";
		int    requestPort0245 = 80;
		String requestFile0245 = "/cnnnext/dam/assets/151027115113-polynesia-medium-tease.jpg";
		String requestHeader0245 = "GET " + requestFile0245 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0245, requestHost0245, requestPort0245, requestHeader0245, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0245 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 22316
		// content test algorithm: check size +/- 5%, defined content size = 22316
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 22316, 5);		// Test [245] <- Index 245
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [246] <- WEB ADMIN Index 260 ---
		String requestProt0246 = "http";
		String requestHost0246 = "i2.cdn.turner.com";
		int    requestPort0246 = 80;
		String requestFile0246 = "/cnnnext/dam/assets/160203151744-underwater-museum-lanzarote-medium-tease.jpg";
		String requestHeader0246 = "GET " + requestFile0246 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0246, requestHost0246, requestPort0246, requestHeader0246, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0246 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 12512
		// content test algorithm: check size +/- 5%, defined content size = 12512
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 12512, 5);		// Test [246] <- Index 246
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [247] <- WEB ADMIN Index 261 ---
		String requestProt0247 = "http";
		String requestHost0247 = "i2.cdn.turner.com";
		int    requestPort0247 = 80;
		String requestFile0247 = "/cnnnext/dam/assets/160706091912-getu-karst-mountains-china-orig-00000404-medium-tease.jpg";
		String requestHeader0247 = "GET " + requestFile0247 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0247, requestHost0247, requestPort0247, requestHeader0247, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0247 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 20470
		// content test algorithm: check size +/- 5%, defined content size = 20470
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 20470, 5);		// Test [247] <- Index 247
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [248] <- WEB ADMIN Index 262 ---
		String requestProt0248 = "https";
		String requestHost0248 = "safebrowsing.google.com";
		int    requestPort0248 = 443;
		String requestFile0248 = "/safebrowsing/gethash" +
				"?client=navclient-auto-ffox" +
				"&appver=49.0" +
				"&pver=2.2";
		byte[] requestContentBinary0248 = Lib.base64ToByteArray("NDoxNgr3ogEqpYUBKqWEASrLQQEq");
		String requestContent0248 = new String(requestContentBinary0248);		// normally unused - old code for compatibility and for unexpected XML var assigners for this binary content
		String requestHeader0248 = "POST " + requestFile0248 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: safebrowsing.google.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Content-Length: " + requestContentBinary0248.length + "\r\n" + 		// Content-Length: 21
				"Content-Type: text/plain\r\n" + 
				"Pragma: no-cache\r\n" + 
				"Cache-Control: no-cache\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0248, requestHost0248, requestPort0248, requestHeader0248, requestContentBinary0248, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0248 = null;		// support garbage collector to reduce memory
		requestContent0248 = null;		// support garbage collector to reduce memory
		requestContentBinary0248 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/OCTET-STREAM", header text fragment = [verification disabled], recorded content size = 248
		// content test algorithm: check size +/- 5%, defined content size = 248
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/OCTET-STREAM", null, 248, 5);		// Test [248] <- Index 248
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [249] <- WEB ADMIN Index 263 ---
		String requestProt0249 = "http";
		String requestHost0249 = "odb.outbrain.com";
		int    requestPort0249 = 80;
		String requestFile0249 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2Fvideos" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=VR_2" +
				"&key=NANOWDGT01" +
				"&idx=0" +
				"&version=01001112" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2F" +
				"&apv=false" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=19721" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false";
		String requestHeader0249 = "GET " + requestFile0249 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: odb.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0249, requestHost0249, requestPort0249, requestHeader0249, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0249 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 7189
		// content test algorithm: check size +/- 5%, defined content size = 7189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 7189, 5);		// Test [249] <- Index 249
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [250] <- WEB ADMIN Index 264 ---
		String requestProt0250 = "http";
		String requestHost0250 = "ad.doubleclick.net";
		int    requestPort0250 = 80;
		String requestFile0250 = "/ddm/ad/0310/jy4kz38/xqjwfiy/cipw3ll1skjk/;ord=1477307073227?";
		String requestHeader0250 = "GET " + requestFile0250 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ad.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0250, requestHost0250, requestPort0250, requestHeader0250, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0250 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [250] <- Index 250
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [251] <- WEB ADMIN Index 265 ---
		String requestProt0251 = "http";
		String requestHost0251 = "www.budgetedbauer.com";
		int    requestPort0251 = 80;
		String requestFile0251 = "/xsaobq6574";
		String requestHeader0251 = "GET " + requestFile0251 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.budgetedbauer.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0251, requestHost0251, requestPort0251, requestHeader0251, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0251 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/PLAIN", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/PLAIN", null, 0, 5);		// Test [251] <- Index 251
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [252] <- WEB ADMIN Index 266 ---
		String requestProt0252 = "http";
		String requestHost0252 = "b.scorecardresearch.com";
		int    requestPort0252 = 80;
		String requestFile0252 = "/r" +
				"?c2=6035748" +
				"&d.c=gif" +
				"&d.o=cnn-adbp-intl" +
				"&d.x=51611087" +
				"&d.t=page" +
				"&d.u=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn";
		String requestHeader0252 = "GET " + requestFile0252 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0252, requestHost0252, requestPort0252, requestHeader0252, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0252 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [252] <- Index 252
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [253] <- WEB ADMIN Index 267 ---
		String requestProt0253 = "http";
		String requestHost0253 = "weather.api.cnn.io";
		int    requestPort0253 = 80;
		String requestFile0253 = "/graphql" +
				"?query=%7BwsiForecast(locCode%3A%22UKXX0085%22%2Ccelcius%3A%22true%22)%7BcurrentConditions%7Btemperature%2Cdescription%2Cicon%7D%2Clocation%7Bcity%2CstateOrCountry%7D%7D%7D";
		String requestHeader0253 = "GET " + requestFile0253 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: weather.api.cnn.io\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json, text/javascript, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0253, requestHost0253, requestPort0253, requestHeader0253, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0253 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 150
		// content test algorithm: check size +/- 5%, defined content size = 150
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 150, 5);		// Test [253] <- Index 253
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [254] <- WEB ADMIN Index 268 ---
		String requestProt0254 = "http";
		String requestHost0254 = "ad.doubleclick.net";
		int    requestPort0254 = 80;
		String requestFile0254 = "/ddm/ad/0310/jy4kz38/xqjwfiy/cipw3ll1skjk/;ord=1477307073227?";
		String requestHeader0254 = "GET " + requestFile0254 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ad.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0254, requestHost0254, requestPort0254, requestHeader0254, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0254 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [254] <- Index 254
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [255] <- WEB ADMIN Index 269 ---
		String requestProt0255 = "http";
		String requestHost0255 = "www.fallingfalcon.com";
		int    requestPort0255 = 80;
		String requestFile0255 = "/bcn" +
				"?elg=578554097" +
				"&vv=1477306754662" +
				"&xlg=" +
				"&vqwo=1" +
				"&deo=0" +
				"&hu=0" +
				"&fe=1477307073715" +
				"&y=1.7.0" +
				"&id=1477307054049" +
				"&flg=PflrxvqvbvAxzwG" +
				"&x=hglwlrq.fqq.frp%2Fylghrv%2Fzruog%2F2016%2F10%2F23%2Fehupxgd-wuldqjoh-forxgv-zhdwkhu-vflhqfh-fkdqqho-mqg-rulj-yvwdq.fqq";
		String requestHeader0255 = "GET " + requestFile0255 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.fallingfalcon.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0255, requestHost0255, requestPort0255, requestHeader0255, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0255 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [255] <- Index 255
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [256] <- WEB ADMIN Index 270 ---
		String requestProt0256 = "http";
		String requestHost0256 = "images.outbrain.com";
		int    requestPort0256 = 80;
		String requestFile0256 = "/Imaginarium/api/uuid/4d4fcb99787685893c3a8a177867703cbbcbbb7d4078565663ccfa04d96c4e03/140/79";
		String requestHeader0256 = "GET " + requestFile0256 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0256, requestHost0256, requestPort0256, requestHeader0256, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0256 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 2155
		// content test algorithm: check size +/- 5%, defined content size = 2155
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 2155, 5);		// Test [256] <- Index 256
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [257] <- WEB ADMIN Index 271 ---
		String requestProt0257 = "http";
		String requestHost0257 = "images.outbrain.com";
		int    requestPort0257 = 80;
		String requestFile0257 = "/Imaginarium/api/uuid/a658dfde4bcbb80995d907d90573a73019381859f58b73f75451e6e4acd3b9b7/140/79";
		String requestHeader0257 = "GET " + requestFile0257 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0257, requestHost0257, requestPort0257, requestHeader0257, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0257 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 3613
		// content test algorithm: check size +/- 5%, defined content size = 3613
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 3613, 5);		// Test [257] <- Index 257
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [258] <- WEB ADMIN Index 272 ---
		String requestProt0258 = "http";
		String requestHost0258 = "images.outbrain.com";
		int    requestPort0258 = 80;
		String requestFile0258 = "/Imaginarium/api/uuid/0163a81cc01193a3ca212494194a29f93649bff231877e867e34dbcc0ce484cd/140/79";
		String requestHeader0258 = "GET " + requestFile0258 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0258, requestHost0258, requestPort0258, requestHeader0258, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0258 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 5840
		// content test algorithm: check size +/- 5%, defined content size = 5840
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 5840, 5);		// Test [258] <- Index 258
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [259] <- WEB ADMIN Index 273 ---
		String requestProt0259 = "http";
		String requestHost0259 = "images.outbrain.com";
		int    requestPort0259 = 80;
		String requestFile0259 = "/Imaginarium/api/uuid/140bd95b27cb3544cbd631842d8d22efaaa9c76f4d3f1cc00fc2976a34ae4575/140/79";
		String requestHeader0259 = "GET " + requestFile0259 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0259, requestHost0259, requestPort0259, requestHeader0259, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0259 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 4762
		// content test algorithm: check size +/- 5%, defined content size = 4762
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 4762, 5);		// Test [259] <- Index 259
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [260] <- WEB ADMIN Index 274 ---
		String requestProt0260 = "http";
		String requestHost0260 = "images.outbrain.com";
		int    requestPort0260 = 80;
		String requestFile0260 = "/Imaginarium/api/uuid/3c054526b02edc5d0f7327295cd5b689686dc7b1999177c84748f081c7752c37/140/79";
		String requestHeader0260 = "GET " + requestFile0260 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0260, requestHost0260, requestPort0260, requestHeader0260, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0260 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 3232
		// content test algorithm: check size +/- 5%, defined content size = 3232
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 3232, 5);		// Test [260] <- Index 260
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_12 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_13.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_13(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 14 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [261] <- WEB ADMIN Index 275 ---
		String requestProt0261 = "http";
		String requestHost0261 = "images.outbrain.com";
		int    requestPort0261 = 80;
		String requestFile0261 = "/Imaginarium/api/uuid/743036fbad4802632b90acb4c80c68ede381393c686595c21a1033bffd669d79/140/79";
		String requestHeader0261 = "GET " + requestFile0261 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0261, requestHost0261, requestPort0261, requestHeader0261, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0261 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 3033
		// content test algorithm: check size +/- 5%, defined content size = 3033
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 3033, 5);		// Test [261] <- Index 261
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [262] <- WEB ADMIN Index 276 ---
		String requestProt0262 = "http";
		String requestHost0262 = "odb.outbrain.com";
		int    requestPort0262 = 80;
		String requestFile0262 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2Fvideos" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=SB_9" +
				"&key=NANOWDGT01" +
				"&idx=1" +
				"&version=01001112" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2F" +
				"&apv=false" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=69437" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV83NDgyMGE0NTVmM2QzNjVjMDFiM2ZlMTIyZGE3ODI0NF8w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false";
		String requestHeader0262 = "GET " + requestFile0262 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: odb.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0262, requestHost0262, requestPort0262, requestHeader0262, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0262 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 7042
		// content test algorithm: check size +/- 5%, defined content size = 7042
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 7042, 5);		// Test [262] <- Index 262
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [263] <- WEB ADMIN Index 277 ---
		String requestProt0263 = "http";
		String requestHost0263 = "aax.amazon-adsystem.com";
		int    requestPort0263 = 80;
		String requestFile0263 = "/e/dtb/bid" +
				"?src=3288" +
				"&u=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&cb=5570754" +
				"&t=2000";
		String requestHeader0263 = "GET " + requestFile0263 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: aax.amazon-adsystem.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0263, requestHost0263, requestPort0263, requestHeader0263, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0263 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 19
		// content test algorithm: check size +/- 5%, defined content size = 19
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 19, 5);		// Test [263] <- Index 263
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [264] <- WEB ADMIN Index 279 ---
		String requestProt0264 = "http";
		String requestHost0264 = "log.outbrain.com";
		int    requestPort0264 = 80;
		String requestFile0264 = "/loggerServices/widgetGlobalEvent" +
				"?eT=3" +
				"&tm=1542" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=338" +
				"&wRV=01001112" +
				"&rId=74820a455f3d365c01b3fe122da78244" +
				"&idx=0" +
				"&pvId=74820a455f3d365c01b3fe122da78244" +
				"&org=6" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=0" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0264 = "GET " + requestFile0264 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0264, requestHost0264, requestPort0264, requestHeader0264, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0264 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [264] <- Index 264
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [265] <- WEB ADMIN Index 280 ---
		String requestProt0265 = "http";
		String requestHost0265 = "log.outbrain.com";
		int    requestPort0265 = 80;
		String requestFile0265 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=1539" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=338" +
				"&wRV=01001112" +
				"&rId=74820a455f3d365c01b3fe122da78244" +
				"&idx=0" +
				"&pvId=74820a455f3d365c01b3fe122da78244" +
				"&org=6" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0265 = "GET " + requestFile0265 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0265, requestHost0265, requestPort0265, requestHeader0265, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0265 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [265] <- Index 265
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [266] <- WEB ADMIN Index 281 ---
		String requestProt0266 = "http";
		String requestHost0266 = "odb.outbrain.com";
		int    requestPort0266 = 80;
		String requestFile0266 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2Fvideos" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=HOP_58" +
				"&key=NANOWDGT01" +
				"&idx=2" +
				"&version=01001112" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2F" +
				"&apv=true" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=33992" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV83NDgyMGE0NTVmM2QzNjVjMDFiM2ZlMTIyZGE3ODI0NF8w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false";
		String requestHeader0266 = "GET " + requestFile0266 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: odb.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0266, requestHost0266, requestPort0266, requestHeader0266, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0266 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 5935
		// content test algorithm: check size +/- 5%, defined content size = 5935
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 5935, 5);		// Test [266] <- Index 266
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [267] <- WEB ADMIN Index 282 ---
		String requestProt0267 = "https";
		String requestHost0267 = "securepubads.g.doubleclick.net";
		int    requestPort0267 = 443;
		String requestFile0267 = "/gampad/ads" +
				"?gdfp_req=1" +
				"&correlator=3287970895848777" +
				"&output=json_html" +
				"&callback=callbackProxy" +
				"&impl=fifs" +
				"&json_a=1" +
				"&eid=108809080%2C108809133%2C108809134%2C108809145%2C108809136" +
				"&sc=0" +
				"&sfv=1-0-4" +
				"&iu_parts=8663477%2CCNNi%2Cworld%2Cvideo" +
				"&enc_prev_ius=%2F0%2F1%2F2%2F3" +
				"&prev_iu_szs=300x600%7C300x250" +
				"&prev_scp=pos%3Drect_btf_01%26rpfl_elemid%3Dad_rect_btf_01%26fln_to%3D0" +
				"&eri=1" +
				"&cust_params=guid%3D580de97e063d0a0a3c875a117700647f%26prx_to%3D1%26transId%3D14773070702343746156750741%26kuid%3Dq7dgd6wiu%26refdom%3Dcnn%26capTopics%3DDBD%252C54R%252C5DM%26azn_to%3D0" +
				"&cookie=ID%3D575a79a92856696c%3AT%3D1477306756%3AS%3DALNI_Mb_EXc_S3b8JqeseM1QooOOGTvF_w" +
				"&lmt=1477307075" +
				"&dt=1477307075009" +
				"&cc=18" +
				"&frm=20" +
				"&biw=960" +
				"&bih=950" +
				"&oid=3" +
				"&adxs=0" +
				"&adys=0" +
				"&adks=2754547618" +
				"&gut=v2" +
				"&ifi=1" +
				"&u_tz=120" +
				"&u_his=3" +
				"&u_java=true" +
				"&u_h=1080" +
				"&u_w=1920" +
				"&u_ah=1057" +
				"&u_aw=1920" +
				"&u_cd=24" +
				"&u_nplug=5" +
				"&u_nmime=26" +
				"&u_sd=1" +
				"&flash=23.0.0" +
				"&url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2F" +
				"&dssz=53" +
				"&icsg=564049515380736" +
				"&mso=1" +
				"&std=18" +
				"&vrg=103" +
				"&vrp=103" +
				"&ga_vid=21140608.1477307075" +
				"&ga_sid=1477307075" +
				"&ga_hid=465608681";
		String requestHeader0267 = "GET " + requestFile0267 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: securepubads.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0267, requestHost0267, requestPort0267, requestHeader0267, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0267 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 14467
		// content test algorithm: check size +/- 5%, defined content size = 14467
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 14467, 5);		// Test [267] <- Index 267
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [268] <- WEB ADMIN Index 283 ---
		String requestProt0268 = "http";
		String requestHost0268 = "log.outbrain.com";
		int    requestPort0268 = 80;
		String requestFile0268 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=1804" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=339" +
				"&wRV=01001112" +
				"&rId=9ae7c7bb19ab65f716313f2695b8734b" +
				"&idx=1" +
				"&pvId=74820a455f3d365c01b3fe122da78244" +
				"&org=0" +
				"&pad=6" +
				"&pVis=1" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0268 = "GET " + requestFile0268 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0268, requestHost0268, requestPort0268, requestHeader0268, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0268 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [268] <- Index 268
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [269] <- WEB ADMIN Index 284 ---
		String requestProt0269 = "https";
		String requestHost0269 = "www.facebook.com";
		int    requestPort0269 = 443;
		String requestFile0269 = "/impression.php/f2f38b3dbd9132e/" +
				"?lid=115" +
				"&payload=%7B%22source%22%3A%22jssdk%22%7D";
		String requestHeader0269 = "GET " + requestFile0269 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0269, requestHost0269, requestPort0269, requestHeader0269, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0269 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 48
		// content test algorithm: check size +/- 5%, defined content size = 48
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 48, 5);		// Test [269] <- Index 269
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [270] <- WEB ADMIN Index 285 ---
		String requestProt0270 = "http";
		String requestHost0270 = "b.scorecardresearch.com";
		int    requestPort0270 = 80;
		String requestFile0270 = "/b" +
				"?c1=7" +
				"&c2=14320224" +
				"&c3=235" +
				"&ns__t=1477307075339" +
				"&ns_c=windows-1252" +
				"&ns_if=1" +
				"&cv=3.1" +
				"&c8=" +
				"&c7=http%3A%2F%2Fwidgets.outbrain.com%2FnanoWidget%2Fexternals%2FobFrame%2FobFrame.htm%23pid%3D235%26dmpenabled%3Dtrue%26csenabled%3Dtrue%26d%3DJO1nvR1RQN3_GLBS5Cr_eswqerWMmmbqNmtnW-zwXr8YUlIqd9qOsQx1ms-jF0Xv" +
				"&c9=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn";
		String requestHeader0270 = "GET " + requestFile0270 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0270, requestHost0270, requestPort0270, requestHeader0270, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0270 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, null, null, 0, 5);		// Test [270] <- Index 270
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [271] <- WEB ADMIN Index 286 ---
		String requestProt0271 = "http";
		String requestHost0271 = "log.outbrain.com";
		int    requestPort0271 = 80;
		String requestFile0271 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=2260" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=457" +
				"&wRV=01001112" +
				"&rId=81347260ce6a23f1bd56dcffd4ba2f11" +
				"&idx=2" +
				"&pvId=74820a455f3d365c01b3fe122da78244" +
				"&org=4" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0271 = "GET " + requestFile0271 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0271, requestHost0271, requestPort0271, requestHeader0271, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0271 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [271] <- Index 271
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [272] <- WEB ADMIN Index 287 ---
		String requestProt0272 = "http";
		String requestHost0272 = "odb.outbrain.com";
		int    requestPort0272 = 80;
		String requestFile0272 = "/utils/get" +
				"?url=http%3A%2F%2Fwww.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=TR_1" +
				"&key=NANOWDGT01" +
				"&idx=3" +
				"&version=01001112" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2F" +
				"&apv=true" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=38678" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV83NDgyMGE0NTVmM2QzNjVjMDFiM2ZlMTIyZGE3ODI0NF8w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false";
		String requestHeader0272 = "GET " + requestFile0272 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: odb.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0272, requestHost0272, requestPort0272, requestHeader0272, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0272 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 564
		// content test algorithm: check size +/- 5%, defined content size = 564
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 564, 5);		// Test [272] <- Index 272
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [273] <- WEB ADMIN Index 290 ---
		String requestProt0273 = "http";
		String requestHost0273 = "log.outbrain.com";
		int    requestPort0273 = 80;
		String requestFile0273 = "/loggerServices/widgetGlobalEvent" +
				"?eT=3" +
				"&tm=2428" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=339" +
				"&wRV=01001112" +
				"&rId=9ae7c7bb19ab65f716313f2695b8734b" +
				"&idx=1" +
				"&pvId=74820a455f3d365c01b3fe122da78244" +
				"&org=0" +
				"&pad=6" +
				"&pVis=1" +
				"&eIdx=1" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0273 = "GET " + requestFile0273 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0273, requestHost0273, requestPort0273, requestHeader0273, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0273 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [273] <- Index 273
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [274] <- WEB ADMIN Index 291 ---
		String requestProt0274 = "http";
		String requestHost0274 = "log.outbrain.com";
		int    requestPort0274 = 80;
		String requestFile0274 = "/loggerServices/widgetGlobalEvent" +
				"?eT=6" +
				"&tm=2606" +
				"&pid=185" +
				"&sid=5396234" +
				"&wId=117" +
				"&wRV=01001112" +
				"&rId=03aa18766d138109b75f927577445e53" +
				"&idx=3" +
				"&pvId=74820a455f3d365c01b3fe122da78244" +
				"&org=0" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0274 = "GET " + requestFile0274 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0274, requestHost0274, requestPort0274, requestHeader0274, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0274 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [274] <- Index 274
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [275] <- WEB ADMIN Index 292 ---
		log();
		log("# title: Untitled");
		String requestProt0275 = "http";
		String requestHost0275 = "s0.2mdn.net";
		int    requestPort0275 = 80;
		String requestFile0275 = "/ads/richmedia/studio/pv2/43981339/20160623044522387/web/moneytransfer_300x600_65_v2.html" +
				"?e=69" +
				"&renderingType=2" +
				"&leftOffset=0" +
				"&topOffset=0" +
				"&c=sMgOfXy6Ny" +
				"&t=1";
		String requestHeader0275 = "GET " + requestFile0275 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0275, requestHost0275, requestPort0275, requestHeader0275, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0275 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 517
		// content test algorithm: check size +/- 5%, defined content size = 517
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 517, 5);		// Test [275] <- Index 275
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [276] <- WEB ADMIN Index 293 ---
		String requestProt0276 = "https";
		String requestHost0276 = "geo.moatads.com";
		int    requestPort0276 = 443;
		String requestFile0276 = "/n.js" +
				"?e=35" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&gz=0" +
				"&hh=0" +
				"&hn=0" +
				"&qt=0" +
				"&i=TURNERDFP1" +
				"&hp=1" +
				"&zMoatPS=rect_btf_01" +
				"&zMoatHT=600" +
				"&zMoatWD=300" +
				"&zMoatST=Site%20Not%20Defined" +
				"&zMoatPSB=rect_btf_01" +
				"&zMoatOrigSlicer1=%2F8663477%2FCNNi%2Fworld%2Fvideo" +
				"&zMoatOrigSlicer2=52145557" +
				"&cm=32" +
				"&kq=1" +
				"&bq=0" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307076161" +
				"&de=672336039138" +
				"&m=0" +
				"&ar=a243607-clean" +
				"&q=1" +
				"&cb=0" +
				"&cu=1477307076161" +
				"&ll=3" +
				"&ln=1" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=60921397%3A407762077%3A157758997%3A102208857877" +
				"&cadf=-" +
				"&gptMoat_pg=-" +
				"&gptMoat_appname=-" +
				"&gptMoat_pos=rect_btf_01" +
				"&gptMoat_mivr=-" +
				"&qs=1" +
				"&bo=%2F8663477%2FCNNi%2Fworld%2Fvideo" +
				"&bp=52145557" +
				"&bd=rect_btf_01" +
				"&zMoatAltSL=zMoatAdUnit1%3AzMoatAdUnit2%3AzMoatPS" +
				"&dfp=0%2C4" +
				"&la=52145557" +
				"&gw=turner763610601596" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=95074" +
				"&na=829313409" +
				"&cs=0" +
				"&callback=MoatSuperV22.gna499239";
		String requestHeader0276 = "GET " + requestFile0276 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: geo.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0276, requestHost0276, requestPort0276, requestHeader0276, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0276 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 66
		// content test algorithm: check size +/- 5%, defined content size = 66
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 66, 5);		// Test [276] <- Index 276
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [277] <- WEB ADMIN Index 294 ---
		String requestProt0277 = "http";
		String requestHost0277 = "tags.bluekai.com";
		int    requestPort0277 = 80;
		String requestFile0277 = "/site/20087" +
				"?ret=js" +
				"&jscb=STRBKCallback" +
				"&_=1477307070749";
		String requestHeader0277 = "GET " + requestFile0277 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: tags.bluekai.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0277, requestHost0277, requestPort0277, requestHeader0277, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0277 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 1386
		// content test algorithm: check size +/- 5%, defined content size = 1386
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 1386, 5);		// Test [277] <- Index 277
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [278] <- WEB ADMIN Index 295 ---
		String requestProt0278 = "http";
		String requestHost0278 = "tags.bluekai.com";
		int    requestPort0278 = 80;
		String requestFile0278 = "/site/20214" +
				"?limit=1" +
				"&phint=user%3Dtrue";
		String requestHeader0278 = "GET " + requestFile0278 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: tags.bluekai.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0278, requestHost0278, requestPort0278, requestHeader0278, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0278 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 62
		// content test algorithm: check size +/- 5%, defined content size = 62
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 62, 5);		// Test [278] <- Index 278
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [279] <- WEB ADMIN Index 296 ---
		String requestProt0279 = "http";
		String requestHost0279 = "beacon.krxd.net";
		int    requestPort0279 = 80;
		String requestFile0279 = "/optout_check" +
				"?callback=Krux.ns._default.kxjsonp_optOutCheck";
		String requestHeader0279 = "GET " + requestFile0279 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: beacon.krxd.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0279, requestHost0279, requestPort0279, requestHeader0279, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0279 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 90
		// content test algorithm: check size +/- 5%, defined content size = 90
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 90, 5);		// Test [279] <- Index 279
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [280] <- WEB ADMIN Index 297 ---
		String requestProt0280 = "https";
		String requestHost0280 = "www.facebook.com";
		int    requestPort0280 = 443;
		String requestFile0280 = "/v2.2/plugins/send_to_messenger.php" +
				"?app_id=" +
				"&channel=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2FfTmIQU3LxvB.js%3Fversion%3D42%23cb%3Df176db4cec81b34%26domain%3Dedition.cnn.com%26origin%3Dhttp%253A%252F%252Fedition.cnn.com%252Ff12761269c1734a%26relation%3Dparent.parent" +
				"&color=blue" +
				"&container_width=0" +
				"&locale=en_US" +
				"&messenger_app_id=989591237802489" +
				"&page_id=5550296508" +
				"&ref=hi" +
				"&sdk=joey" +
				"&size=xlarge";
		String requestHeader0280 = "GET " + requestFile0280 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0280, requestHost0280, requestPort0280, requestHeader0280, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0280 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 12862
		// content test algorithm: check size +/- 5%, defined content size = 12862
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 12862, 5);		// Test [280] <- Index 280
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_13 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_14.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_14(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 15 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [281] <- WEB ADMIN Index 298 ---
		String requestProt0281 = "http";
		String requestHost0281 = "beacon.krxd.net";
		int    requestPort0281 = 80;
		String requestFile0281 = "/pixel.gif" +
				"?source=smarttag" +
				"&fired=report" +
				"&confid=ITb_9Zup" +
				"&_kpid=e9eaedd3-c1da-4334-82f0-d7e3ff883c87" +
				"&_kcp_s=CNN%20International%20Edition" +
				"&_kcp_d=edition.cnn.com" +
				"&_knifr=11" +
				"&_kpref_=http%3A%2F%2Fedition.cnn.com%2F" +
				"&_kua_kx_tz=-120" +
				"&geo_country=se" +
				"&geo_region=ab" +
				"&_kua_kx_lang=en-gb" +
				"&_kua_kx_tech_browser_language=en-gb" +
				"&_kua_kx_geo_country=se" +
				"&_kua_kx_geo_region=ab" +
				"&_kua_kx_tech_browser=Firefox%204" +
				"&_kua_kx_tech_manufacturer=Apple%20Inc." +
				"&_kua_kx_tech_device=Computer" +
				"&_kua_kx_tech_os=Mac%20OS%20X" +
				"&_kua_turner_guid=580de97e063d0a0a3c875a117700647f" +
				"&_kua_aa_id=2C06F4C0851D16CD-600001280000E699" +
				"&_kua_af_id=0DE0D1A7EC740073-0D35F412D19C24F3" +
				"&_kua_kx_whistle=0" +
				"&_kpa_cnn_international_site=cnn_international" +
				"&_kpa_cnn_international_rollup=world" +
				"&_kpa_cnn_international_section=video" +
				"&_kpa_cap_topics=DBD%2C54R%2C5DM" +
				"&_kpa_keywords=world%2C%20Experts%20claim%20they%27ve%20solved%20Bermuda%20Triangle%20mystery%20-%20CNN%20Video" +
				"&_kpa_cnn_international_lob=news" +
				"&_kpa_cnn_international_brand=cnn" +
				"&_kpa_cnn_international_bizunit=cnn%20international" +
				"&_kpa_cnn_international_sitename=edition.cnn.com" +
				"&_kpa_cnn_international_sitesectionlevel1=world" +
				"&_kpa_cnn_international_sitesectionlevel2=world%3Anvs" +
				"&t_navigation_type=0" +
				"&t_dns=0" +
				"&t_tcp=0" +
				"&t_http_request=-1" +
				"&t_http_response=0" +
				"&t_content_ready=703" +
				"&t_window_load=6492" +
				"&t_redirect=0" +
				"&interchange_ran=true" +
				"&store_user=q7dgd6wiu" +
				"&userdata_was_requested=true" +
				"&userdata_did_respond=true" +
				"&store_user_after=q7dgd6wiu" +
				"&_kurl_=http%3A%2F%2Fwww.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&userdata_user=K2kp92OU%2Cq7dgd6wiu" +
				"&sview=2" +
				"&kplt5=23412" +
				"&kplt7=23445" +
				"&kplt9=23474" +
				"&kplt10=23477" +
				"&jsonp_requests=%2F%2Fbeacon.krxd.net%2Foptout_check%2C954%2C%2F%2Fcdn.krxd.net%2Fuserdata%2Fget%2C932";
		String requestHeader0281 = "GET " + requestFile0281 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: beacon.krxd.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0281, requestHost0281, requestPort0281, requestHeader0281, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0281 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, "IMAGE/GIF", null, 0, 5);		// Test [281] <- Index 281
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [282] <- WEB ADMIN Index 299 ---
		String requestProt0282 = "http";
		String requestHost0282 = "ping.chartbeat.net";
		int    requestPort0282 = 80;
		String requestFile0282 = "/ping" +
				"?h=edition.cnn.com" +
				"&p=%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&u=DK-3L5D9nIqOBXmMI4" +
				"&d=edition.cnn.com" +
				"&g=37612" +
				"&g0=world%2Cvideos%2Cvideo%2Cvid-vid-vls-col%2Ccol-stories-worth-watching" +
				"&n=1" +
				"&f=00001" +
				"&c=0" +
				"&x=0" +
				"&m=0" +
				"&y=6143" +
				"&o=960" +
				"&w=950" +
				"&j=45" +
				"&R=1" +
				"&W=0" +
				"&I=0" +
				"&E=0" +
				"&e=0" +
				"&v=%2F" +
				"&K=657::3490::CqqirfDGrujlFApEv6LYlJD6W2o_::*%5B%40id%3D%27intl_homepage2-zone-1%27%5D%2Fdiv%5B2%5D%2Fdiv%5B2%5D%2Fdiv%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B6%5D%2Farticle%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B2%5D%2Fh3%5B1%5D%2Fa%5B1%5D::c::http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn::BupFH2HyBBCBH9LmiHjss0CF_Ev" +
				"&b=5813" +
				"&t=BTKYZFDv2GfB6NynpBrVUbSC-7JT6" +
				"&V=83" +
				"&z=t%3DCODTOgCa3BMm8GfOkqaJWQI_YTq%26E%3D9%26EE%3D9%26x%3D2841%26c%3D0.16%26y%3D7262%26w%3D950" +
				"&i=Experts%20claim%20they%27ve%20solved%20Bermuda%20Triangle%20mystery%20-%20CNN%20Video" +
				"&tz=-120" +
				"&sn=1" +
				"&EE=0" +
				"&_";
		String requestHeader0282 = "GET " + requestFile0282 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ping.chartbeat.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0282, requestHost0282, requestPort0282, requestHeader0282, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0282 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [282] <- Index 282
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [283] <- WEB ADMIN Index 300 ---
		String requestProt0283 = "http";
		String requestHost0283 = "social-login.cnn.com";
		int    requestPort0283 = 80;
		String requestFile0283 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22loadc%22%2C%22time%22%3A%221477307072482%22%2C%22reportData%22%3A%7B%22sref%22%3A%22http%3A%2F%2Fedition.cnn.com%2F%22%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074117%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074136%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074140%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074143%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R3311657295";
		String requestHeader0283 = "GET " + requestFile0283 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0283, requestHost0283, requestPort0283, requestHeader0283, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0283 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [283] <- Index 283
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [284] <- WEB ADMIN Index 301 ---
		String requestProt0284 = "http";
		String requestHost0284 = "social-login.cnn.com";
		int    requestPort0284 = 80;
		String requestFile0284 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074166%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074170%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074174%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074176%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074179%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R2007992064";
		String requestHeader0284 = "GET " + requestFile0284 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0284, requestHost0284, requestPort0284, requestHeader0284, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0284 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [284] <- Index 284
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [285] <- WEB ADMIN Index 302 ---
		String requestProt0285 = "http";
		String requestHost0285 = "social-login.cnn.com";
		int    requestPort0285 = 80;
		String requestFile0285 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074147%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074151%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074154%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074157%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074160%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R2752818604";
		String requestHeader0285 = "GET " + requestFile0285 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0285, requestHost0285, requestPort0285, requestHeader0285, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0285 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [285] <- Index 285
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [286] <- WEB ADMIN Index 303 ---
		String requestProt0286 = "http";
		String requestHost0286 = "social-login.cnn.com";
		int    requestPort0286 = 80;
		String requestFile0286 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074182%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307074184%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R2946067846";
		String requestHeader0286 = "GET " + requestFile0286 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0286, requestHost0286, requestPort0286, requestHeader0286, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0286 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [286] <- Index 286
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [287] <- WEB ADMIN Index 304 ---
		String requestProt0287 = "http";
		String requestHost0287 = "z.cdn.turner.com";
		int    requestPort0287 = 80;
		String requestFile0287 = "/xslo/cvp/core/base/0/CVPBase.swf" +
				"?cachebust=false" +
				"&containerVersion=Container%20v2.0.4.0" +
				"&autostart=true" +
				"&profile=expansion" +
				"&domId=cvp_1" +
				"&isEmbedContainer=false" +
				"&site=cnn" +
				"&context=expansion";
		String requestHeader0287 = "GET " + requestFile0287 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: z.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0287, requestHost0287, requestPort0287, requestHeader0287, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0287 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/X-SHOCKWAVE-FLASH", header text fragment = [verification disabled], recorded content size = 37500
		// content test algorithm: check size +/- 5%, defined content size = 37500
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/X-SHOCKWAVE-FLASH", null, 37500, 5);		// Test [287] <- Index 287
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [288] <- WEB ADMIN Index 309 ---
		String requestProt0288 = "http";
		String requestHost0288 = "aspen.turner.com";
		int    requestPort0288 = 80;
		String requestFile0288 = "/api/hello";
		String requestContent0288 = 
				"aspenJson=%257B%2522platformName%2522%253A%2522flash%2522%252C%2522aspenUUIDToken%2522%253A%2522demo%5Fhash%2522%252C%2522debug%2522%253A%2522false%2522%252C%2522context%2522%253A%2522expansion%2522%252C%2522propertyName%2522%253A%2522cnn%2522%252C%2522site%2522%253A%2522cnn%2522%252C%2522clientThrottle%2522%253A0%252C%2522profile%2522%253A%2522expansion%2522%252C%2522deviceType%2522%253A%2522desktop%2522%252C%2522protocol%2522%253A%25221%2E0%2522%252C%2522applicationName%2522%253A%2522CVP%2522%252C%2522deviceModel%2522%253A%2522desktop%2522%252C%2522clientThrottled%2522%253Afalse%252C%2522applicationVersion%2522%253A%25222%2E5%2E8%2E0%2522%252C%2522deviceVersion%2522%253A%2522desktop%2522%252C%2522pageUrl%2522%253A%2522http%253A%2F%2Fedition%2Ecnn%2Ecom%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda%2Dtriangle%2Dclouds%2Dweather%2Dscience%2Dchannel%2Djnd%2Dorig%2Dvstan%2Ecnn%2522%257D";
		String requestHeader0288 = "POST " + requestFile0288 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: aspen.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Content-type: application/x-www-form-urlencoded\r\n" + 
				"Content-Length: " + requestContent0288.length() + "\r\n" + 		// Content-length: 895
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0288, requestHost0288, requestPort0288, requestHeader0288, requestContent0288.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0288 = null;		// support garbage collector to reduce memory
		requestContent0288 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 287
		// content test algorithm: check size +/- 5%, defined content size = 287
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 287, 5);		// Test [288] <- Index 288
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [289] <- WEB ADMIN Index 317 ---
		String requestProt0289 = "http";
		String requestHost0289 = "79423.analytics.edgesuite.net";
		int    requestPort0289 = 80;
		String requestFile0289 = "/crossdomain.xml";
		String requestHeader0289 = "GET " + requestFile0289 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: 79423.analytics.edgesuite.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0289, requestHost0289, requestPort0289, requestHeader0289, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0289 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/XML", header text fragment = [verification disabled], recorded content size = 178
		// content test algorithm: check size +/- 5%, defined content size = 178
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/XML", null, 178, 5);		// Test [289] <- Index 289
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [290] <- WEB ADMIN Index 319 ---
		String requestProt0290 = "http";
		String requestHost0290 = "edition.cnn.com";
		int    requestPort0290 = 80;
		String requestFile0290 = "/video/data/3.0/video/world/2016/10/23/bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn/index.xml" +
				"?xml=true";
		String requestHeader0290 = "GET " + requestFile0290 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0290, requestHost0290, requestPort0290, requestHeader0290, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0290 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/XML", header text fragment = [verification disabled], recorded content size = 3106
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/XML", null, "Bermuda Triangle clouds weather science channel jnd orig vstan");		// Test [290] <- Index 290
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [291] <- WEB ADMIN Index 320 ---
		String requestProt0291 = "http";
		String requestHost0291 = "www.cnn.com";
		int    requestPort0291 = 80;
		String requestFile0291 = "/crossdomain.xml";
		String requestHeader0291 = "GET " + requestFile0291 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0291, requestHost0291, requestPort0291, requestHeader0291, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0291 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [291] <- Index 291
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [292] <- WEB ADMIN Index 321 ---
		String requestProt0292 = "https";
		String requestHost0292 = "www.facebook.com";
		int    requestPort0292 = 443;
		String requestFile0292 = "/v2.2/plugins/send_to_messenger.php" +
				"?app_id=" +
				"&channel=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2FfTmIQU3LxvB.js%3Fversion%3D42%23cb%3Df176db4cec81b34%26domain%3Dedition.cnn.com%26origin%3Dhttp%253A%252F%252Fedition.cnn.com%252Ff12761269c1734a%26relation%3Dparent.parent" +
				"&color=blue" +
				"&container_width=0" +
				"&locale=en_US" +
				"&messenger_app_id=989591237802489" +
				"&page_id=5550296508" +
				"&ref=hi" +
				"&sdk=joey" +
				"&size=xlarge";
		String requestHeader0292 = "GET " + requestFile0292 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0292, requestHost0292, requestPort0292, requestHeader0292, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0292 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 12862
		// content test algorithm: check size +/- 5%, defined content size = 12862
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 12862, 5);		// Test [292] <- Index 292
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [293] <- WEB ADMIN Index 323 ---
		String requestProt0293 = "http";
		String requestHost0293 = "ma67-c.analytics.edgesuite.net";
		int    requestPort0293 = 80;
		String requestFile0293 = "/crossdomain.xml";
		String requestHeader0293 = "GET " + requestFile0293 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ma67-c.analytics.edgesuite.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0293, requestHost0293, requestPort0293, requestHeader0293, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0293 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/XML", header text fragment = [verification disabled], recorded content size = 120
		// content test algorithm: check size +/- 5%, defined content size = 120
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/XML", null, 120, 5);		// Test [293] <- Index 293
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [294] <- WEB ADMIN Index 324 ---
		String requestProt0294 = "https";
		String requestHost0294 = "www.facebook.com";
		int    requestPort0294 = 443;
		String requestFile0294 = "/v2.2/plugins/send_to_messenger.php" +
				"?app_id=" +
				"&channel=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2FfTmIQU3LxvB.js%3Fversion%3D42%23cb%3Df176db4cec81b34%26domain%3Dedition.cnn.com%26origin%3Dhttp%253A%252F%252Fedition.cnn.com%252Ff12761269c1734a%26relation%3Dparent.parent" +
				"&color=blue" +
				"&container_width=0" +
				"&locale=en_US" +
				"&messenger_app_id=989591237802489" +
				"&page_id=5550296508" +
				"&ref=hi" +
				"&sdk=joey" +
				"&size=xlarge";
		String requestHeader0294 = "GET " + requestFile0294 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0294, requestHost0294, requestPort0294, requestHeader0294, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0294 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 12872
		// content test algorithm: check size +/- 5%, defined content size = 12872
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 12872, 5);		// Test [294] <- Index 294
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [295] <- WEB ADMIN Index 325 ---
		String requestProt0295 = "http";
		String requestHost0295 = "ma67-c.analytics.edgesuite.net";
		int    requestPort0295 = 80;
		String requestFile0295 = "/config/beacon-1482.xml" +
				"?d=2492016";
		String requestHeader0295 = "GET " + requestFile0295 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ma67-c.analytics.edgesuite.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0295, requestHost0295, requestPort0295, requestHeader0295, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0295 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/XML", header text fragment = [verification disabled], recorded content size = 13140
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/XML", null, "data key=\"vl\" name=\"visitMaxPersistentBitRateBucket\"/");		// Test [295] <- Index 295
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [296] <- WEB ADMIN Index 326 ---
		String requestProt0296 = "http";
		String requestHost0296 = "aax.amazon-adsystem.com";
		int    requestPort0296 = 80;
		String requestFile0296 = "/e/dtb/bid" +
				"?src=3288" +
				"&u=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&cb=8357900" +
				"&t=2000";
		String requestHeader0296 = "GET " + requestFile0296 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: aax.amazon-adsystem.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0296, requestHost0296, requestPort0296, requestHeader0296, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0296 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 19
		// content test algorithm: check size +/- 5%, defined content size = 19
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 19, 5);		// Test [296] <- Index 296
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [297] <- WEB ADMIN Index 327 ---
		String requestProt0297 = "http";
		String requestHost0297 = "social-login.cnn.com";
		int    requestPort0297 = 80;
		String requestFile0297 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082061%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082317%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082323%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082326%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082332%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R3943679449";
		String requestHeader0297 = "GET " + requestFile0297 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0297, requestHost0297, requestPort0297, requestHeader0297, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0297 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [297] <- Index 297
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [298] <- WEB ADMIN Index 328 ---
		String requestProt0298 = "http";
		String requestHost0298 = "social-login.cnn.com";
		int    requestPort0298 = 80;
		String requestFile0298 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082408%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082414%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R2368139217";
		String requestHeader0298 = "GET " + requestFile0298 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0298, requestHost0298, requestPort0298, requestHeader0298, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0298 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [298] <- Index 298
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [299] <- WEB ADMIN Index 329 ---
		String requestProt0299 = "http";
		String requestHost0299 = "social-login.cnn.com";
		int    requestPort0299 = 80;
		String requestFile0299 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307081968%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307081973%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307081977%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307081983%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307081991%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R108609994";
		String requestHeader0299 = "GET " + requestFile0299 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0299, requestHost0299, requestPort0299, requestHeader0299, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0299 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 188
		// content test algorithm: check size +/- 5%, defined content size = 188
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 188, 5);		// Test [299] <- Index 299
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [300] <- WEB ADMIN Index 330 ---
		String requestProt0300 = "http";
		String requestHost0300 = "social-login.cnn.com";
		int    requestPort0300 = 80;
		String requestFile0300 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082007%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082012%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082017%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082028%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082036%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R1842991631";
		String requestHeader0300 = "GET " + requestFile0300 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0300, requestHost0300, requestPort0300, requestHeader0300, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0300 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [300] <- Index 300
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_14 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_15.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_15(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 16 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [301] <- WEB ADMIN Index 331 ---
		String requestProt0301 = "http";
		String requestHost0301 = "social-login.cnn.com";
		int    requestPort0301 = 80;
		String requestFile0301 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082351%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082357%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082363%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082368%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082374%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R1347442185";
		String requestHeader0301 = "GET " + requestFile0301 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0301, requestHost0301, requestPort0301, requestHeader0301, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0301 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [301] <- Index 301
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [302] <- WEB ADMIN Index 332 ---
		String requestProt0302 = "http";
		String requestHost0302 = "social-login.cnn.com";
		int    requestPort0302 = 80;
		String requestFile0302 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082040%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082045%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082051%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082054%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082058%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R1094769958";
		String requestHeader0302 = "GET " + requestFile0302 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0302, requestHost0302, requestPort0302, requestHeader0302, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0302 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [302] <- Index 302
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [303] <- WEB ADMIN Index 333 ---
		String requestProt0303 = "http";
		String requestHost0303 = "social-login.cnn.com";
		int    requestPort0303 = 80;
		String requestFile0303 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082384%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082387%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082391%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082398%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307082402%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R3315257757";
		String requestHeader0303 = "GET " + requestFile0303 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0303, requestHost0303, requestPort0303, requestHeader0303, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0303 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [303] <- Index 303
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [304] <- WEB ADMIN Index 335 ---
		String requestProt0304 = "http";
		String requestHost0304 = "bea4.cnn.com";
		int    requestPort0304 = 80;
		String requestFile0304 = "/ad/p/1?";
		String requestContent0304 = 
				"<adRequest profile=\"48804:cnn_bvp_player\" networkId=\"48804\" mode=\"ON_DEMAND\" version=\"1\"><capabilities><supportsSlotTemplate /><expectMultipleCreativeRenditions /><supportsAdUnitInMultipleSlots /><supportsSlotCallback /><supportNullCreative /><supportAdBundle /><supportsFallbackAds /><autoEventTracking /><supportSlotInfo /><requiresVideoCallbackUrl /><resetExclusivity /></capabilities><visitor caller=\"AS3-6.1.0-r10821-1505040402\"><httpHeaders><httpHeader value=\"http://edition.cnn.com/videos/world/2016/10/23/bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn\" name=\"referer\" /><httpHeader value=\"23,0,0,185\" name=\"x-flash-version\" /></httpHeaders></visitor><keyValues><keyValue value=\"cap\" key=\"54R\" /><keyValue value=\"cap\" key=\"5DM\" /><keyValue value=\"cap\" key=\"DBD\" /><keyValue value=\"flash\" key=\"_fw_cvp_player\" /><keyValue value=\"580de97e063d0a0a3c875a117700647f\" key=\"guID\" /><keyValue value=\"true\" key=\"inFocus\" /><keyValue value=\"no\" key=\"is_fullscreen\" /><keyValue value=\"q7dgd6wiu\" key=\"krux_user\" /><keyValue value=\"cnn\" key=\"refdom\" /><keyValue value=\"14773070702343746156750741\" key=\"transactionID\" /></keyValues><siteSection customId=\"edition.cnn.com_world_t1\" pageViewRandom=\"1302\" siteSectionNetworkId=\"48804\"><videoPlayer><videoAsset customId=\"cnn-world/2016/10/23/bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn\" videoAssetNetworkId=\"48804\" autoPlay=\"true\" duration=\"62\" videoPlayRandom=\"1302\" durationType=\"EXACT\"><adSlots height=\"349\" defaultSlotProfile=\"48804:cnn_bvp_player\" width=\"620\" compatibleDimensions=\"1680,1050\" /></videoAsset><adSlots /></videoPlayer><adSlots><nonTemporalAdSlot customId=\"cnn_CNNNext_Player_Background_desktop_1\" adUnit=\"CNNNext_Player_Background\" height=\"1100\" slotProfile=\"g_js\" width=\"1900\" acceptCompanion=\"true\"><contentTypes><acceptPrimaryContentType contentTypeId=\"text/html_lit_js_wc_nw\" /></contentTypes></nonTemporalAdSlot></adSlots></siteSection></adRequest>";
		String requestHeader0304 = "POST " + requestFile0304 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Content-type: text/xml\r\n" + 
				"Content-Length: " + requestContent0304.length() + "\r\n" + 		// Content-length: 1956
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0304, requestHost0304, requestPort0304, requestHeader0304, requestContent0304.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0304 = null;		// support garbage collector to reduce memory
		requestContent0304 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/XML", header text fragment = [verification disabled], recorded content size = 1459
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/XML", null, "parameter name='moat_callback'");		// Test [304] <- Index 304
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [305] <- WEB ADMIN Index 336 ---
		String requestProt0305 = "http";
		String requestHost0305 = "js.moatads.com";
		int    requestPort0305 = 80;
		String requestFile0305 = "/crossdomain.xml";
		String requestHeader0305 = "GET " + requestFile0305 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: js.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0305, requestHost0305, requestPort0305, requestHeader0305, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0305 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/XML", header text fragment = [verification disabled], recorded content size = 304
		// content test algorithm: check size +/- 5%, defined content size = 304
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/XML", null, 304, 5);		// Test [305] <- Index 305
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [306] <- WEB ADMIN Index 337 ---
		String requestProt0306 = "http";
		String requestHost0306 = "bea4.cnn.com";
		int    requestPort0306 = 80;
		String requestFile0306 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&cn=slotImpression" +
				"&et=i" +
				"&tpos=0" +
				"&init=1" +
				"&slid=0";
		String requestHeader0306 = "GET " + requestFile0306 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0306, requestHost0306, requestPort0306, requestHeader0306, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0306 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [306] <- Index 306
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [307] <- WEB ADMIN Index 339 ---
		String requestProt0307 = "http";
		String requestHost0307 = "b.scorecardresearch.com";
		int    requestPort0307 = 80;
		String requestFile0307 = "/p" +
				"?c1=2" +
				"&c2=6035748" +
				"&ns_type=hidden" +
				"&ns_st_sv=4.1412.05" +
				"&ns_st_it=r" +
				"&ns_st_id=1477307084427_1" +
				"&ns_st_ec=1" +
				"&ns_st_sp=1" +
				"&ns_st_sq=1" +
				"&ns_st_cn=1" +
				"&ns_st_ev=play" +
				"&ns_st_po=0" +
				"&ns_st_cl=0" +
				"&ns_st_pb=1" +
				"&ns_st_mp=streamsense" +
				"&ns_st_mv=4.1412.05" +
				"&ns_st_pn=1" +
				"&ns_st_tp=1" +
				"&ns_st_ad=1" +
				"&ns_st_ci=0" +
				"&ns_ts=1477307084427" +
				"&ns_st_bt=0" +
				"&ns_st_bp=0" +
				"&ns_st_br=0" +
				"&ns_st_ub=0" +
				"&ns_st_ct=va" +
				"&c3=*null" +
				"&c4=*null" +
				"&c6=*null" +
				"&c7=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&c8=Experts%20claim%20they%27ve%20solved%20Bermuda%20Triangle%20mystery" +
				"&c9=http%3A%2F%2Fedition.cnn.com%2F";
		String requestHeader0307 = "GET " + requestFile0307 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0307, requestHost0307, requestPort0307, requestHeader0307, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0307 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [307] <- Index 307
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [308] <- WEB ADMIN Index 340 ---
		String requestProt0308 = "http";
		String requestHost0308 = "metrics.cnn.com";
		int    requestPort0308 = 80;
		String requestFile0308 = "/b/ss/cnn-adbp-intl/1/H.26.1/s77093848525621" +
				"?AQB=1" +
				"&ndh=1" +
				"&t=24%2F9%2F2016%2013%3A4%3A44%201%20-120" +
				"&fid=0DE0D1A7EC740073-0D35F412D19C24F3" +
				"&ce=UTF-8" +
				"&ns=cnn" +
				"&g=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&cc=USD" +
				"&events=event35" +
				"&v1=vod%20player" +
				"&v3=world" +
				"&v4=page_12col_intl_homepage_index_zone-0-4_watch%20it_cn-grid--small_must-see-videos" +
				"&v5=general%20news" +
				"&v7=62" +
				"&v8=repeat%3A2" +
				"&v10=2" +
				"&v13=video" +
				"&v16=2016%2F10%2F23" +
				"&v17=anonymous" +
				"&v20=23" +
				"&v22=1" +
				"&v23=experts%20claim%20they%27ve%20solved%20bermuda%20triangle%20mystery" +
				"&v26=cnn%3Av%3Aediti%3Adeos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&v27=world" +
				"&v28=world%3Anvs" +
				"&v29=edition.cnn.com" +
				"&v30=cnn%20international" +
				"&v32=adbp%3Avideo" +
				"&v33=other%3Aad%20start" +
				"&v34=does%20not%20require%20authentication" +
				"&c35=cnn.166.1-0-0.20161009%3A0" +
				"&v35=D%3Dc35" +
				"&v37=desktop" +
				"&v41=%2Fvideo%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&v42=%2Fvideo%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&c46=14773070702343746156750741" +
				"&v46=D%3Dc46" +
				"&c47=580de97e063d0a0a3c875a117700647f" +
				"&v47=D%3Dc47" +
				"&v54=video%3Avod%3Anon%20tve%3Aclip%3Aclip%3Aad" +
				"&v57=no%20mvpd%20set" +
				"&c59=nvs" +
				"&v59=D%3Dc59" +
				"&v64=cnn%20news" +
				"&v68=30" +
				"&c73=960%20x%20950" +
				"&v73=D%3Dc73" +
				"&c75=nvs" +
				"&v75=D%3Dc75" +
				"&l1=dbd_54r_5dm" +
				"&pe=lnk_o" +
				"&pev2=cnnvideo-preroll%3A%20experts%20claim%20they%27ve%20solved%20bermuda%20triangle%20mystery" +
				"&s=1920x1080" +
				"&c=24" +
				"&j=1.8.5" +
				"&v=Y" +
				"&k=Y" +
				"&bw=960" +
				"&bh=950" +
				"&AQE=1";
		String requestHeader0308 = "GET " + requestFile0308 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: metrics.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0308, requestHost0308, requestPort0308, requestHeader0308, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0308 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [308] <- Index 308
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [309] <- WEB ADMIN Index 342 ---
		String requestProt0309 = "http";
		String requestHost0309 = "bea4.cnn.com";
		int    requestPort0309 = 80;
		String requestFile0309 = "/ad/l/1" +
				"?metr=127" +
				"&s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&auid=" +
				"&cn=defaultImpression" +
				"&et=i" +
				"&_cc=17149460,6063048,,19312.21475.,1477307083,1" +
				"&tpos=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2" +
				"&init=1" +
				"&cr=";
		String requestHeader0309 = "GET " + requestFile0309 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0309, requestHost0309, requestPort0309, requestHeader0309, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0309 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [309] <- Index 309
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [310] <- WEB ADMIN Index 343 ---
		String requestProt0310 = "http";
		String requestHost0310 = "geo.moatads.com";
		int    requestPort0310 = 80;
		String requestFile0310 = "/n.js" +
				"?e=35" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&i=FREEWHEEL1" +
				"&cm=7" +
				"&bq=8" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&m=0" +
				"&ar=b911905-clean" +
				"&q=1" +
				"&cb=0" +
				"&cu=1477307084610" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&qs=1" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatCCFWNID=48804%3A-" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=69222" +
				"&na=1263945807" +
				"&cs=0" +
				"&callback=MoatSuperV13.gna320195";
		String requestHeader0310 = "GET " + requestFile0310 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: geo.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0310, requestHost0310, requestPort0310, requestHeader0310, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0310 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 66
		// content test algorithm: check size +/- 5%, defined content size = 66
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 66, 5);		// Test [310] <- Index 310
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [311] <- WEB ADMIN Index 344 ---
		String requestProt0311 = "http";
		String requestHost0311 = "video.moatads.com";
		int    requestPort0311 = 80;
		String requestFile0311 = "/pixel.gif" +
				"?e=34" +
				"&ud=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qc=834" +
				"&qd=-1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&qi=1920" +
				"&qj=1057" +
				"&qk=0" +
				"&ql=B%3Fn%2BbqLd8xt%40kk%7CQ%5EG(%2Cn%5Dk%22%2BZ%7Bo~ts1(ul9EU%22y%2F.o%5DI%24%3D!%250ny7ju2*C*YZd3wW0uC9LgPBFXjO%2Bm3.j%23jGT%2F)UEfXT%23%3C1Wszv%3BUgPBFXjO%2Bm3jiO%2B%2CNvR5.fXT1*0Z%3C7b%40Q!7bYLa%24eCKu%2Bay%3BUNSiyMm4MQ2%24(%5DmGUpRiF" +
				"&qo=0" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&i=FREEWHEEL1" +
				"&cm=7" +
				"&bq=8" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&m=0" +
				"&ar=b911905-clean" +
				"&q=0" +
				"&cb=0" +
				"&cu=1477307084610" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&qs=1" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatCCFWNID=48804%3A-" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=69222" +
				"&na=857085959" +
				"&cs=0";
		String requestHeader0311 = "GET " + requestFile0311 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0311, requestHost0311, requestPort0311, requestHeader0311, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0311 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [311] <- Index 311
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [312] <- WEB ADMIN Index 345 ---
		String requestProt0312 = "http";
		String requestHost0312 = "bea4.cnn.com";
		int    requestPort0312 = 80;
		String requestFile0312 = "/ad/p/1?";
		String requestContent0312 = 
				"<adRequest profile=\"48804:cnn_bvp_player\" networkId=\"48804\" version=\"1\"><capabilities><expectMultipleCreativeRenditions /><supportsAdUnitInMultipleSlots /><supportsSlotCallback /><supportNullCreative /><supportAdBundle /><supportsFallbackAds /><autoEventTracking /><supportSlotInfo /><requiresRendererManifest /><requiresVideoCallbackUrl /><resetExclusivity /><refreshDisplaySlots /></capabilities><visitor caller=\"AS3-6.1.0-r10821-1505040402\"><httpHeaders><httpHeader value=\"http://edition.cnn.com/videos/world/2016/10/23/bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn\" name=\"referer\" /><httpHeader value=\"23,0,0,185\" name=\"x-flash-version\" /></httpHeaders></visitor><keyValues><keyValue value=\"cap\" key=\"54R\" /><keyValue value=\"cap\" key=\"5DM\" /><keyValue value=\"cap\" key=\"DBD\" /><keyValue value=\"flash\" key=\"_fw_cvp_player\" /><keyValue value=\"580de97e063d0a0a3c875a117700647f\" key=\"guID\" /><keyValue value=\"true\" key=\"inFocus\" /><keyValue value=\"no\" key=\"is_fullscreen\" /><keyValue value=\"q7dgd6wiu\" key=\"krux_user\" /><keyValue value=\"cnn\" key=\"refdom\" /><keyValue value=\"14773070702343746156750741\" key=\"transactionID\" /></keyValues><siteSection customId=\"edition.cnn.com_world_t1\" pageViewRandom=\"1302\" siteSectionNetworkId=\"48804\"><videoPlayer><videoAsset customId=\"cnn-world/2016/10/23/bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn\" videoAssetNetworkId=\"48804\" autoPlay=\"true\" duration=\"62\" videoPlayRandom=\"1302\" durationType=\"EXACT\"><adSlots defaultSlotProfile=\"48804:cnn_bvp_player\" compatibleDimensions=\"1680,1050\" /></videoAsset><adSlots /></videoPlayer><adSlots><nonTemporalAdSlot customId=\"cnn_CNNNext_Player_Background_desktop_1\" adUnit=\"CNNNext_Player_Background\" height=\"1100\" slotProfile=\"g_js\" width=\"1900\" acceptCompanion=\"false\"><contentTypes><acceptPrimaryContentType contentTypeId=\"text/html_lit_js_wc_nw\" /></contentTypes></nonTemporalAdSlot></adSlots></siteSection></adRequest>";
		String requestHeader0312 = "POST " + requestFile0312 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Content-type: text/xml\r\n" + 
				"Content-Length: " + requestContent0312.length() + "\r\n" + 		// Content-length: 1942
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0312, requestHost0312, requestPort0312, requestHeader0312, requestContent0312.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0312 = null;		// support garbage collector to reduce memory
		requestContent0312 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/XML", header text fragment = [verification disabled], recorded content size = 1459
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/XML", null, "parameter category='profile' name='replaceMissingCompanion'");		// Test [312] <- Index 312
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [313] <- WEB ADMIN Index 346 ---
		String requestProt0313 = "http";
		String requestHost0313 = "bea4.cnn.com";
		int    requestPort0313 = 80;
		String requestFile0313 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=17" +
				"&ord=1477307084610";
		String requestHeader0313 = "GET " + requestFile0313 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0313, requestHost0313, requestPort0313, requestHeader0313, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0313 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [313] <- Index 313
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [314] <- WEB ADMIN Index 347 ---
		String requestProt0314 = "http";
		String requestHost0314 = "jsonp.moatads.com";
		int    requestPort0314 = 80;
		String requestFile0314 = "/ocr/TURNER_FREEWHEEL2/level3/g58379-23230" +
				"?t=2016924130";
		String requestHeader0314 = "GET " + requestFile0314 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jsonp.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0314, requestHost0314, requestPort0314, requestHeader0314, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0314 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/OCTET-STREAM", header text fragment = [verification disabled], recorded content size = 679
		// content test algorithm: check size +/- 5%, defined content size = 679
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/OCTET-STREAM", null, 679, 5);		// Test [314] <- Index 314
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [315] <- WEB ADMIN Index 348 ---
		String requestProt0315 = "http";
		String requestHost0315 = "bea4.cnn.com";
		int    requestPort0315 = 80;
		String requestFile0315 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=18" +
				"&ord=1477307084610";
		String requestHeader0315 = "GET " + requestFile0315 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0315, requestHost0315, requestPort0315, requestHeader0315, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0315 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [315] <- Index 315
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [316] <- WEB ADMIN Index 349 ---
		String requestProt0316 = "http";
		String requestHost0316 = "bea4.cnn.com";
		int    requestPort0316 = 80;
		String requestFile0316 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=10";
		String requestHeader0316 = "GET " + requestFile0316 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0316, requestHost0316, requestPort0316, requestHeader0316, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0316 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [316] <- Index 316
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [317] <- WEB ADMIN Index 350 ---
		String requestProt0317 = "http";
		String requestHost0317 = "video.moatads.com";
		int    requestPort0317 = 80;
		String requestFile0317 = "/pixel.gif" +
				"?e=17" +
				"&i=FREEWHEEL1" +
				"&cm=7" +
				"&bq=8" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&m=0" +
				"&ar=b911905-clean" +
				"&q=2" +
				"&cb=0" +
				"&cu=1477307084610" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&qs=1" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatCCFWNID=48804%3A-" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=69222" +
				"&na=1807577565" +
				"&cs=0";
		String requestHeader0317 = "GET " + requestFile0317 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0317, requestHost0317, requestPort0317, requestHeader0317, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0317 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [317] <- Index 317
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [318] <- WEB ADMIN Index 351 ---
		String requestProt0318 = "http";
		String requestHost0318 = "video.moatads.com";
		int    requestPort0318 = 80;
		String requestFile0318 = "/pixel.gif" +
				"?e=0" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=http%3A%2F%2Fz.cdn.turner.com%2Fxslo%2Fcvp%2Fassets%2Fcontainer%2F2.0.4.0%2Fcvp_main_container.swf" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=0" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&cu=1477307084610" +
				"&m=250" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=137" +
				"&lb=6143" +
				"&le=1" +
				"&ch=1" +
				"&as=0" +
				"&ag=7" +
				"&an=0" +
				"&gf=7" +
				"&gg=0" +
				"&ez=1" +
				"&aj=1" +
				"&pg=100" +
				"&pf=0" +
				"&ib=0" +
				"&cc=0" +
				"&bw=7" +
				"&bx=0" +
				"&undefined=1" +
				"&dj=1" +
				"&em=0" +
				"&en=0" +
				"&bu=0" +
				"&cd=0" +
				"&ah=0" +
				"&am=0" +
				"&dq=0" +
				"&dr=0" +
				"&ds=0" +
				"&dt=0" +
				"&hc=0" +
				"&er=7" +
				"&es=0" +
				"&eu=7" +
				"&ev=0" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&eb=1" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=1087638897" +
				"&cs=0";
		String requestHeader0318 = "GET " + requestFile0318 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0318, requestHost0318, requestPort0318, requestHeader0318, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0318 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [318] <- Index 318
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [319] <- WEB ADMIN Index 352 ---
		String requestProt0319 = "http";
		String requestHost0319 = "video.moatads.com";
		int    requestPort0319 = 80;
		String requestFile0319 = "/pixel.gif" +
				"?e=29" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=1" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&cu=1477307084610" +
				"&m=260" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=137" +
				"&lb=6143" +
				"&le=1" +
				"&ch=1" +
				"&as=0" +
				"&ag=7" +
				"&an=7" +
				"&gf=7" +
				"&gg=7" +
				"&ez=1" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&cc=0" +
				"&bw=7" +
				"&bx=7" +
				"&undefined=1" +
				"&dj=1" +
				"&em=0" +
				"&en=0" +
				"&bu=31" +
				"&cd=0" +
				"&ah=31" +
				"&am=0" +
				"&dq=31" +
				"&dr=0" +
				"&ds=31" +
				"&dt=0" +
				"&hc=0" +
				"&er=7" +
				"&es=7" +
				"&eu=7" +
				"&ev=7" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=14930" +
				"&ef=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=104526548" +
				"&cs=0";
		String requestHeader0319 = "GET " + requestFile0319 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0319, requestHost0319, requestPort0319, requestHeader0319, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0319 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [319] <- Index 319
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [320] <- WEB ADMIN Index 353 ---
		String requestProt0320 = "http";
		String requestHost0320 = "364bf52c.mpstat.us";
		int    requestPort0320 = 80;
		String requestFile0320 = "/";
		String requestContent0320 = 
				requestFileCache.readFile(getSymmetricEncryptContext(), "longTest_RequestContent0320.txt").getFileDataAsString();		// note: consider duplicated definition of this file name near end of the load test program - used for ZIP-dialogue in Project Navigator
		String requestHeader0320 = "POST " + requestFile0320 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: 364bf52c.mpstat.us\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"Content-Type: application/x-www-form-urlencoded\r\n" + 
				"Content-Length: " + requestContent0320.length() + "\r\n" + 		// Content-Length: 24904
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0320, requestHost0320, requestPort0320, requestHeader0320, requestContent0320.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0320 = null;		// support garbage collector to reduce memory
		requestContent0320 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, null, null, 0, 5);		// Test [320] <- Index 320
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_15 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_16.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_16(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 17 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [321] <- WEB ADMIN Index 354 ---
		String requestProt0321 = "http";
		String requestHost0321 = "video.moatads.com";
		int    requestPort0321 = 80;
		String requestFile0321 = "/pixel.gif" +
				"?e=23" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=2" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&cu=1477307084610" +
				"&m=344" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=137" +
				"&lb=6143" +
				"&le=1" +
				"&lf=313" +
				"&lg=0" +
				"&lh=287" +
				"&ch=1" +
				"&as=0" +
				"&ag=64" +
				"&an=7" +
				"&gf=64" +
				"&gg=7" +
				"&ez=1" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&cc=0" +
				"&bw=64" +
				"&bx=7" +
				"&undefined=1" +
				"&dj=1" +
				"&em=0" +
				"&en=0" +
				"&bu=114" +
				"&cd=31" +
				"&ah=114" +
				"&am=31" +
				"&dq=114" +
				"&dr=31" +
				"&ds=114" +
				"&dt=31" +
				"&hc=0" +
				"&er=64" +
				"&es=7" +
				"&eu=64" +
				"&ev=7" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=14930" +
				"&ef=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=332574899" +
				"&cs=0";
		String requestHeader0321 = "GET " + requestFile0321 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0321, requestHost0321, requestPort0321, requestHeader0321, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0321 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [321] <- Index 321
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [322] <- WEB ADMIN Index 355 ---
		String requestProt0322 = "http";
		String requestHost0322 = "bea4.cnn.com";
		int    requestPort0322 = 80;
		String requestFile0322 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=11" +
				"&ord=1477307084610";
		String requestHeader0322 = "GET " + requestFile0322 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0322, requestHost0322, requestPort0322, requestHeader0322, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0322 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [322] <- Index 322
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [323] <- WEB ADMIN Index 356 ---
		String requestProt0323 = "http";
		String requestHost0323 = "bea4.cnn.com";
		int    requestPort0323 = 80;
		String requestFile0323 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=14";
		String requestHeader0323 = "GET " + requestFile0323 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0323, requestHost0323, requestPort0323, requestHeader0323, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0323 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [323] <- Index 323
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [324] <- WEB ADMIN Index 357 ---
		String requestProt0324 = "http";
		String requestHost0324 = "video.moatads.com";
		int    requestPort0324 = 80;
		String requestFile0324 = "/pixel.gif" +
				"?e=5" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=3" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&cu=1477307084610" +
				"&m=1346" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=137" +
				"&lb=6143" +
				"&le=1" +
				"&lf=313" +
				"&lg=0" +
				"&lh=287" +
				"&ch=1" +
				"&as=1" +
				"&ag=1103" +
				"&an=64" +
				"&gi=1" +
				"&gf=1103" +
				"&gg=64" +
				"&ez=1" +
				"&kw=1107" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&cc=1" +
				"&bw=1103" +
				"&bx=64" +
				"&undefined=1" +
				"&jz=1107" +
				"&dj=1" +
				"&dx=1" +
				"&em=0" +
				"&en=0" +
				"&bu=1117" +
				"&cd=114" +
				"&ah=1117" +
				"&am=114" +
				"&dq=1117" +
				"&dr=114" +
				"&ds=1117" +
				"&dt=114" +
				"&hc=0" +
				"&er=1103" +
				"&es=64" +
				"&eu=1103" +
				"&ev=64" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=14930" +
				"&ef=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=1510680162" +
				"&cs=0";
		String requestHeader0324 = "GET " + requestFile0324 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0324, requestHost0324, requestPort0324, requestHeader0324, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0324 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [324] <- Index 324
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [325] <- WEB ADMIN Index 358 ---
		String requestProt0325 = "http";
		String requestHost0325 = "video.moatads.com";
		int    requestPort0325 = 80;
		String requestFile0325 = "/pixel.gif" +
				"?e=37" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=4" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&cu=1477307084610" +
				"&m=1350" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=137" +
				"&lb=6143" +
				"&le=1" +
				"&lf=313" +
				"&lg=0" +
				"&lh=287" +
				"&ch=1" +
				"&as=1" +
				"&ag=1103" +
				"&an=1103" +
				"&gi=1" +
				"&gf=1103" +
				"&gg=1103" +
				"&ez=1" +
				"&kw=1107" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&cc=1" +
				"&bw=1103" +
				"&bx=1103" +
				"&undefined=1" +
				"&jz=1107" +
				"&dj=1" +
				"&dx=1" +
				"&em=0" +
				"&en=0" +
				"&bu=1121" +
				"&cd=1117" +
				"&ah=1121" +
				"&am=1117" +
				"&dq=1121" +
				"&dr=1117" +
				"&ds=1121" +
				"&dt=1117" +
				"&hc=0" +
				"&er=1103" +
				"&es=1103" +
				"&eu=1103" +
				"&ev=1103" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=14930" +
				"&ef=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=1550394400" +
				"&cs=0";
		String requestHeader0325 = "GET " + requestFile0325 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0325, requestHost0325, requestPort0325, requestHeader0325, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0325 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [325] <- Index 325
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [326] <- WEB ADMIN Index 359 ---
		String requestProt0326 = "http";
		String requestHost0326 = "video.moatads.com";
		int    requestPort0326 = 80;
		String requestFile0326 = "/pixel.gif" +
				"?e=4" +
				"&q=0" +
				"&ai=1548" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=5" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&cu=1477307084610" +
				"&m=1670" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=138" +
				"&lb=6143" +
				"&le=1" +
				"&lf=313" +
				"&lg=0" +
				"&lh=287" +
				"&ch=1" +
				"&as=1" +
				"&ag=1131" +
				"&an=1103" +
				"&gi=1" +
				"&gf=1131" +
				"&gg=1103" +
				"&ez=1" +
				"&kw=1107" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&cc=1" +
				"&bw=1130" +
				"&bx=1103" +
				"&undefined=1" +
				"&jz=1107" +
				"&dj=1" +
				"&dx=1" +
				"&em=0" +
				"&en=0" +
				"&bu=1440" +
				"&cd=1121" +
				"&ah=1440" +
				"&am=1121" +
				"&dq=1441" +
				"&dr=1121" +
				"&ds=1441" +
				"&dt=1121" +
				"&hc=0" +
				"&er=1131" +
				"&es=1103" +
				"&eu=1131" +
				"&ev=1103" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=14930" +
				"&ef=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=1434182090" +
				"&cs=0";
		String requestHeader0326 = "GET " + requestFile0326 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0326, requestHost0326, requestPort0326, requestHeader0326, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0326 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [326] <- Index 326
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [327] <- WEB ADMIN Index 360 ---
		String requestProt0327 = "http";
		String requestHost0327 = "video.moatads.com";
		int    requestPort0327 = 80;
		String requestFile0327 = "/pixel.gif" +
				"?e=5" +
				"&q=1" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=6" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&cu=1477307084610" +
				"&m=2355" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=341.6666717529297" +
				"&lb=6183" +
				"&le=1" +
				"&lf=313" +
				"&lg=0" +
				"&lh=287" +
				"&ch=1" +
				"&as=1" +
				"&ag=2111" +
				"&an=1131" +
				"&gi=1" +
				"&gf=1734" +
				"&gg=1131" +
				"&ez=1" +
				"&ck=2111" +
				"&kw=1107" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&ka=1" +
				"&kb=1" +
				"&cc=1" +
				"&bw=2111" +
				"&bx=1130" +
				"&undefined=1" +
				"&ci=2111" +
				"&jz=1107" +
				"&dj=1" +
				"&dx=1" +
				"&em=0" +
				"&en=0" +
				"&bu=2126" +
				"&cd=1440" +
				"&ah=2126" +
				"&am=1440" +
				"&dq=2126" +
				"&dr=1441" +
				"&ds=2126" +
				"&dt=1441" +
				"&hc=0" +
				"&er=2111" +
				"&es=1131" +
				"&eu=1734" +
				"&ev=1131" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=14930" +
				"&ef=3" +
				"&ai=1548" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=1578064334" +
				"&cs=0";
		String requestHeader0327 = "GET " + requestFile0327 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0327, requestHost0327, requestPort0327, requestHeader0327, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0327 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [327] <- Index 327
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [328] <- WEB ADMIN Index 361 ---
		String requestProt0328 = "https";
		String requestHost0328 = "pubads.g.doubleclick.net";
		int    requestPort0328 = 443;
		String requestFile0328 = "/activity;csk=BGjwFw-oNWPCwA9OAZMqZjOADhdSk6wcAAAAQASAAOABYlc794PwCYPGt_IWkH4IBF2NhLXB1Yi0yODU1MjQ3NDQxOTM1ODA1sgEPZWRpdGlvbi5jbm4uY29tugEJZ2ZwX2ltYWdlyAEJ2gFxaHR0cDovL2VkaXRpb24uY25uLmNvbS92aWRlb3Mvd29ybGQvMjAxNi8xMC8yMy9iZXJtdWRhLXRyaWFuZ2xlLWNsb3Vkcy13ZWF0aGVyLXNjaWVuY2UtY2hhbm5lbC1qbmQtb3JpZy12c3Rhbi5jbm7AAgLgAgDqAhkvODY2MzQ3Ny9DTk5pL3dvcmxkL3ZpZGVv-AL20R6QA8gGmAPgA6gDAdAEkE7gBAHSBQUQleycS5AGAaAGL9gHAOAHCw;&timestamp=1477307088819;eid2=72;ecn2=1;etm2=10;";
		String requestHeader0328 = "GET " + requestFile0328 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pubads.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0328, requestHost0328, requestPort0328, requestHeader0328, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0328 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [328] <- Index 328
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [329] <- WEB ADMIN Index 362 ---
		String requestProt0329 = "http";
		String requestHost0329 = "bea4.cnn.com";
		int    requestPort0329 = 80;
		String requestFile0329 = "/ad/l/1" +
				"?metr=127" +
				"&ct=8" +
				"&et=i" +
				"&cn=firstQuartile" +
				"&s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2";
		String requestHeader0329 = "GET " + requestFile0329 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0329, requestHost0329, requestPort0329, requestHeader0329, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0329 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [329] <- Index 329
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [330] <- WEB ADMIN Index 363 ---
		String requestProt0330 = "http";
		String requestHost0330 = "ping.chartbeat.net";
		int    requestPort0330 = 80;
		String requestFile0330 = "/ping" +
				"?h=edition.cnn.com" +
				"&p=%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&u=DK-3L5D9nIqOBXmMI4" +
				"&d=edition.cnn.com" +
				"&g=37612" +
				"&g0=world%2Cvideos%2Cvideo%2Cvid-vid-vls-col%2Ccol-stories-worth-watching" +
				"&n=1" +
				"&f=00001" +
				"&c=0.25" +
				"&x=0" +
				"&m=209" +
				"&y=6143" +
				"&o=960" +
				"&w=950" +
				"&j=30" +
				"&R=1" +
				"&W=0" +
				"&I=0" +
				"&E=11" +
				"&e=11" +
				"&v=%2F" +
				"&K=657::3490::CqqirfDGrujlFApEv6LYlJD6W2o_::*%5B%40id%3D%27intl_homepage2-zone-1%27%5D%2Fdiv%5B2%5D%2Fdiv%5B2%5D%2Fdiv%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B6%5D%2Farticle%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B2%5D%2Fh3%5B1%5D%2Fa%5B1%5D::c::http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn::BupFH2HyBBCBH9LmiHjss0CF_Ev" +
				"&b=5813" +
				"&t=BTKYZFDv2GfB6NynpBrVUbSC-7JT6" +
				"&V=83" +
				"&tz=-120" +
				"&sn=2" +
				"&eS=0076" +
				"&EE=11" +
				"&_";
		String requestHeader0330 = "GET " + requestFile0330 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ping.chartbeat.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0330, requestHost0330, requestPort0330, requestHeader0330, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0330 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [330] <- Index 330
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [331] <- WEB ADMIN Index 364 ---
		String requestProt0331 = "http";
		String requestHost0331 = "b.scorecardresearch.com";
		int    requestPort0331 = 80;
		String requestFile0331 = "/p" +
				"?c1=2" +
				"&c2=6035748" +
				"&ns_type=hidden" +
				"&ns_st_sv=4.1412.05" +
				"&ns_st_it=r" +
				"&ns_st_id=1477307084427_1" +
				"&ns_st_ec=2" +
				"&ns_st_sp=1" +
				"&ns_st_cn=1" +
				"&ns_st_ev=hb" +
				"&ns_st_po=10041" +
				"&ns_st_cl=0" +
				"&ns_st_hc=1" +
				"&ns_st_mp=streamsense" +
				"&ns_st_mv=4.1412.05" +
				"&ns_st_pn=1" +
				"&ns_st_tp=1" +
				"&ns_st_pt=10042" +
				"&ns_st_pa=10042" +
				"&ns_st_ad=1" +
				"&ns_st_ci=0" +
				"&ns_ts=1477307094468" +
				"&ns_st_bt=0" +
				"&ns_st_bp=0" +
				"&ns_st_pc=0" +
				"&ns_st_pp=0" +
				"&ns_st_br=0" +
				"&ns_st_ub=0" +
				"&ns_st_ct=va" +
				"&c3=*null" +
				"&c4=*null" +
				"&c6=*null" +
				"&c7=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&c8=Experts%20claim%20they%27ve%20solved%20Bermuda%20Triangle%20mystery" +
				"&c9=http%3A%2F%2Fedition.cnn.com%2F";
		String requestHeader0331 = "GET " + requestFile0331 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0331, requestHost0331, requestPort0331, requestHeader0331, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0331 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [331] <- Index 331
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [332] <- WEB ADMIN Index 365 ---
		String requestProt0332 = "https";
		String requestHost0332 = "pubads.g.doubleclick.net";
		int    requestPort0332 = 443;
		String requestFile0332 = "/activity;csk=BGjwFw-oNWPCwA9OAZMqZjOADhdSk6wcAAAAQASAAOABYlc794PwCYPGt_IWkH4IBF2NhLXB1Yi0yODU1MjQ3NDQxOTM1ODA1sgEPZWRpdGlvbi5jbm4uY29tugEJZ2ZwX2ltYWdlyAEJ2gFxaHR0cDovL2VkaXRpb24uY25uLmNvbS92aWRlb3Mvd29ybGQvMjAxNi8xMC8yMy9iZXJtdWRhLXRyaWFuZ2xlLWNsb3Vkcy13ZWF0aGVyLXNjaWVuY2UtY2hhbm5lbC1qbmQtb3JpZy12c3Rhbi5jbm7AAgLgAgDqAhkvODY2MzQ3Ny9DTk5pL3dvcmxkL3ZpZGVv-AL20R6QA8gGmAPgA6gDAdAEkE7gBAHSBQUQleycS5AGAaAGL9gHAOAHCw;&timestamp=1477307098817;eid1=72;ecn1=0;etm1=10;";
		String requestHeader0332 = "GET " + requestFile0332 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pubads.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0332, requestHost0332, requestPort0332, requestHeader0332, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0332 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [332] <- Index 332
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [333] <- WEB ADMIN Index 366 ---
		String requestProt0333 = "http";
		String requestHost0333 = "bea4.cnn.com";
		int    requestPort0333 = 80;
		String requestFile0333 = "/ad/l/1" +
				"?metr=127" +
				"&ct=7" +
				"&et=i" +
				"&cn=midPoint" +
				"&s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2";
		String requestHeader0333 = "GET " + requestFile0333 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0333, requestHost0333, requestPort0333, requestHeader0333, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0333 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [333] <- Index 333
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [334] <- WEB ADMIN Index 367 ---
		String requestProt0334 = "http";
		String requestHost0334 = "bea4.cnn.com";
		int    requestPort0334 = 80;
		String requestFile0334 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=12" +
				"&ord=1477307084610";
		String requestHeader0334 = "GET " + requestFile0334 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0334, requestHost0334, requestPort0334, requestHeader0334, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0334 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [334] <- Index 334
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [335] <- WEB ADMIN Index 368 ---
		String requestProt0335 = "http";
		String requestHost0335 = "bea4.cnn.com";
		int    requestPort0335 = 80;
		String requestFile0335 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=15";
		String requestHeader0335 = "GET " + requestFile0335 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0335, requestHost0335, requestPort0335, requestHeader0335, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0335 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [335] <- Index 335
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [336] <- WEB ADMIN Index 369 ---
		String requestProt0336 = "http";
		String requestHost0336 = "b.scorecardresearch.com";
		int    requestPort0336 = 80;
		String requestFile0336 = "/p" +
				"?c1=2" +
				"&c2=6035748" +
				"&ns_type=hidden" +
				"&ns_st_sv=4.1412.05" +
				"&ns_st_it=r" +
				"&ns_st_id=1477307084427_1" +
				"&ns_st_ec=2" +
				"&ns_st_sp=1" +
				"&ns_st_cn=1" +
				"&ns_st_ev=hb" +
				"&ns_st_po=20047" +
				"&ns_st_cl=0" +
				"&ns_st_hc=2" +
				"&ns_st_mp=streamsense" +
				"&ns_st_mv=4.1412.05" +
				"&ns_st_pn=1" +
				"&ns_st_tp=1" +
				"&ns_st_pt=20047" +
				"&ns_st_pa=20047" +
				"&ns_st_ad=1" +
				"&ns_st_ci=0" +
				"&ns_ts=1477307104474" +
				"&ns_st_bt=0" +
				"&ns_st_bp=0" +
				"&ns_st_pc=0" +
				"&ns_st_pp=0" +
				"&ns_st_br=0" +
				"&ns_st_ub=0" +
				"&ns_st_ct=va" +
				"&c3=*null" +
				"&c4=*null" +
				"&c6=*null" +
				"&c7=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&c8=Experts%20claim%20they%27ve%20solved%20Bermuda%20Triangle%20mystery" +
				"&c9=http%3A%2F%2Fedition.cnn.com%2F";
		String requestHeader0336 = "GET " + requestFile0336 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0336, requestHost0336, requestPort0336, requestHeader0336, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0336 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [336] <- Index 336
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [337] <- WEB ADMIN Index 370 ---
		String requestProt0337 = "https";
		String requestHost0337 = "incoming.telemetry.mozilla.org";
		int    requestPort0337 = 443;
		String requestFile0337 = "/submit/telemetry/f50d4146-1b4f-d242-8db8-67b35e354518/main/Firefox/49.0.1/release/20160922113459" +
				"?v=4";
		String requestContent0337 = 
				requestFileCache.readFile(getSymmetricEncryptContext(), "longTest_RequestContent0337.txt").getFileDataAsString("UTF-8");		// note: consider duplicated definition of this file name near end of the load test program - used for ZIP-dialogue in Project Navigator
		byte[] requestContentBinary0337 = requestContent0337.getBytes("UTF-8");
		String requestHeader0337 = "POST " + requestFile0337 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: incoming.telemetry.mozilla.org\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Content-Type: application/json; charset=UTF-8\r\n" + 
				"Date: Mon, 24 Oct 2016 11:05:03 GMT\r\n" + 
				"Content-Encoding: gzip\r\n" + 
				"Content-Length: " + requestContentBinary0337.length + "\r\n" + 		// Content-Length: 12537
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0337, requestHost0337, requestPort0337, requestHeader0337, requestContentBinary0337, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0337 = null;		// support garbage collector to reduce memory
		requestContent0337 = null;		// support garbage collector to reduce memory
		requestContentBinary0337 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/PLAIN", header text fragment = [verification disabled], recorded content size = 20
		// content test algorithm: check size +/- 5%, defined content size = 20
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/PLAIN", null, 20, 5);		// Test [337] <- Index 337
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [338] <- WEB ADMIN Index 371 ---
		String requestProt0338 = "https";
		String requestHost0338 = "aus5.mozilla.org";
		int    requestPort0338 = 443;
		String requestFile0338 = "/update/3/GMP/49.0.2/20161019084923/Darwin_x86_64-gcc3-u-i386-x86_64/en-GB/release/Darwin%2016.0.0/default/default/update.xml";
		String requestHeader0338 = "GET " + requestFile0338 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: aus5.mozilla.org\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Cache-Control: no-cache\r\n" + 
				"Pragma: no-cache\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0338, requestHost0338, requestPort0338, requestHeader0338, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0338 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/XML", header text fragment = [verification disabled], recorded content size = 443
		// content test algorithm: check size +/- 5%, defined content size = 443
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/XML", null, 443, 5);		// Test [338] <- Index 338
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [339] <- WEB ADMIN Index 372 ---
		String requestProt0339 = "https";
		String requestHost0339 = "pixel.moatads.com";
		int    requestPort0339 = 443;
		String requestFile0339 = "/pixel.gif" +
				"?e=25" +
				"&q=2" +
				"&hp=1" +
				"&kq=1" +
				"&lo=0" +
				"&qs=1" +
				"&ak=http%3A%2F%2Fs0.2mdn.net%2Fads%2Frichmedia%2Fstudio%2Fpv2%2F43981339%2F20160623044522387%2Fweb%2Fmoneytransfer_300x600_65_v2.html%3Fe%3D69%26renderingType%3D2%26leftOffset%3D0%26topOffset%3D0%26c%3DsMgOfXy6Ny%26t%3D1" +
				"&i=TURNERDFP1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&gz=0" +
				"&hh=0" +
				"&hn=0" +
				"&qt=0" +
				"&bq=0" +
				"&g=4" +
				"&h=600" +
				"&w=300" +
				"&fy=0" +
				"&gp=0" +
				"&cm=0" +
				"&zMoatPS=rect_btf_01" +
				"&zMoatHT=600" +
				"&zMoatWD=300" +
				"&zMoatST=Site%20Not%20Defined" +
				"&zMoatPSB=rect_btf_01" +
				"&zMoatOrigSlicer1=%2F8663477%2FCNNi%2Fworld%2Fvideo" +
				"&zMoatOrigSlicer2=52145557" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com%2F" +
				"&o=3" +
				"&t=1477307076161" +
				"&de=672336039138" +
				"&cu=1477307076161" +
				"&m=30065" +
				"&ar=a243607-clean" +
				"&cb=0" +
				"&ll=3" +
				"&ln=1" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=1343" +
				"&lb=6183" +
				"&le=1" +
				"&lf=169" +
				"&lg=0" +
				"&lh=50" +
				"&ch=1" +
				"&as=0" +
				"&ag=0" +
				"&an=0" +
				"&gf=0" +
				"&gg=0" +
				"&aj=0" +
				"&pg=0" +
				"&pf=0" +
				"&ib=1" +
				"&cc=0" +
				"&bw=0" +
				"&bx=0" +
				"&dj=0" +
				"&em=0" +
				"&en=0" +
				"&bu=30009" +
				"&cd=10203" +
				"&ah=30008" +
				"&am=10202" +
				"&wb=1" +
				"&ai=9985" +
				"&cl=0" +
				"&at=0" +
				"&d=60921397%3A407762077%3A157758997%3A102208857877" +
				"&bo=%2F8663477%2FCNNi%2Fworld%2Fvideo" +
				"&bp=52145557" +
				"&bd=rect_btf_01" +
				"&zMoatAltSL=zMoatAdUnit1%3AzMoatAdUnit2%3AzMoatPS" +
				"&gw=turner763610601596" +
				"&dfp=0%2C4" +
				"&la=52145557" +
				"&cadf=-" +
				"&gptMoat_pg=-" +
				"&gptMoat_appname=-" +
				"&gptMoat_pos=rect_btf_01" +
				"&gptMoat_mivr=-" +
				"&ab=2" +
				"&ac=1" +
				"&fd=1" +
				"&kt=strict" +
				"&it=500" +
				"&fs=95074" +
				"&na=1653528341" +
				"&cs=0";
		String requestHeader0339 = "GET " + requestFile0339 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pixel.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0339, requestHost0339, requestPort0339, requestHeader0339, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0339 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [339] <- Index 339
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [340] <- WEB ADMIN Index 373 ---
		String requestProt0340 = "http";
		String requestHost0340 = "bea4.cnn.com";
		int    requestPort0340 = 80;
		String requestFile0340 = "/ad/l/1" +
				"?metr=127" +
				"&ct=8" +
				"&et=i" +
				"&cn=thirdQuartile" +
				"&s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2";
		String requestHeader0340 = "GET " + requestFile0340 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0340, requestHost0340, requestPort0340, requestHeader0340, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0340 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [340] <- Index 340
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_16 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_17.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_17(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 18 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [341] <- WEB ADMIN Index 374 ---
		String requestProt0341 = "http";
		String requestHost0341 = "ping.chartbeat.net";
		int    requestPort0341 = 80;
		String requestFile0341 = "/ping" +
				"?h=edition.cnn.com" +
				"&p=%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&u=DK-3L5D9nIqOBXmMI4" +
				"&d=edition.cnn.com" +
				"&g=37612" +
				"&g0=world%2Cvideos%2Cvideo%2Cvid-vid-vls-col%2Ccol-stories-worth-watching" +
				"&n=1" +
				"&f=00001" +
				"&c=0.5" +
				"&x=1343" +
				"&m=1343" +
				"&y=6183" +
				"&o=960" +
				"&w=950" +
				"&j=30" +
				"&R=1" +
				"&W=0" +
				"&I=0" +
				"&E=26" +
				"&e=15" +
				"&v=%2F" +
				"&K=657::3490::CqqirfDGrujlFApEv6LYlJD6W2o_::*%5B%40id%3D%27intl_homepage2-zone-1%27%5D%2Fdiv%5B2%5D%2Fdiv%5B2%5D%2Fdiv%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B6%5D%2Farticle%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B2%5D%2Fh3%5B1%5D%2Fa%5B1%5D::c::http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn::BupFH2HyBBCBH9LmiHjss0CF_Ev" +
				"&b=5813" +
				"&t=BTKYZFDv2GfB6NynpBrVUbSC-7JT6" +
				"&V=83" +
				"&tz=-120" +
				"&sn=3" +
				"&eS=7000" +
				"&eM=0c20" +
				"&EE=26" +
				"&_";
		String requestHeader0341 = "GET " + requestFile0341 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ping.chartbeat.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0341, requestHost0341, requestPort0341, requestHeader0341, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0341 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [341] <- Index 341
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [342] <- WEB ADMIN Index 375 ---
		String requestProt0342 = "http";
		String requestHost0342 = "ping.chartbeat.net";
		int    requestPort0342 = 80;
		String requestFile0342 = "/ping" +
				"?h=edition.cnn.com" +
				"&p=%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&u=DK-3L5D9nIqOBXmMI4" +
				"&d=edition.cnn.com" +
				"&g=37612" +
				"&g0=world%2Cvideos%2Cvideo%2Cvid-vid-vls-col%2Ccol-stories-worth-watching" +
				"&n=1" +
				"&f=00001" +
				"&c=0.51" +
				"&x=1343" +
				"&m=1343" +
				"&y=6183" +
				"&o=960" +
				"&w=950" +
				"&j=30" +
				"&R=0" +
				"&W=0" +
				"&I=1" +
				"&E=26" +
				"&e=0" +
				"&v=%2F" +
				"&K=657::3490::CqqirfDGrujlFApEv6LYlJD6W2o_::*%5B%40id%3D%27intl_homepage2-zone-1%27%5D%2Fdiv%5B2%5D%2Fdiv%5B2%5D%2Fdiv%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B6%5D%2Farticle%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B2%5D%2Fh3%5B1%5D%2Fa%5B1%5D::c::http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn::BupFH2HyBBCBH9LmiHjss0CF_Ev" +
				"&KK=657::2044::6bWDqlh_MnCrdliDC7_aqDmJ9Eq::*%5B%40id%3D%27otherCollections%27%5D%2Fdiv%5B2%5D%2Fdiv%5B2%5D%2Fdiv%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B6%5D%2Farticle%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B2%5D%2Fh3%5B1%5D%2Fa%5B1%5D::c::http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn::BypBLNI28MXBDKNTaCjFOasCg9JTq" +
				"&b=5813" +
				"&t=BTKYZFDv2GfB6NynpBrVUbSC-7JT6" +
				"&V=83" +
				"&tz=-120" +
				"&sn=4" +
				"&eM=0001" +
				"&eD=0001" +
				"&EE=27" +
				"&_";
		String requestHeader0342 = "GET " + requestFile0342 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ping.chartbeat.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0342, requestHost0342, requestPort0342, requestHeader0342, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0342 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [342] <- Index 342
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [343] <- WEB ADMIN Index 376 ---
		String requestProt0343 = "http";
		String requestHost0343 = "video.moatads.com";
		int    requestPort0343 = 80;
		String requestFile0343 = "/pixel.gif" +
				"?e=21" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=15" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307084610" +
				"&de=850585175820" +
				"&cu=1477307084610" +
				"&m=24094" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=3" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=1475.6666717529297" +
				"&lb=6183" +
				"&le=1" +
				"&lf=313" +
				"&lg=0" +
				"&lh=287" +
				"&ch=1" +
				"&as=1" +
				"&ag=23777" +
				"&an=23777" +
				"&gi=1" +
				"&gf=23067" +
				"&gg=23067" +
				"&ez=1" +
				"&ck=2111" +
				"&kw=1107" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&ka=1" +
				"&kb=1" +
				"&cc=1" +
				"&bw=23776" +
				"&bx=23776" +
				"&undefined=1" +
				"&ci=2111" +
				"&jz=1107" +
				"&dj=1" +
				"&dx=1" +
				"&nc=1" +
				"&em=0" +
				"&en=0" +
				"&bu=23863" +
				"&cd=23863" +
				"&ah=23863" +
				"&am=23863" +
				"&dq=23863" +
				"&dr=23863" +
				"&ds=23863" +
				"&dt=23863" +
				"&hd=1" +
				"&hl=1" +
				"&hj=1" +
				"&dh=30030" +
				"&hc=1" +
				"&er=23777" +
				"&es=23777" +
				"&eu=23067" +
				"&ev=23067" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&ea=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=14930" +
				"&ek=1" +
				"&fh=7902" +
				"&fi=23777" +
				"&fj=23777" +
				"&ef=3" +
				"&eg=3" +
				"&eh=3" +
				"&ei=3" +
				"&ai=1548" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=42332%3A17149450%3A17149459%3A2422616" +
				"&zMoatOptimize=-" +
				"&bo=g58379" +
				"&bd=23230" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=107608975" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=30" +
				"&bo2=g58379" +
				"&bd2=23230" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B42332%3B17149450%3B17149459%3B2422616%3B%3B107608975%3Bg58379%3B23230%3B30%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=2121199924" +
				"&cs=0";
		String requestHeader0343 = "GET " + requestFile0343 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0343, requestHost0343, requestPort0343, requestHeader0343, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0343 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [343] <- Index 343
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [344] <- WEB ADMIN Index 377 ---
		String requestProt0344 = "http";
		String requestHost0344 = "bea4.cnn.com";
		int    requestPort0344 = 80;
		String requestFile0344 = "/ad/l/1" +
				"?init=1" +
				"&ct=0" +
				"&metr=127" +
				"&et=i" +
				"&cn=adEnd" +
				"&s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&r=48804" +
				"&adid=17149460" +
				"&reid=6063048" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=48804" +
				"&uxss=sg58772" +
				"&uxct=2";
		String requestHeader0344 = "GET " + requestFile0344 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0344, requestHost0344, requestPort0344, requestHeader0344, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0344 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [344] <- Index 344
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [345] <- WEB ADMIN Index 378 ---
		String requestProt0345 = "http";
		String requestHost0345 = "bea4.cnn.com";
		int    requestPort0345 = 80;
		String requestFile0345 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307083184098015" +
				"&f=" +
				"&cn=slotEnd" +
				"&et=i" +
				"&tpos=0" +
				"&init=1" +
				"&slid=0";
		String requestHeader0345 = "GET " + requestFile0345 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0345, requestHost0345, requestPort0345, requestHeader0345, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0345 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [345] <- Index 345
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [346] <- WEB ADMIN Index 379 ---
		log();
		log("# title: Explore Arch Rock in the Channel Islands - CNN Video");
		String requestProt0346 = "http";
		String requestHost0346 = "edition.cnn.com";
		int    requestPort0346 = 80;
		String requestFile0346 = "/videos/travel/2016/06/22/kayaking-channel-islands-national-parks-nccorig.cnn";
		String requestHeader0346 = "GET " + requestFile0346 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0346, requestHost0346, requestPort0346, requestHeader0346, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0346 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 33362
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Hang out with brown bears in Katmai National Park");		// Test [346] <- Index 346
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [347] <- WEB ADMIN Index 380 ---
		String requestProt0347 = "https";
		String requestHost0347 = "pubads.g.doubleclick.net";
		int    requestPort0347 = 443;
		String requestFile0347 = "/activity;csk=BGjwFw-oNWPCwA9OAZMqZjOADhdSk6wcAAAAQASAAOABYlc794PwCYPGt_IWkH4IBF2NhLXB1Yi0yODU1MjQ3NDQxOTM1ODA1sgEPZWRpdGlvbi5jbm4uY29tugEJZ2ZwX2ltYWdlyAEJ2gFxaHR0cDovL2VkaXRpb24uY25uLmNvbS92aWRlb3Mvd29ybGQvMjAxNi8xMC8yMy9iZXJtdWRhLXRyaWFuZ2xlLWNsb3Vkcy13ZWF0aGVyLXNjaWVuY2UtY2hhbm5lbC1qbmQtb3JpZy12c3Rhbi5jbm7AAgLgAgDqAhkvODY2MzQ3Ny9DTk5pL3dvcmxkL3ZpZGVv-AL20R6QA8gGmAPgA6gDAdAEkE7gBAHSBQUQleycS5AGAaAGL9gHAOAHCw;&timestamp=1477307109445;eid1=72;ecn1=0;etm1=10;";
		String requestHeader0347 = "GET " + requestFile0347 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pubads.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0347, requestHost0347, requestPort0347, requestHeader0347, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0347 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [347] <- Index 347
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [348] <- WEB ADMIN Index 381 ---
		String requestProt0348 = "http";
		String requestHost0348 = "i2.cdn.turner.com";
		int    requestPort0348 = 80;
		String requestFile0348 = "/cnnnext/dam/assets/160129174107-nps100-acorn-logo-large-169.png";
		String requestHeader0348 = "GET " + requestFile0348 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0348, requestHost0348, requestPort0348, requestHeader0348, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0348 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/PNG", header text fragment = [verification disabled], recorded content size = 191795
		// content test algorithm: check size +/- 5%, defined content size = 191795
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/PNG", null, 191795, 5);		// Test [348] <- Index 348
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [349] <- WEB ADMIN Index 382 ---
		String requestProt0349 = "http";
		String requestHost0349 = "i2.cdn.turner.com";
		int    requestPort0349 = 80;
		String requestFile0349 = "/cnnnext/dam/assets/160622125544-kayaking-channel-islands-national-parks-nccorig-00002009-large-169.jpg";
		String requestHeader0349 = "GET " + requestFile0349 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0349, requestHost0349, requestPort0349, requestHeader0349, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0349 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 27762
		// content test algorithm: check size +/- 5%, defined content size = 27762
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 27762, 5);		// Test [349] <- Index 349
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [350] <- WEB ADMIN Index 383 ---
		String requestProt0350 = "http";
		String requestHost0350 = "i2.cdn.turner.com";
		int    requestPort0350 = 80;
		String requestFile0350 = "/cnnnext/dam/assets/160126133859-nps100-bckgrnd-02-super-169.jpg";
		String requestHeader0350 = "GET " + requestFile0350 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0350, requestHost0350, requestPort0350, requestHeader0350, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0350 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 62269
		// content test algorithm: check size +/- 5%, defined content size = 62269
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 62269, 5);		// Test [350] <- Index 350
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [351] <- WEB ADMIN Index 384 ---
		String requestProt0351 = "http";
		String requestHost0351 = "jadserve.postrelease.com";
		int    requestPort0351 = 80;
		String requestFile0351 = "/t" +
				"?ntv_url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&prx_referrer=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn";
		String requestHeader0351 = "GET " + requestFile0351 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jadserve.postrelease.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0351, requestHost0351, requestPort0351, requestHeader0351, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0351 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 98
		// content test algorithm: check size +/- 5%, defined content size = 98
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 98, 5);		// Test [351] <- Index 351
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [352] <- WEB ADMIN Index 385 ---
		String requestProt0352 = "http";
		String requestHost0352 = "edition.cnn.com";
		int    requestPort0352 = 80;
		String requestFile0352 = "/data/ocs/section/videos/index.html:recommended-videos-stories/views/zones/common/zone-manager.html";
		String requestHeader0352 = "GET " + requestFile0352 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0352, requestHost0352, requestPort0352, requestHeader0352, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0352 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 550
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "div class=\"column zn__column--idx-1\"");		// Test [352] <- Index 352
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [353] <- WEB ADMIN Index 386 ---
		String requestProt0353 = "http";
		String requestHost0353 = "edition.cnn.com";
		int    requestPort0353 = 80;
		String requestFile0353 = "/data/ocs/section/videos/index.html:recommended-digital-studios/views/zones/common/zone-manager.html";
		String requestHeader0353 = "GET " + requestFile0353 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0353, requestHost0353, requestPort0353, requestHeader0353, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0353 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 621
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "ul class=\"cn cn-list-hierarchical-xs cn--idx-1 cn-zoneAdContainer\"");		// Test [353] <- Index 353
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [354] <- WEB ADMIN Index 387 ---
		String requestProt0354 = "http";
		String requestHost0354 = "edition.cnn.com";
		int    requestPort0354 = 80;
		String requestFile0354 = "/data/ocs/section/videos/index.html:otherCollections/views/zones/common/zone-manager.html";
		String requestHeader0354 = "GET " + requestFile0354 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0354, requestHost0354, requestPort0354, requestHeader0354, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0354 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 3265
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "Explore Arch Rock in the Channel Islands");		// Test [354] <- Index 354
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [355] <- WEB ADMIN Index 388 ---
		String requestProt0355 = "http";
		String requestHost0355 = "edition.cnn.com";
		int    requestPort0355 = 80;
		String requestFile0355 = "/data/ocs/section/videos/index.html:international-video-zone-3/views/zones/common/zone-manager.html";
		String requestHeader0355 = "GET " + requestFile0355 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"X-Requested-With: XMLHttpRequest\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0355, requestHost0355, requestPort0355, requestHeader0355, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0355 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 4923
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, "How to eat dim sum like a Hong Kong local");		// Test [355] <- Index 355
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [356] <- WEB ADMIN Index 390 ---
		String requestProt0356 = "http";
		String requestHost0356 = "mab.chartbeat.com";
		int    requestPort0356 = 80;
		String requestFile0356 = "/mab_strategy/headline_testing/get_strategy/" +
				"?host=edition.cnn.com" +
				"&domain=edition.cnn.com" +
				"&path=%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn";
		String requestHeader0356 = "GET " + requestFile0356 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: mab.chartbeat.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0356, requestHost0356, requestPort0356, requestHeader0356, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0356 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 181
		// content test algorithm: check size +/- 5%, defined content size = 181
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 181, 5);		// Test [356] <- Index 356
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [357] <- WEB ADMIN Index 391 ---
		String requestProt0357 = "http";
		String requestHost0357 = "vrt.outbrain.com";
		int    requestPort0357 = 80;
		String requestFile0357 = "/" +
				"?idsite=396" +
				"&url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&seen_url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&t=Explore%20Arch%20Rock%20in%20the%20Channel%20Islands%20-%20CNN%20Video" +
				"&c=1477306754100ug55TLtBm3duDg4oCiUPG1Kq8V50F7nW" +
				"&zone=zone-0-2" +
				"&debug={%22frame%22:false,%22loadTime%22:4,%22timestamp%22:1477307110395,%22transport%22:%22cors%22}" +
				"&refurl=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&refnp=396" +
				"&norm_refurl=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&content_type=text/html" +
				"&v=52";
		String requestHeader0357 = "GET " + requestFile0357 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: vrt.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0357, requestHost0357, requestPort0357, requestHeader0357, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0357 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 2
		// content test algorithm: check size +/- 5%, defined content size = 2
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 2, 5);		// Test [357] <- Index 357
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [358] <- WEB ADMIN Index 392 ---
		String requestProt0358 = "http";
		String requestHost0358 = "vrp.outbrain.com";
		int    requestPort0358 = 80;
		String requestFile0358 = "/" +
				"?transport=jsonp" +
				"&idsite=396" +
				"&url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&content_type=text/html" +
				"&callback=_vrq.jsonp.callbackFn";
		String requestHeader0358 = "GET " + requestFile0358 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: vrp.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0358, requestHost0358, requestPort0358, requestHeader0358, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0358 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 1939
		// content test algorithm: check size +/- 5%, defined content size = 1939
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 1939, 5);		// Test [358] <- Index 358
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [359] <- WEB ADMIN Index 393 ---
		String requestProt0359 = "http";
		String requestHost0359 = "i2.cdn.turner.com";
		int    requestPort0359 = 80;
		String requestFile0359 = "/cnnnext/dam/assets/160622125544-kayaking-channel-islands-national-parks-nccorig-00002009-small-169.jpg";
		String requestHeader0359 = "GET " + requestFile0359 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0359, requestHost0359, requestPort0359, requestHeader0359, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0359 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7752
		// content test algorithm: check size +/- 5%, defined content size = 7752
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7752, 5);		// Test [359] <- Index 359
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [360] <- WEB ADMIN Index 394 ---
		String requestProt0360 = "http";
		String requestHost0360 = "i2.cdn.turner.com";
		int    requestPort0360 = 80;
		String requestFile0360 = "/cnnnext/dam/assets/160623192429-gettysburg-national-parks-military-living-history-civil-war-travel-nps100-ar-origwx-00000511-small-169.jpg";
		String requestHeader0360 = "GET " + requestFile0360 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0360, requestHost0360, requestPort0360, requestHeader0360, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0360 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9897
		// content test algorithm: check size +/- 5%, defined content size = 9897
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9897, 5);		// Test [360] <- Index 360
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_17 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_18.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_18(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 19 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [361] <- WEB ADMIN Index 395 ---
		String requestProt0361 = "http";
		String requestHost0361 = "i2.cdn.turner.com";
		int    requestPort0361 = 80;
		String requestFile0361 = "/cnnnext/dam/assets/160623142226-great-sand-dunes-sandboarding-03-small-169.jpg";
		String requestHeader0361 = "GET " + requestFile0361 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0361, requestHost0361, requestPort0361, requestHeader0361, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0361 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 3505
		// content test algorithm: check size +/- 5%, defined content size = 3505
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 3505, 5);		// Test [361] <- Index 361
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [362] <- WEB ADMIN Index 396 ---
		String requestProt0362 = "http";
		String requestHost0362 = "i2.cdn.turner.com";
		int    requestPort0362 = 80;
		String requestFile0362 = "/cnnnext/dam/assets/160621155828-hawaii-volcanoes-national-parks-ncc-orig-00000327-small-169.jpg";
		String requestHeader0362 = "GET " + requestFile0362 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0362, requestHost0362, requestPort0362, requestHeader0362, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0362 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9361
		// content test algorithm: check size +/- 5%, defined content size = 9361
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9361, 5);		// Test [362] <- Index 362
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [363] <- WEB ADMIN Index 397 ---
		String requestProt0363 = "http";
		String requestHost0363 = "i2.cdn.turner.com";
		int    requestPort0363 = 80;
		String requestFile0363 = "/cnnnext/dam/assets/160606133422-national-parks-katmai-brown-bears-nccorig-00000320-small-169.jpg";
		String requestHeader0363 = "GET " + requestFile0363 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0363, requestHost0363, requestPort0363, requestHeader0363, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0363 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 6421
		// content test algorithm: check size +/- 5%, defined content size = 6421
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 6421, 5);		// Test [363] <- Index 363
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [364] <- WEB ADMIN Index 398 ---
		String requestProt0364 = "http";
		String requestHost0364 = "i2.cdn.turner.com";
		int    requestPort0364 = 80;
		String requestFile0364 = "/cnnnext/dam/assets/160126133859-nps100-bckgrnd-02-super-169.jpg";
		String requestHeader0364 = "GET " + requestFile0364 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0364, requestHost0364, requestPort0364, requestHeader0364, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0364 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 62269
		// content test algorithm: check size +/- 5%, defined content size = 62269
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 62269, 5);		// Test [364] <- Index 364
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [365] <- WEB ADMIN Index 399 ---
		String requestProt0365 = "http";
		String requestHost0365 = "i2.cdn.turner.com";
		int    requestPort0365 = 80;
		String requestFile0365 = "/cnnnext/dam/assets/160324223127-art-basel-dancer-00010227-medium-tease.jpg";
		String requestHeader0365 = "GET " + requestFile0365 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0365, requestHost0365, requestPort0365, requestHeader0365, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0365 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10219
		// content test algorithm: check size +/- 5%, defined content size = 10219
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10219, 5);		// Test [365] <- Index 365
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [366] <- WEB ADMIN Index 400 ---
		String requestProt0366 = "http";
		String requestHost0366 = "i2.cdn.turner.com";
		int    requestPort0366 = 80;
		String requestFile0366 = "/cnnnext/dam/assets/160512162312-khalid-shafari-medium-tease.jpg";
		String requestHeader0366 = "GET " + requestFile0366 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0366, requestHost0366, requestPort0366, requestHeader0366, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0366 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 11703
		// content test algorithm: check size +/- 5%, defined content size = 11703
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 11703, 5);		// Test [366] <- Index 366
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [367] <- WEB ADMIN Index 401 ---
		String requestProt0367 = "http";
		String requestHost0367 = "i2.cdn.turner.com";
		int    requestPort0367 = 80;
		String requestFile0367 = "/cnnnext/dam/assets/160503134115-emma-watson-met-gala-medium-tease.jpg";
		String requestHeader0367 = "GET " + requestFile0367 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0367, requestHost0367, requestPort0367, requestHeader0367, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0367 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15017
		// content test algorithm: check size +/- 5%, defined content size = 15017
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15017, 5);		// Test [367] <- Index 367
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [368] <- WEB ADMIN Index 402 ---
		String requestProt0368 = "http";
		String requestHost0368 = "i2.cdn.turner.com";
		int    requestPort0368 = 80;
		String requestFile0368 = "/cnnnext/dam/assets/141208113229-bond-car-3-story-body.jpg";
		String requestHeader0368 = "GET " + requestFile0368 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0368, requestHost0368, requestPort0368, requestHeader0368, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0368 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 19098
		// content test algorithm: check size +/- 5%, defined content size = 19098
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 19098, 5);		// Test [368] <- Index 368
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [369] <- WEB ADMIN Index 403 ---
		String requestProt0369 = "http";
		String requestHost0369 = "i2.cdn.turner.com";
		int    requestPort0369 = 80;
		String requestFile0369 = "/cnnnext/dam/assets/151119203858-event-horizon-the-immobile-men-invading-hong-kong-natpkg-00011501-medium-tease.jpg";
		String requestHeader0369 = "GET " + requestFile0369 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0369, requestHost0369, requestPort0369, requestHeader0369, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0369 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 14984
		// content test algorithm: check size +/- 5%, defined content size = 14984
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 14984, 5);		// Test [369] <- Index 369
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [370] <- WEB ADMIN Index 404 ---
		String requestProt0370 = "http";
		String requestHost0370 = "i2.cdn.turner.com";
		int    requestPort0370 = 80;
		String requestFile0370 = "/cnnnext/dam/assets/160405224925-dim-sum-quirks-orig-pkg-00000606-medium-tease.jpg";
		String requestHeader0370 = "GET " + requestFile0370 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0370, requestHost0370, requestPort0370, requestHeader0370, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0370 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15359
		// content test algorithm: check size +/- 5%, defined content size = 15359
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15359, 5);		// Test [370] <- Index 370
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [371] <- WEB ADMIN Index 405 ---
		String requestProt0371 = "http";
		String requestHost0371 = "i2.cdn.turner.com";
		int    requestPort0371 = 80;
		String requestFile0371 = "/cnnnext/dam/assets/160421134543-36-prince-file-medium-tease.jpg";
		String requestHeader0371 = "GET " + requestFile0371 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0371, requestHost0371, requestPort0371, requestHeader0371, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0371 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 10153
		// content test algorithm: check size +/- 5%, defined content size = 10153
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 10153, 5);		// Test [371] <- Index 371
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [372] <- WEB ADMIN Index 406 ---
		String requestProt0372 = "http";
		String requestHost0372 = "i2.cdn.turner.com";
		int    requestPort0372 = 80;
		String requestFile0372 = "/cnnnext/dam/assets/160321111209-style-ferrari-nine-things-00012923-medium-tease.jpg";
		String requestHeader0372 = "GET " + requestFile0372 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0372, requestHost0372, requestPort0372, requestHeader0372, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0372 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9244
		// content test algorithm: check size +/- 5%, defined content size = 9244
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9244, 5);		// Test [372] <- Index 372
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [373] <- WEB ADMIN Index 407 ---
		String requestProt0373 = "http";
		String requestHost0373 = "i2.cdn.turner.com";
		int    requestPort0373 = 80;
		String requestFile0373 = "/cnnnext/dam/assets/160323100940-airlander-10-getty-medium-tease.jpg";
		String requestHeader0373 = "GET " + requestFile0373 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0373, requestHost0373, requestPort0373, requestHeader0373, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0373 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 12951
		// content test algorithm: check size +/- 5%, defined content size = 12951
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 12951, 5);		// Test [373] <- Index 373
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [374] <- WEB ADMIN Index 408 ---
		String requestProt0374 = "http";
		String requestHost0374 = "i2.cdn.turner.com";
		int    requestPort0374 = 80;
		String requestFile0374 = "/cnnnext/dam/assets/160707103810-lapo-elkann-tease-2-medium-tease.jpg";
		String requestHeader0374 = "GET " + requestFile0374 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0374, requestHost0374, requestPort0374, requestHeader0374, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0374 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 20502
		// content test algorithm: check size +/- 5%, defined content size = 20502
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 20502, 5);		// Test [374] <- Index 374
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [375] <- WEB ADMIN Index 409 ---
		String requestProt0375 = "http";
		String requestHost0375 = "i2.cdn.turner.com";
		int    requestPort0375 = 80;
		String requestFile0375 = "/cnnnext/dam/assets/151027115113-polynesia-medium-tease.jpg";
		String requestHeader0375 = "GET " + requestFile0375 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0375, requestHost0375, requestPort0375, requestHeader0375, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0375 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 22316
		// content test algorithm: check size +/- 5%, defined content size = 22316
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 22316, 5);		// Test [375] <- Index 375
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [376] <- WEB ADMIN Index 410 ---
		String requestProt0376 = "http";
		String requestHost0376 = "i2.cdn.turner.com";
		int    requestPort0376 = 80;
		String requestFile0376 = "/cnnnext/dam/assets/151111151444-27-pools-damajagua-medium-tease.jpg";
		String requestHeader0376 = "GET " + requestFile0376 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0376, requestHost0376, requestPort0376, requestHeader0376, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0376 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 15390
		// content test algorithm: check size +/- 5%, defined content size = 15390
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 15390, 5);		// Test [376] <- Index 376
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [377] <- WEB ADMIN Index 411 ---
		String requestProt0377 = "http";
		String requestHost0377 = "i2.cdn.turner.com";
		int    requestPort0377 = 80;
		String requestFile0377 = "/cnnnext/dam/assets/160203151744-underwater-museum-lanzarote-medium-tease.jpg";
		String requestHeader0377 = "GET " + requestFile0377 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0377, requestHost0377, requestPort0377, requestHeader0377, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0377 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 12512
		// content test algorithm: check size +/- 5%, defined content size = 12512
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 12512, 5);		// Test [377] <- Index 377
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [378] <- WEB ADMIN Index 412 ---
		String requestProt0378 = "http";
		String requestHost0378 = "i2.cdn.turner.com";
		int    requestPort0378 = 80;
		String requestFile0378 = "/cnnnext/dam/assets/160211142404-cool-underground-spaces-london-jsten-orig-00011024-medium-tease.jpg";
		String requestHeader0378 = "GET " + requestFile0378 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0378, requestHost0378, requestPort0378, requestHeader0378, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0378 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 19107
		// content test algorithm: check size +/- 5%, defined content size = 19107
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 19107, 5);		// Test [378] <- Index 378
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [379] <- WEB ADMIN Index 413 ---
		String requestProt0379 = "http";
		String requestHost0379 = "i2.cdn.turner.com";
		int    requestPort0379 = 80;
		String requestFile0379 = "/cnnnext/dam/assets/160706091912-getu-karst-mountains-china-orig-00000404-medium-tease.jpg";
		String requestHeader0379 = "GET " + requestFile0379 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0379, requestHost0379, requestPort0379, requestHeader0379, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0379 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 20470
		// content test algorithm: check size +/- 5%, defined content size = 20470
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 20470, 5);		// Test [379] <- Index 379
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [380] <- WEB ADMIN Index 414 ---
		String requestProt0380 = "http";
		String requestHost0380 = "i2.cdn.turner.com";
		int    requestPort0380 = 80;
		String requestFile0380 = "/cnnnext/dam/assets/151104110925-poo-curry-japan-travel-00005230-medium-tease.jpg";
		String requestHeader0380 = "GET " + requestFile0380 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0380, requestHost0380, requestPort0380, requestHeader0380, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0380 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 18095
		// content test algorithm: check size +/- 5%, defined content size = 18095
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 18095, 5);		// Test [380] <- Index 380
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_18 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_19.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_19(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 20 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [381] <- WEB ADMIN Index 415 ---
		String requestProt0381 = "http";
		String requestHost0381 = "z.cdn.turner.com";
		int    requestPort0381 = 80;
		String requestFile0381 = "/ads/cnni/cnni_travel_video.js";
		String requestHeader0381 = "GET " + requestFile0381 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: z.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0381, requestHost0381, requestPort0381, requestHeader0381, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0381 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/X-JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 449
		// content test algorithm: check size +/- 5%, defined content size = 449
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/X-JAVASCRIPT", null, 449, 5);		// Test [381] <- Index 381
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [382] <- WEB ADMIN Index 416 ---
		String requestProt0382 = "http";
		String requestHost0382 = "z.cdn.turner.com";
		int    requestPort0382 = 80;
		String requestFile0382 = "/ads/cnni/singles/cnni_entitlement_01.js" +
				"?_=1477307109921";
		String requestHeader0382 = "GET " + requestFile0382 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: z.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0382, requestHost0382, requestPort0382, requestHeader0382, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0382 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/X-JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 353
		// content test algorithm: check size +/- 5%, defined content size = 353
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/X-JAVASCRIPT", null, 353, 5);		// Test [382] <- Index 382
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [383] <- WEB ADMIN Index 417 ---
		String requestProt0383 = "http";
		String requestHost0383 = "metrics.cnn.com";
		int    requestPort0383 = 80;
		String requestFile0383 = "/b/ss/cnn-adbp-intl/1/H.26.1/s74340028385848" +
				"?AQB=1" +
				"&ndh=1" +
				"&t=24%2F9%2F2016%2013%3A5%3A11%201%20-120" +
				"&fid=0DE0D1A7EC740073-0D35F412D19C24F3" +
				"&ce=UTF-8" +
				"&ns=cnn" +
				"&pageName=cnn%3Av%3Aedition%3A%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&g=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&r=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&cc=USD" +
				"&ch=travel" +
				"&server=edition.cnn.com" +
				"&events=event21%2Cevent26" +
				"&c4=page_12col_world_video_zone-0-2_don%27t%20miss%20these%20videos_cn-grid--small_nvs" +
				"&v4=D%3Dc4" +
				"&c5=general%20news" +
				"&v5=D%3Dc5" +
				"&c8=repeat%3A2" +
				"&v8=D%3Dc8" +
				"&c9=video" +
				"&v9=D%3Dc9" +
				"&c10=117" +
				"&v10=D%3Dc10" +
				"&c11=p%3Anps-100" +
				"&v11=D%3Dc11" +
				"&c13=video" +
				"&v13=D%3Dc13" +
				"&c16=2016%2F06%2F30" +
				"&v16=D%3Dc16" +
				"&c17=anonymous" +
				"&v17=D%3Dc17" +
				"&c18=page_12col_world_video_zone-0-2_unknown%20name_cn-grid--small_grid%3Agrid" +
				"&v18=D%3Dc18" +
				"&c20=23" +
				"&v20=D%3Dc20" +
				"&v22=1" +
				"&c23=explore%20arch%20rock%20in%20the%20channel%20islands" +
				"&v23=D%3Dc23" +
				"&c26=edition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2F" +
				"&v26=D%3DpageName" +
				"&v27=D%3Dch" +
				"&c28=travel%3Anvs" +
				"&v28=D%3Dc28" +
				"&v29=edition.cnn.com" +
				"&c30=cnn%20international" +
				"&v30=D%3Dc30" +
				"&c32=adbp%3Avideo" +
				"&v32=D%3Dc32" +
				"&c33=none" +
				"&v33=D%3Dc33" +
				"&c35=cnn.166.1-0-0.20161009%3A0" +
				"&v35=D%3Dc35" +
				"&c37=desktop" +
				"&v37=D%3Dc37" +
				"&c46=14773071104534399657606343" +
				"&v46=D%3Dc46" +
				"&c47=580de97e063d0a0a3c875a117700647f" +
				"&v47=D%3Dc47" +
				"&c56=landscape" +
				"&v56=D%3Dc56" +
				"&c57=no%20mvpd%20set" +
				"&v57=D%3Dc57" +
				"&c59=nvs" +
				"&v59=D%3Dc59" +
				"&c64=cnn%20news" +
				"&v64=D%3Dc64" +
				"&c65=89x_f00_7gx_3h0_3gy_cgx_87d_87j_hpv_880_9qp_9qv_6bd_bll_blx_b9w_bcc_7xg_7lx_7m1_820_5fn_85g" +
				"&c73=960%20x%20950" +
				"&v73=D%3Dc73" +
				"&c75=nvs" +
				"&v75=D%3Dc75" +
				"&h1=news%7Ccnn%7Ccnn%20international%7Cedition.cnn.com%7Ctravel%7Ctravel%3Anvs" +
				"&l1=D%3Dc65" +
				"&s=1920x1080" +
				"&c=24" +
				"&j=1.8.5" +
				"&v=Y" +
				"&k=Y" +
				"&bw=960" +
				"&bh=950" +
				"&AQE=1";
		String requestHeader0383 = "GET " + requestFile0383 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: metrics.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0383, requestHost0383, requestPort0383, requestHeader0383, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0383 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [383] <- Index 383
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [384] <- WEB ADMIN Index 418 ---
		String requestProt0384 = "http";
		String requestHost0384 = "secure-us.imrworldwide.com";
		int    requestPort0384 = 80;
		String requestFile0384 = "/cgi-bin/m" +
				"?ci=us-204044h" +
				"&cg=0" +
				"&cc=1" +
				"&si=http%3A//edition.cnn.com/videos/travel/2016/06/22/kayaking-channel-islands-national-parks-nccorig.cnn" +
				"&rp=http%3A//edition.cnn.com/videos/world/2016/10/23/bermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&ts=compact" +
				"&rnd=1477307111169";
		String requestHeader0384 = "GET " + requestFile0384 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: secure-us.imrworldwide.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0384, requestHost0384, requestPort0384, requestHeader0384, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0384 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 44
		// content test algorithm: check size +/- 5%, defined content size = 44
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 44, 5);		// Test [384] <- Index 384
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [385] <- WEB ADMIN Index 420 ---
		String requestProt0385 = "http";
		String requestHost0385 = "pixel.quantserve.com";
		int    requestPort0385 = 80;
		String requestFile0385 = "/pixel;r=556783668;a=p-D1yc5zQgjmqr5;ezt=1;labels=International.Edition.Travel%2CInternational.Edition.Homepage;fpan=0;fpa=P0-1198943827-1477306754078;ns=0;ce=1;cm=;je=1;sr=1920x1080x24;enc=n;dst=1;et=1477307111422;tzo=-120;ref=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn;url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn;ogl=pubdate.2016-06-27T20%3A29%3A11Z%2Curl.http%3A%2F%2Fwww%252Ecnn%252Ecom%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-pa%2Ctitle.Explore%20Arch%20Rock%20in%20the%20Channel%20Islands%20-%20CNN%20Video%2Cdescription.A%20kayak%20is%20the%20best%20way%20to%20see%20Channel%20Islands%20National%20Park%252C%20which%20is%20made%20up%20o%2Csite_name.CNN%2Ctype.video%252Eother%2Cimage.http%3A%2F%2Fi2%252Ecdn%252Eturner%252Ecom%2Fcnnnext%2Fdam%2Fassets%2F160622125544-kayaking-channel-island";
		String requestHeader0385 = "GET " + requestFile0385 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pixel.quantserve.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0385, requestHost0385, requestPort0385, requestHeader0385, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0385 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 35
		// content test algorithm: check size +/- 5%, defined content size = 35
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 35, 5);		// Test [385] <- Index 385
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [386] <- WEB ADMIN Index 421 ---
		String requestProt0386 = "http";
		String requestHost0386 = "odb.outbrain.com";
		int    requestPort0386 = 80;
		String requestFile0386 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2Fvideos" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=VR_2" +
				"&key=NANOWDGT01" +
				"&idx=0" +
				"&version=01001112" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&apv=false" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=38266" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false";
		String requestHeader0386 = "GET " + requestFile0386 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: odb.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0386, requestHost0386, requestPort0386, requestHeader0386, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0386 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 7237
		// content test algorithm: check size +/- 5%, defined content size = 7237
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 7237, 5);		// Test [386] <- Index 386
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [387] <- WEB ADMIN Index 423 ---
		String requestProt0387 = "http";
		String requestHost0387 = "flapi1.rubiconproject.com";
		int    requestPort0387 = 80;
		String requestFile0387 = "/a/api/fastlane.json" +
				"?account_id=11016" +
				"&site_id=78582" +
				"&zone_id=369850" +
				"&size_id=15" +
				"&p_pos=btf" +
				"&rp_floor=0.01" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_btf_01" +
				"&alt_size_ids=10" +
				"&kw=CNNi%2Ftravel%2Fvideo%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=travel" +
				"&tg_i.subsection=video" +
				"&tg_i.pos=rect_btf_01" +
				"&rand=0.6744836047405388";
		String requestHeader0387 = "GET " + requestFile0387 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi1.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0387, requestHost0387, requestPort0387, requestHeader0387, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0387 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 369
		// content test algorithm: check size +/- 5%, defined content size = 369
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 369, 5);		// Test [387] <- Index 387
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [388] <- WEB ADMIN Index 424 ---
		String requestProt0388 = "http";
		String requestHost0388 = "flapi1.rubiconproject.com";
		int    requestPort0388 = 80;
		String requestFile0388 = "/a/api/fastlane.json" +
				"?account_id=12324" +
				"&site_id=47188" +
				"&zone_id=288556" +
				"&size_id=15" +
				"&p_pos=btf" +
				"&rp_floor=10" +
				"&rf=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&p_screen_res=1920x1080" +
				"&tg_fl.eid=ad_rect_btf_01" +
				"&alt_size_ids=10" +
				"&kw=CNNi%2Ftravel%2Fvideo%2Crp.fastlane" +
				"&tk_flint=plain" +
				"&tg_i.site=CNNi" +
				"&tg_i.section=travel" +
				"&tg_i.subsection=video" +
				"&tg_i.pos=rect_btf_01" +
				"&rand=0.551279453163795";
		String requestHeader0388 = "GET " + requestFile0388 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: flapi1.rubiconproject.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0388, requestHost0388, requestPort0388, requestHeader0388, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0388 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4771
		// content test algorithm: check size +/- 5%, defined content size = 4771
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4771, 5);		// Test [388] <- Index 388
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [389] <- WEB ADMIN Index 425 ---
		String requestProt0389 = "http";
		String requestHost0389 = "i2.cdn.turner.com";
		int    requestPort0389 = 80;
		String requestFile0389 = "/cnnnext/dam/assets/160622125544-kayaking-channel-islands-national-parks-nccorig-00002009-small-169.jpg";
		String requestHeader0389 = "GET " + requestFile0389 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0389, requestHost0389, requestPort0389, requestHeader0389, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0389 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 7752
		// content test algorithm: check size +/- 5%, defined content size = 7752
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 7752, 5);		// Test [389] <- Index 389
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [390] <- WEB ADMIN Index 426 ---
		String requestProt0390 = "http";
		String requestHost0390 = "i2.cdn.turner.com";
		int    requestPort0390 = 80;
		String requestFile0390 = "/cnnnext/dam/assets/160623142226-great-sand-dunes-sandboarding-03-small-169.jpg";
		String requestHeader0390 = "GET " + requestFile0390 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0390, requestHost0390, requestPort0390, requestHeader0390, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0390 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 3505
		// content test algorithm: check size +/- 5%, defined content size = 3505
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 3505, 5);		// Test [390] <- Index 390
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [391] <- WEB ADMIN Index 427 ---
		String requestProt0391 = "http";
		String requestHost0391 = "i2.cdn.turner.com";
		int    requestPort0391 = 80;
		String requestFile0391 = "/cnnnext/dam/assets/160606133422-national-parks-katmai-brown-bears-nccorig-00000320-small-169.jpg";
		String requestHeader0391 = "GET " + requestFile0391 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0391, requestHost0391, requestPort0391, requestHeader0391, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0391 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 6421
		// content test algorithm: check size +/- 5%, defined content size = 6421
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 6421, 5);		// Test [391] <- Index 391
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [392] <- WEB ADMIN Index 428 ---
		String requestProt0392 = "http";
		String requestHost0392 = "i2.cdn.turner.com";
		int    requestPort0392 = 80;
		String requestFile0392 = "/cnnnext/dam/assets/160621155828-hawaii-volcanoes-national-parks-ncc-orig-00000327-small-169.jpg";
		String requestHeader0392 = "GET " + requestFile0392 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0392, requestHost0392, requestPort0392, requestHeader0392, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0392 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9361
		// content test algorithm: check size +/- 5%, defined content size = 9361
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9361, 5);		// Test [392] <- Index 392
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [393] <- WEB ADMIN Index 429 ---
		String requestProt0393 = "http";
		String requestHost0393 = "i2.cdn.turner.com";
		int    requestPort0393 = 80;
		String requestFile0393 = "/cnnnext/dam/assets/160623192429-gettysburg-national-parks-military-living-history-civil-war-travel-nps100-ar-origwx-00000511-small-169.jpg";
		String requestHeader0393 = "GET " + requestFile0393 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0393, requestHost0393, requestPort0393, requestHeader0393, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0393 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 9897
		// content test algorithm: check size +/- 5%, defined content size = 9897
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 9897, 5);		// Test [393] <- Index 393
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [394] <- WEB ADMIN Index 430 ---
		String requestProt0394 = "http";
		String requestHost0394 = "i2.cdn.turner.com";
		int    requestPort0394 = 80;
		String requestFile0394 = "/cnnnext/dam/assets/160126133859-nps100-bckgrnd-02-super-169.jpg";
		String requestHeader0394 = "GET " + requestFile0394 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: i2.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0394, requestHost0394, requestPort0394, requestHeader0394, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0394 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 62269
		// content test algorithm: check size +/- 5%, defined content size = 62269
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 62269, 5);		// Test [394] <- Index 394
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [395] <- WEB ADMIN Index 431 ---
		String requestProt0395 = "http";
		String requestHost0395 = "images.outbrain.com";
		int    requestPort0395 = 80;
		String requestFile0395 = "/Imaginarium/api/uuid/be3290d965763b254b0593aee49bafb32f8fa74c678b9a5b28461158e843cb6e/140/79";
		String requestHeader0395 = "GET " + requestFile0395 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0395, requestHost0395, requestPort0395, requestHeader0395, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0395 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 3436
		// content test algorithm: check size +/- 5%, defined content size = 3436
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 3436, 5);		// Test [395] <- Index 395
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [396] <- WEB ADMIN Index 432 ---
		String requestProt0396 = "http";
		String requestHost0396 = "images.outbrain.com";
		int    requestPort0396 = 80;
		String requestFile0396 = "/Imaginarium/api/uuid/7d3f6e88b70d8df2877ddb74b1903808b8476102dc438874fcd1f7198ac9e9ed/140/79";
		String requestHeader0396 = "GET " + requestFile0396 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0396, requestHost0396, requestPort0396, requestHeader0396, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0396 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 3024
		// content test algorithm: check size +/- 5%, defined content size = 3024
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 3024, 5);		// Test [396] <- Index 396
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [397] <- WEB ADMIN Index 433 ---
		String requestProt0397 = "http";
		String requestHost0397 = "images.outbrain.com";
		int    requestPort0397 = 80;
		String requestFile0397 = "/Imaginarium/api/uuid/3499ff9535f80e9c89c1900b34ad46ab2eb78d8c2286aa804c6a16a476038b93/140/79";
		String requestHeader0397 = "GET " + requestFile0397 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0397, requestHost0397, requestPort0397, requestHeader0397, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0397 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 4472
		// content test algorithm: check size +/- 5%, defined content size = 4472
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 4472, 5);		// Test [397] <- Index 397
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [398] <- WEB ADMIN Index 434 ---
		String requestProt0398 = "http";
		String requestHost0398 = "images.outbrain.com";
		int    requestPort0398 = 80;
		String requestFile0398 = "/Imaginarium/api/uuid/72a6f7bac25f5c10e46b00ed777d90a084315eb653677900c5a11b53cf2e7473/140/79";
		String requestHeader0398 = "GET " + requestFile0398 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0398, requestHost0398, requestPort0398, requestHeader0398, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0398 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 3431
		// content test algorithm: check size +/- 5%, defined content size = 3431
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 3431, 5);		// Test [398] <- Index 398
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [399] <- WEB ADMIN Index 435 ---
		String requestProt0399 = "http";
		String requestHost0399 = "images.outbrain.com";
		int    requestPort0399 = 80;
		String requestFile0399 = "/Imaginarium/api/uuid/c717cf43a3fa2ab550cfcf87a438ea23741b8c709b127c65ff02498803bbf186/140/79";
		String requestHeader0399 = "GET " + requestFile0399 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: images.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0399, requestHost0399, requestPort0399, requestHeader0399, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0399 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 2675
		// content test algorithm: check size +/- 5%, defined content size = 2675
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 2675, 5);		// Test [399] <- Index 399
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [400] <- WEB ADMIN Index 436 ---
		String requestProt0400 = "http";
		String requestHost0400 = "odb.outbrain.com";
		int    requestPort0400 = 80;
		String requestFile0400 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2Fvideos" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=SB_9" +
				"&key=NANOWDGT01" +
				"&idx=1" +
				"&version=01001112" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&apv=false" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=28567" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV82OWI2Nzk1N2YxNGQ0ZmFjMGZmN2Q4ZWEyOTZlMmRkMl8w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false";
		String requestHeader0400 = "GET " + requestFile0400 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: odb.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0400, requestHost0400, requestPort0400, requestHeader0400, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0400 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 7143
		// content test algorithm: check size +/- 5%, defined content size = 7143
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 7143, 5);		// Test [400] <- Index 400
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_19 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_20.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_20(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 21 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [401] <- WEB ADMIN Index 437 ---
		String requestProt0401 = "http";
		String requestHost0401 = "weather.api.cnn.io";
		int    requestPort0401 = 80;
		String requestFile0401 = "/graphql" +
				"?query=%7BwsiForecast(locCode%3A%22UKXX0085%22%2Ccelcius%3A%22true%22)%7BcurrentConditions%7Btemperature%2Cdescription%2Cicon%7D%2Clocation%7Bcity%2CstateOrCountry%7D%7D%7D";
		String requestHeader0401 = "GET " + requestFile0401 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: weather.api.cnn.io\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: application/json, text/javascript, */*; q=0.01\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0401, requestHost0401, requestPort0401, requestHeader0401, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0401 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 150
		// content test algorithm: check size +/- 5%, defined content size = 150
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 150, 5);		// Test [401] <- Index 401
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [402] <- WEB ADMIN Index 438 ---
		String requestProt0402 = "http";
		String requestHost0402 = "ad.doubleclick.net";
		int    requestPort0402 = 80;
		String requestFile0402 = "/ddm/ad/4qsod/ruzd37pmopa8/oetg7pf9hxc/l1um6toagw0/;ord=1477307112277?";
		String requestHeader0402 = "GET " + requestFile0402 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ad.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0402, requestHost0402, requestPort0402, requestHeader0402, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0402 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [402] <- Index 402
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [403] <- WEB ADMIN Index 439 ---
		String requestProt0403 = "http";
		String requestHost0403 = "www.budgetedbauer.com";
		int    requestPort0403 = 80;
		String requestFile0403 = "/4lzz";
		String requestHeader0403 = "GET " + requestFile0403 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.budgetedbauer.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0403, requestHost0403, requestPort0403, requestHeader0403, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0403 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/PLAIN", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/PLAIN", null, 0, 5);		// Test [403] <- Index 403
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [404] <- WEB ADMIN Index 440 ---
		String requestProt0404 = "http";
		String requestHost0404 = "b.scorecardresearch.com";
		int    requestPort0404 = 80;
		String requestFile0404 = "/r" +
				"?c2=6035748" +
				"&d.c=gif" +
				"&d.o=cnn-adbp-intl" +
				"&d.x=35071770" +
				"&d.t=page" +
				"&d.u=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn";
		String requestHeader0404 = "GET " + requestFile0404 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0404, requestHost0404, requestPort0404, requestHeader0404, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0404 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [404] <- Index 404
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [405] <- WEB ADMIN Index 441 ---
		String requestProt0405 = "http";
		String requestHost0405 = "ad.doubleclick.net";
		int    requestPort0405 = 80;
		String requestFile0405 = "/ddm/ad/4qsod/ruzd37pmopa8/oetg7pf9hxc/l1um6toagw0/;ord=1477307112277?";
		String requestHeader0405 = "GET " + requestFile0405 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ad.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0405, requestHost0405, requestPort0405, requestHeader0405, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0405 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [405] <- Index 405
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [406] <- WEB ADMIN Index 442 ---
		String requestProt0406 = "http";
		String requestHost0406 = "log.outbrain.com";
		int    requestPort0406 = 80;
		String requestFile0406 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=1009" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=338" +
				"&wRV=01001112" +
				"&rId=69b67957f14d4fac0ff7d8ea296e2dd2" +
				"&idx=0" +
				"&pvId=69b67957f14d4fac0ff7d8ea296e2dd2" +
				"&org=6" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0406 = "GET " + requestFile0406 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0406, requestHost0406, requestPort0406, requestHeader0406, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0406 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [406] <- Index 406
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [407] <- WEB ADMIN Index 443 ---
		String requestProt0407 = "http";
		String requestHost0407 = "log.outbrain.com";
		int    requestPort0407 = 80;
		String requestFile0407 = "/loggerServices/widgetGlobalEvent" +
				"?eT=3" +
				"&tm=1013" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=338" +
				"&wRV=01001112" +
				"&rId=69b67957f14d4fac0ff7d8ea296e2dd2" +
				"&idx=0" +
				"&pvId=69b67957f14d4fac0ff7d8ea296e2dd2" +
				"&org=6" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=0" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0407 = "GET " + requestFile0407 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0407, requestHost0407, requestPort0407, requestHeader0407, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0407 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [407] <- Index 407
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [408] <- WEB ADMIN Index 444 ---
		String requestProt0408 = "http";
		String requestHost0408 = "odb.outbrain.com";
		int    requestPort0408 = 80;
		String requestFile0408 = "/utils/get" +
				"?url=http%3A%2F%2Fedition.cnn.com%2Fvideos" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=HOP_58" +
				"&key=NANOWDGT01" +
				"&idx=2" +
				"&version=01001112" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&apv=true" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=2814" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV82OWI2Nzk1N2YxNGQ0ZmFjMGZmN2Q4ZWEyOTZlMmRkMl8w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false";
		String requestHeader0408 = "GET " + requestFile0408 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: odb.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0408, requestHost0408, requestPort0408, requestHeader0408, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0408 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 5928
		// content test algorithm: check size +/- 5%, defined content size = 5928
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 5928, 5);		// Test [408] <- Index 408
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [409] <- WEB ADMIN Index 445 ---
		String requestProt0409 = "http";
		String requestHost0409 = "www.fallingfalcon.com";
		int    requestPort0409 = 80;
		String requestFile0409 = "/bcn" +
				"?deo=0" +
				"&vv=1477306754662" +
				"&xlg=" +
				"&vqwo=1" +
				"&id=1477307054049" +
				"&hu=0" +
				"&fe=1477307112594" +
				"&y=1.7.0" +
				"&elg=503496034" +
				"&flg=PflrxvqvbvAxzwG" +
				"&x=hglwlrq.fqq.frp%2Fylghrv%2Fwudyho%2F2016%2F06%2F22%2Fndbdnlqj-fkdqqho-lvodqgv-qdwlrqdo-sdunv-qffrulj.fqq";
		String requestHeader0409 = "GET " + requestFile0409 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.fallingfalcon.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0409, requestHost0409, requestPort0409, requestHeader0409, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0409 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [409] <- Index 409
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [410] <- WEB ADMIN Index 446 ---
		String requestProt0410 = "http";
		String requestHost0410 = "log.outbrain.com";
		int    requestPort0410 = 80;
		String requestFile0410 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=1205" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=339" +
				"&wRV=01001112" +
				"&rId=97096eade301b8216652b75bf6781556" +
				"&idx=1" +
				"&pvId=69b67957f14d4fac0ff7d8ea296e2dd2" +
				"&org=0" +
				"&pad=6" +
				"&pVis=1" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0410 = "GET " + requestFile0410 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0410, requestHost0410, requestPort0410, requestHeader0410, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0410 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [410] <- Index 410
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [411] <- WEB ADMIN Index 447 ---
		String requestProt0411 = "http";
		String requestHost0411 = "aax.amazon-adsystem.com";
		int    requestPort0411 = 80;
		String requestFile0411 = "/e/dtb/bid" +
				"?src=3288" +
				"&u=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&cb=267993" +
				"&t=1000";
		String requestHeader0411 = "GET " + requestFile0411 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: aax.amazon-adsystem.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0411, requestHost0411, requestPort0411, requestHeader0411, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0411 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 19
		// content test algorithm: check size +/- 5%, defined content size = 19
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 19, 5);		// Test [411] <- Index 411
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [412] <- WEB ADMIN Index 448 ---
		String requestProt0412 = "http";
		String requestHost0412 = "log.outbrain.com";
		int    requestPort0412 = 80;
		String requestFile0412 = "/loggerServices/widgetGlobalEvent" +
				"?eT=0" +
				"&tm=1410" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=457" +
				"&wRV=01001112" +
				"&rId=43f90a4d1cf690d0454529b0e373d291" +
				"&idx=2" +
				"&pvId=69b67957f14d4fac0ff7d8ea296e2dd2" +
				"&org=4" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0412 = "GET " + requestFile0412 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0412, requestHost0412, requestPort0412, requestHeader0412, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0412 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [412] <- Index 412
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [413] <- WEB ADMIN Index 449 ---
		String requestProt0413 = "http";
		String requestHost0413 = "odb.outbrain.com";
		int    requestPort0413 = 80;
		String requestFile0413 = "/utils/get" +
				"?url=http%3A%2F%2Fwww.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&settings=true" +
				"&recs=true" +
				"&widgetJSId=TR_1" +
				"&key=NANOWDGT01" +
				"&idx=3" +
				"&version=01001112" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&apv=true" +
				"&sig=grTHvsh6" +
				"&format=html" +
				"&rand=92884" +
				"&lsd=c7000649-c2d3-453c-bb41-8be352557d3d" +
				"&t=MV82OWI2Nzk1N2YxNGQ0ZmFjMGZmN2Q4ZWEyOTZlMmRkMl8w" +
				"&winW=960" +
				"&winH=950" +
				"&adblck=false";
		String requestHeader0413 = "GET " + requestFile0413 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: odb.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0413, requestHost0413, requestPort0413, requestHeader0413, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0413 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/X-JSON", header text fragment = [verification disabled], recorded content size = 567
		// content test algorithm: check size +/- 5%, defined content size = 567
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/X-JSON", null, 567, 5);		// Test [413] <- Index 413
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [414] <- WEB ADMIN Index 450 ---
		String requestProt0414 = "http";
		String requestHost0414 = "b.scorecardresearch.com";
		int    requestPort0414 = 80;
		String requestFile0414 = "/b" +
				"?c1=7" +
				"&c2=14320224" +
				"&c3=235" +
				"&ns__t=1477307113159" +
				"&ns_c=windows-1252" +
				"&ns_if=1" +
				"&cv=3.1" +
				"&c8=" +
				"&c7=http%3A%2F%2Fwidgets.outbrain.com%2FnanoWidget%2Fexternals%2FobFrame%2FobFrame.htm%23pid%3D235%26dmpenabled%3Dtrue%26csenabled%3Dtrue%26d%3DJO1nvR1RQN3_GLBS5Cr_eswqerWMmmbqNmtnW-zwXr8YUlIqd9qOsQx1ms-jF0Xv" +
				"&c9=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn";
		String requestHeader0414 = "GET " + requestFile0414 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0414, requestHost0414, requestPort0414, requestHeader0414, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0414 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, null, null, 0, 5);		// Test [414] <- Index 414
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [415] <- WEB ADMIN Index 451 ---
		String requestProt0415 = "http";
		String requestHost0415 = "log.outbrain.com";
		int    requestPort0415 = 80;
		String requestFile0415 = "/loggerServices/widgetGlobalEvent" +
				"?eT=3" +
				"&tm=1526" +
				"&pid=235" +
				"&sid=5584234" +
				"&wId=339" +
				"&wRV=01001112" +
				"&rId=97096eade301b8216652b75bf6781556" +
				"&idx=1" +
				"&pvId=69b67957f14d4fac0ff7d8ea296e2dd2" +
				"&org=0" +
				"&pad=6" +
				"&pVis=1" +
				"&eIdx=1" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0415 = "GET " + requestFile0415 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0415, requestHost0415, requestPort0415, requestHeader0415, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0415 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [415] <- Index 415
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [416] <- WEB ADMIN Index 452 ---
		String requestProt0416 = "http";
		String requestHost0416 = "log.outbrain.com";
		int    requestPort0416 = 80;
		String requestFile0416 = "/loggerServices/widgetGlobalEvent" +
				"?eT=6" +
				"&tm=1798" +
				"&pid=185" +
				"&sid=5387411" +
				"&wId=117" +
				"&wRV=01001112" +
				"&rId=2efcd6988f7c07a690ff2b5a68485027" +
				"&idx=3" +
				"&pvId=69b67957f14d4fac0ff7d8ea296e2dd2" +
				"&org=0" +
				"&pad=0" +
				"&pVis=0" +
				"&eIdx=" +
				"&ab=0" +
				"&wl=0";
		String requestHeader0416 = "GET " + requestFile0416 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: log.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0416, requestHost0416, requestPort0416, requestHeader0416, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0416 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 4
		// content test algorithm: check size +/- 5%, defined content size = 4
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 4, 5);		// Test [416] <- Index 416
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [417] <- WEB ADMIN Index 453 ---
		String requestProt0417 = "https";
		String requestHost0417 = "securepubads.g.doubleclick.net";
		int    requestPort0417 = 443;
		String requestFile0417 = "/gampad/ads" +
				"?gdfp_req=1" +
				"&correlator=3742527186928813" +
				"&output=json_html" +
				"&callback=callbackProxy" +
				"&impl=fifs" +
				"&json_a=1" +
				"&eid=108809080%2C108809132%2C108809146%2C108809137" +
				"&sc=0" +
				"&sfv=1-0-4" +
				"&iu_parts=8663477%2CCNNi%2Ctravel%2Cvideo" +
				"&enc_prev_ius=%2F0%2F1%2C%2F0%2F1%2F2%2F3" +
				"&prev_iu_szs=200x60%7C175x31%2C300x600%7C300x250" +
				"&prev_scp=pos%3Dmod%26spec%3Dnps_100%26rpfl_elemid%3Dad_mod_85a882a72%26fln_to%3D0%7Cpos%3Drect_btf_01%26rpfl_elemid%3Dad_rect_btf_01%26fln_to%3D0" +
				"&eri=1" +
				"&cust_params=guid%3D580de97e063d0a0a3c875a117700647f%26prx_to%3D1%26transId%3D14773071104534399657606343%26kuid%3Dq7dgd6wiu%26refdom%3Dcnn%26capTopics%3D89X%252CF00%252C7GX%252C3H0%252C3GY%252CCGX%252C87D%252C87J%252CHPV%252C880%252C9QP%252C9QV%252C6BD%252CBLL%252CBLX%252CB9W%252CBCC%252C7XG%252C7LX%252C7M1%252C820%252C5FN%252C85G%26spec%3Dnps_100%26azn_to%3D0" +
				"&cookie=ID%3D575a79a92856696c%3AT%3D1477306756%3AS%3DALNI_Mb_EXc_S3b8JqeseM1QooOOGTvF_w" +
				"&lmt=1477307113" +
				"&dt=1477307113793" +
				"&cc=16" +
				"&frm=20" +
				"&biw=960" +
				"&bih=950" +
				"&oid=3" +
				"&adxs=0%2C0" +
				"&adys=0%2C0" +
				"&adks=2899259747%2C3914086697" +
				"&gut=v2" +
				"&ifi=1" +
				"&u_tz=120" +
				"&u_his=4" +
				"&u_java=true" +
				"&u_h=1080" +
				"&u_w=1920" +
				"&u_ah=1057" +
				"&u_aw=1920" +
				"&u_cd=24" +
				"&u_nplug=5" +
				"&u_nmime=26" +
				"&u_sd=1" +
				"&flash=23.0.0" +
				"&url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&ref=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&dssz=51" +
				"&icsg=8813272891392" +
				"&mso=1" +
				"&std=7" +
				"&vrg=103" +
				"&vrp=103" +
				"&ga_vid=480743646.1477307114" +
				"&ga_sid=1477307114" +
				"&ga_hid=25380137";
		String requestHeader0417 = "GET " + requestFile0417 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: securepubads.g.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0417, requestHost0417, requestPort0417, requestHeader0417, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0417 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 11463
		// content test algorithm: check size +/- 5%, defined content size = 11463
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 11463, 5);		// Test [417] <- Index 417
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [418] <- WEB ADMIN Index 454 ---
		String requestProt0418 = "https";
		String requestHost0418 = "www.facebook.com";
		int    requestPort0418 = 443;
		String requestFile0418 = "/impression.php/f3d67f7bae9d522/" +
				"?lid=115" +
				"&payload=%7B%22source%22%3A%22jssdk%22%7D";
		String requestHeader0418 = "GET " + requestFile0418 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0418, requestHost0418, requestPort0418, requestHeader0418, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0418 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 48
		// content test algorithm: check size +/- 5%, defined content size = 48
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 48, 5);		// Test [418] <- Index 418
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [419] <- WEB ADMIN Index 457 ---
		String requestProt0419 = "http";
		String requestHost0419 = "pixel.quantserve.com";
		int    requestPort0419 = 80;
		String requestFile0419 = "/pixel/p-D1yc5zQgjmqr5.gif" +
				"?labels=%20Site.7663597.Advertiser%20ID.38656237.Campaign%20ID.421501477.Line%20Item%20ID.178216717,Site.7663597.Ad%20Unit%20ID.53125837";
		String requestHeader0419 = "GET " + requestFile0419 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pixel.quantserve.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0419, requestHost0419, requestPort0419, requestHeader0419, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0419 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 35
		// content test algorithm: check size +/- 5%, defined content size = 35
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 35, 5);		// Test [419] <- Index 419
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [420] <- WEB ADMIN Index 458 ---
		String requestProt0420 = "https";
		String requestHost0420 = "ad.doubleclick.net";
		int    requestPort0420 = 443;
		String requestFile0420 = "/ddm/adj/N270001.8535CNNNETWORK/B10347026.138611384;sz=300x250;click=https://adclick.g.doubleclick.net/pcs/click?xai=AKAOjstH1-VMCdIPofO0xaONvdwavcmgQa6QLXIbBrxAFySAqXOUOg33Qmsd11hbAUPTXlWkhAfeYm-7TLpeaDnIG0snHUX_bZ4fbBDMftE_zB26C-dWPCmOg2K14rG1ypBQWG9ddDnFHxKhBcIz8NLEN_KgWNedtROZ932bfXGgi9wW1oTUzbusFFg3_HdySj4dRctRCc4SLf3Xuo6MksLzcArGKZTlqZ_QLyu0VqEf3nfWU2THWMmejC4&sig=Cg0ArKJSzGm9Ro4VhrKPEAE&urlfix=1&adurl=;ord=413333097;dc_lat=;dc_rdid=;tag_for_child_directed_treatment=?";
		String requestHeader0420 = "GET " + requestFile0420 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ad.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0420, requestHost0420, requestPort0420, requestHeader0420, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0420 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 5065
		// content test algorithm: check size +/- 5%, defined content size = 5065
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 5065, 5);		// Test [420] <- Index 420
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_20 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_21.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_21(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 22 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [421] <- WEB ADMIN Index 459 ---
		String requestProt0421 = "https";
		String requestHost0421 = "www.facebook.com";
		int    requestPort0421 = 443;
		String requestFile0421 = "/impression.php/f1ac8bd58254de/" +
				"?api_key=80401312489" +
				"&lid=115" +
				"&payload=%7B%22source%22%3A%22jssdk%22%7D";
		String requestHeader0421 = "GET " + requestFile0421 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0421, requestHost0421, requestPort0421, requestHeader0421, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0421 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 48
		// content test algorithm: check size +/- 5%, defined content size = 48
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 48, 5);		// Test [421] <- Index 421
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [422] <- WEB ADMIN Index 460 ---
		String requestProt0422 = "https";
		String requestHost0422 = "pixel.adsafeprotected.com";
		int    requestPort0422 = 443;
		String requestFile0422 = "/rjss/st/65084/10785056/skeleton.js";
		String requestHeader0422 = "GET " + requestFile0422 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pixel.adsafeprotected.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0422, requestHost0422, requestPort0422, requestHeader0422, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0422 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/PLAIN", header text fragment = [verification disabled], recorded content size = 42758
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/PLAIN", null, "scriptUrl = __IntegralASConfig.scriptUrl;");		// Test [422] <- Index 422
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [423] <- WEB ADMIN Index 463 ---
		String requestProt0423 = "https";
		String requestHost0423 = "s0.2mdn.net";
		int    requestPort0423 = 443;
		String requestFile0423 = "/879366/html_inpage_rendering_lib_200_154.js";
		String requestHeader0423 = "GET " + requestFile0423 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Origin: http://edition.cnn.com\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0423, requestHost0423, requestPort0423, requestHeader0423, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0423 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 57654
		// content test algorithm: check size +/- 5%, defined content size = 57654
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 57654, 5);		// Test [423] <- Index 423
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [424] <- WEB ADMIN Index 464 ---
		String requestProt0424 = "https";
		String requestHost0424 = "pixel.adsafeprotected.com";
		int    requestPort0424 = 443;
		String requestFile0424 = "/rfw/st/65084/10785056/skeleton.js" +
				"?adsafe_url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&adsafe_type=abdfq" +
				"&adsafe_url=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&adsafe_type=c" +
				"&adsafe_jsinfo=,id:6d9b1fac-c92c-ff99-299e-11e9b1900c96,c:s3yGuE,sl:outOfView,em:true,fr:true,mn:app25ami,pt:1-5-15,wc:834.-1057.960.950,ac:1479.1533.300.600,am:i,cc:834.-1057.300.0,piv:0,obst:0,th:0,reas:l,cmps:1,br:g,fv:23.0.0,bv:na,dm:na,abv:na,an:n,fm:q0xU6gk+11|12|13|14|15|16*.65084-10785056|161|17|18|19,idMap:16*,pl:oo66.VijD.bt1K.ul0z.iAJH,fc:0,rt:1,cb:0,np:1,th:0,es:0,sa:1,gm:1,fif:0,uf:0,tt:rjss,et:95,oid:bd5054e4-99d9-11e6-aa2b-00259086ca0c,v:16.5.17,sp:0,ct:na,dtm:i,gtpl:0,wr:960.950,sr:1920.1080,mf:-1973908194,ov:0";
		String requestHeader0424 = "GET " + requestFile0424 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pixel.adsafeprotected.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0424, requestHost0424, requestPort0424, requestHeader0424, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0424 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [424] <- Index 424
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [425] <- WEB ADMIN Index 465 ---
		String requestProt0425 = "http";
		String requestHost0425 = "pagead2.googlesyndication.com";
		int    requestPort0425 = 80;
		String requestFile0425 = "/pagead/js/lidar.js";
		String requestHeader0425 = "GET " + requestFile0425 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: pagead2.googlesyndication.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0425, requestHost0425, requestPort0425, requestHeader0425, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0425 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 26480
		// content test algorithm: check size +/- 5%, defined content size = 26480
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 26480, 5);		// Test [425] <- Index 425
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [426] <- WEB ADMIN Index 466 ---
		log();
		log("# title: LV");
		String requestProt0426 = "https";
		String requestHost0426 = "s0.2mdn.net";
		int    requestPort0426 = 443;
		String requestFile0426 = "/ads/richmedia/studio/pv2/45436795/20160929085847079/index.html" +
				"?e=69" +
				"&renderingType=2" +
				"&leftOffset=0" +
				"&topOffset=0" +
				"&c=225rnT0N3i" +
				"&t=1";
		String requestHeader0426 = "GET " + requestFile0426 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0426, requestHost0426, requestPort0426, requestHeader0426, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0426 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 373
		// content test algorithm: check size +/- 5%, defined content size = 373
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 373, 5);		// Test [426] <- Index 426
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [427] <- WEB ADMIN Index 467 ---
		String requestProt0427 = "https";
		String requestHost0427 = "dt.adsafeprotected.com";
		int    requestPort0427 = 443;
		String requestFile0427 = "/dt" +
				"?advEntityId=65084" +
				"&asId=6d9b1fac-c92c-ff99-299e-11e9b1900c96" +
				"&tv={c:s3yGzv,pingTime:-2,time:389,type:a,fc:0,rt:1,cb:0,np:1,th:0,es:0,sa:1,gm:1,fif:0,slTimes:{i:0,o:390,n:0,pp:0,pm:0,gpp:0,gpm:0,gi:0,go:0,gn:390,fi:0,fo:0,fn:390},slEvents:[{sl:o,fsl:fn,gsl:gn,t:85,wc:834.-1057.960.950,ac:1479.1533.300.600,am:i,cc:834.-1057.300.0,piv:0,obst:0,th:0,reas:l,cmps:1,bkn:{piv:[382~0],as:[382~300.600]}}],slEventCount:1,em:true,fr:true,uf:0,e:,tt:rjss,dtt:0,fm:q0xU6gk+11|12|13|14|15|16*.65084-10785056|161|17|18|19,idMap:16*,pd:VijD.JavaAppletPlugin,sinceFw:287,readyFired:true}" +
				"&br=g";
		String requestHeader0427 = "GET " + requestFile0427 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: dt.adsafeprotected.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0427, requestHost0427, requestPort0427, requestHeader0427, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0427 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [427] <- Index 427
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [428] <- WEB ADMIN Index 468 ---
		String requestProt0428 = "https";
		String requestHost0428 = "s0.2mdn.net";
		int    requestPort0428 = 443;
		String requestFile0428 = "/ads/richmedia/studio/pv2/45436795/20160929085847079/css/style.css";
		String requestHeader0428 = "GET " + requestFile0428 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/css,*/*;q=0.1\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0428, requestHost0428, requestPort0428, requestHeader0428, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0428 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/CSS", header text fragment = [verification disabled], recorded content size = 859
		// content test algorithm: check size +/- 5%, defined content size = 859
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/CSS", null, 859, 5);		// Test [428] <- Index 428
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [429] <- WEB ADMIN Index 469 ---
		String requestProt0429 = "https";
		String requestHost0429 = "s0.2mdn.net";
		int    requestPort0429 = 443;
		String requestFile0429 = "/ads/richmedia/studio/pv2/45436795/20160929085847079/js/script.js";
		String requestHeader0429 = "GET " + requestFile0429 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0429, requestHost0429, requestPort0429, requestHeader0429, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0429 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 328
		// content test algorithm: check size +/- 5%, defined content size = 328
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 328, 5);		// Test [429] <- Index 429
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [430] <- WEB ADMIN Index 470 ---
		String requestProt0430 = "https";
		String requestHost0430 = "s0.2mdn.net";
		int    requestPort0430 = 443;
		String requestFile0430 = "/879366/Enabler_01_135.js";
		String requestHeader0430 = "GET " + requestFile0430 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0430, requestHost0430, requestPort0430, requestHeader0430, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0430 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 29741
		// content test algorithm: check size +/- 5%, defined content size = 29741
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 29741, 5);		// Test [430] <- Index 430
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [431] <- WEB ADMIN Index 471 ---
		String requestProt0431 = "https";
		String requestHost0431 = "s0.2mdn.net";
		int    requestPort0431 = 443;
		String requestFile0431 = "/ads/richmedia/studio/pv2/45436795/20160929085847079/img/1.jpg";
		String requestHeader0431 = "GET " + requestFile0431 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0431, requestHost0431, requestPort0431, requestHeader0431, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0431 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 74787
		// content test algorithm: check size +/- 5%, defined content size = 74787
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 74787, 5);		// Test [431] <- Index 431
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [432] <- WEB ADMIN Index 472 ---
		String requestProt0432 = "https";
		String requestHost0432 = "s0.2mdn.net";
		int    requestPort0432 = 443;
		String requestFile0432 = "/ads/richmedia/studio/pv2/45436795/20160929085847079/img/2.jpg";
		String requestHeader0432 = "GET " + requestFile0432 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0432, requestHost0432, requestPort0432, requestHeader0432, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0432 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/JPEG", header text fragment = [verification disabled], recorded content size = 61114
		// content test algorithm: check size +/- 5%, defined content size = 61114
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/JPEG", null, 61114, 5);		// Test [432] <- Index 432
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [433] <- WEB ADMIN Index 473 ---
		String requestProt0433 = "https";
		String requestHost0433 = "s0.2mdn.net";
		int    requestPort0433 = 443;
		String requestFile0433 = "/ads/richmedia/studio/pv2/45436795/20160929085847079/img/LV.svg";
		String requestHeader0433 = "GET " + requestFile0433 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0433, requestHost0433, requestPort0433, requestHeader0433, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0433 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/SVG+XML", header text fragment = [verification disabled], recorded content size = 2308
		// content test algorithm: check size +/- 5%, defined content size = 2308
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/SVG+XML", null, 2308, 5);		// Test [433] <- Index 433
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [434] <- WEB ADMIN Index 474 ---
		String requestProt0434 = "https";
		String requestHost0434 = "s0.2mdn.net";
		int    requestPort0434 = 443;
		String requestFile0434 = "/ads/richmedia/studio/pv2/45436795/20160929085847079/img/cta.svg";
		String requestHeader0434 = "GET " + requestFile0434 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0434, requestHost0434, requestPort0434, requestHeader0434, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0434 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/SVG+XML", header text fragment = [verification disabled], recorded content size = 1282
		// content test algorithm: check size +/- 5%, defined content size = 1282
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/SVG+XML", null, 1282, 5);		// Test [434] <- Index 434
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [435] <- WEB ADMIN Index 475 ---
		String requestProt0435 = "https";
		String requestHost0435 = "s0.2mdn.net";
		int    requestPort0435 = 443;
		String requestFile0435 = "/ads/richmedia/studio/pv2/45436795/20160929085847079/img/bottle.png";
		String requestHeader0435 = "GET " + requestFile0435 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: s0.2mdn.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0435, requestHost0435, requestPort0435, requestHeader0435, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0435 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/PNG", header text fragment = [verification disabled], recorded content size = 25671
		// content test algorithm: check size +/- 5%, defined content size = 25671
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/PNG", null, 25671, 5);		// Test [435] <- Index 435
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [436] <- WEB ADMIN Index 476 ---
		String requestProt0436 = "https";
		String requestHost0436 = "static.adsafeprotected.com";
		int    requestPort0436 = 443;
		String requestFile0436 = "/skeleton.js";
		String requestHeader0436 = "GET " + requestFile0436 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: static.adsafeprotected.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0436, requestHost0436, requestPort0436, requestHeader0436, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0436 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 17
		// content test algorithm: check size +/- 5%, defined content size = 17
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JAVASCRIPT", null, 17, 5);		// Test [436] <- Index 436
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [437] <- WEB ADMIN Index 477 ---
		String requestProt0437 = "https";
		String requestHost0437 = "geo.moatads.com";
		int    requestPort0437 = 443;
		String requestFile0437 = "/n.js" +
				"?e=35" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&gz=0" +
				"&hh=0" +
				"&hn=0" +
				"&qt=0" +
				"&i=TURNERDFP1" +
				"&hp=1" +
				"&zMoatPS=rect_btf_01" +
				"&zMoatHT=600" +
				"&zMoatWD=300" +
				"&zMoatST=Site%20Not%20Defined" +
				"&zMoatPSB=rect_btf_01" +
				"&zMoatOrigSlicer1=%2F8663477%2FCNNi%2Ftravel%2Fvideo" +
				"&zMoatOrigSlicer2=53125837" +
				"&cm=34" +
				"&kq=1" +
				"&bq=0" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307118395" +
				"&de=453986984615" +
				"&m=0" +
				"&ar=a243607-clean" +
				"&q=1" +
				"&cb=0" +
				"&cu=1477307118395" +
				"&ll=4" +
				"&ln=1" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=38656237%3A421501477%3A178216717%3A112406394757" +
				"&cadf=-" +
				"&gptMoat_pg=-" +
				"&gptMoat_appname=-" +
				"&gptMoat_pos=rect_btf_01" +
				"&gptMoat_mivr=-" +
				"&qs=1" +
				"&bo=%2F8663477%2FCNNi%2Ftravel%2Fvideo" +
				"&bp=53125837" +
				"&bd=rect_btf_01" +
				"&zMoatAltSL=zMoatAdUnit1%3AzMoatAdUnit2%3AzMoatPS" +
				"&dfp=0%2C4" +
				"&la=53125837" +
				"&gw=turner763610601596" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=95074" +
				"&na=137781553" +
				"&cs=0" +
				"&callback=MoatSuperV22.gna388918";
		String requestHeader0437 = "GET " + requestFile0437 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: geo.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0437, requestHost0437, requestPort0437, requestHeader0437, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0437 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 66
		// content test algorithm: check size +/- 5%, defined content size = 66
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 66, 5);		// Test [437] <- Index 437
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [438] <- WEB ADMIN Index 478 ---
		String requestProt0438 = "https";
		String requestHost0438 = "www.facebook.com";
		int    requestPort0438 = 443;
		String requestFile0438 = "/connect/ping" +
				"?client_id=80401312489" +
				"&domain=edition.cnn.com" +
				"&origin=1" +
				"&redirect_uri=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2FfTmIQU3LxvB.js%3Fversion%3D42%23cb%3Df14b9c6fb825cec%26domain%3Dedition.cnn.com%26origin%3Dhttp%253A%252F%252Fedition.cnn.com%252Ff6b01669256ef4%26relation%3Dparent" +
				"&response_type=token%2Csigned_request%2Ccode" +
				"&sdk=joey";
		String requestHeader0438 = "GET " + requestFile0438 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0438, requestHost0438, requestPort0438, requestHeader0438, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0438 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [438] <- Index 438
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [439] <- WEB ADMIN Index 479 ---
		String requestProt0439 = "https";
		String requestHost0439 = "www.facebook.com";
		int    requestPort0439 = 443;
		String requestFile0439 = "/v2.0/plugins/send_to_messenger.php" +
				"?app_id=80401312489" +
				"&channel=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2FfTmIQU3LxvB.js%3Fversion%3D42%23cb%3Df2eb2f36ff9112e%26domain%3Dedition.cnn.com%26origin%3Dhttp%253A%252F%252Fedition.cnn.com%252Ff6b01669256ef4%26relation%3Dparent.parent" +
				"&color=blue" +
				"&container_width=0" +
				"&locale=en_US" +
				"&messenger_app_id=989591237802489" +
				"&page_id=5550296508" +
				"&ref=hi" +
				"&sdk=joey" +
				"&size=xlarge";
		String requestHeader0439 = "GET " + requestFile0439 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0439, requestHost0439, requestPort0439, requestHeader0439, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0439 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 12860
		// content test algorithm: check size +/- 5%, defined content size = 12860
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 12860, 5);		// Test [439] <- Index 439
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [440] <- WEB ADMIN Index 480 ---
		String requestProt0440 = "http";
		String requestHost0440 = "tags.bluekai.com";
		int    requestPort0440 = 80;
		String requestFile0440 = "/site/20087" +
				"?ret=js" +
				"&jscb=STRBKCallback" +
				"&_=1477307113883";
		String requestHeader0440 = "GET " + requestFile0440 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: tags.bluekai.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0440, requestHost0440, requestPort0440, requestHeader0440, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0440 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 1386
		// content test algorithm: check size +/- 5%, defined content size = 1386
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 1386, 5);		// Test [440] <- Index 440
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_21 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_22.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_22(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 23 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [441] <- WEB ADMIN Index 481 ---
		String requestProt0441 = "http";
		String requestHost0441 = "tags.bluekai.com";
		int    requestPort0441 = 80;
		String requestFile0441 = "/site/20214" +
				"?limit=1" +
				"&phint=user%3Dtrue";
		String requestHeader0441 = "GET " + requestFile0441 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: tags.bluekai.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0441, requestHost0441, requestPort0441, requestHeader0441, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0441 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 62
		// content test algorithm: check size +/- 5%, defined content size = 62
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 62, 5);		// Test [441] <- Index 441
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [442] <- WEB ADMIN Index 482 ---
		String requestProt0442 = "http";
		String requestHost0442 = "beacon.krxd.net";
		int    requestPort0442 = 80;
		String requestFile0442 = "/optout_check" +
				"?callback=Krux.ns._default.kxjsonp_optOutCheck";
		String requestHeader0442 = "GET " + requestFile0442 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: beacon.krxd.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0442, requestHost0442, requestPort0442, requestHeader0442, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0442 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 90
		// content test algorithm: check size +/- 5%, defined content size = 90
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 90, 5);		// Test [442] <- Index 442
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [443] <- WEB ADMIN Index 483 ---
		String requestProt0443 = "http";
		String requestHost0443 = "ping.chartbeat.net";
		int    requestPort0443 = 80;
		String requestFile0443 = "/ping" +
				"?h=edition.cnn.com" +
				"&p=%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&u=DK-3L5D9nIqOBXmMI4" +
				"&d=edition.cnn.com" +
				"&g=37612" +
				"&g0=travel%2Cvideos%2Cvideo%2Cbra-nps-100%2Cvid-vid-vls-col%2Ccol-national-parks" +
				"&n=1" +
				"&f=00001" +
				"&c=0" +
				"&x=0" +
				"&m=0" +
				"&y=6278" +
				"&o=960" +
				"&w=950" +
				"&j=45" +
				"&R=1" +
				"&W=0" +
				"&I=0" +
				"&E=0" +
				"&e=0" +
				"&v=%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&K=657::2044::6bWDqlh_MnCrdliDC7_aqDmJ9Eq::*%5B%40id%3D%27otherCollections%27%5D%2Fdiv%5B2%5D%2Fdiv%5B2%5D%2Fdiv%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B6%5D%2Farticle%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B2%5D%2Fh3%5B1%5D%2Fa%5B1%5D::c::http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn::BypBLNI28MXBDKNTaCjFOasCg9JTq" +
				"&b=8288" +
				"&t=NkWDo8anZc3efpGDLBRQEjCiu5" +
				"&V=83" +
				"&z=t%3DBTKYZFDv2GfB6NynpBrVUbSC-7JT6%26E%3D27%26EE%3D28%26x%3D1343%26c%3D0.52%26y%3D6183%26w%3D950" +
				"&i=Explore%20Arch%20Rock%20in%20the%20Channel%20Islands%20-%20CNN%20Video" +
				"&tz=-120" +
				"&sn=1" +
				"&EE=0" +
				"&_";
		String requestHeader0443 = "GET " + requestFile0443 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ping.chartbeat.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0443, requestHost0443, requestPort0443, requestHeader0443, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0443 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [443] <- Index 443
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [444] <- WEB ADMIN Index 484 ---
		String requestProt0444 = "http";
		String requestHost0444 = "beacon.krxd.net";
		int    requestPort0444 = 80;
		String requestFile0444 = "/pixel.gif" +
				"?source=smarttag" +
				"&fired=report" +
				"&confid=ITb_9Zup" +
				"&_kpid=e9eaedd3-c1da-4334-82f0-d7e3ff883c87" +
				"&_kcp_s=CNN%20International%20Edition" +
				"&_kcp_d=edition.cnn.com" +
				"&_knifr=13" +
				"&_kpref_=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&_kua_kx_tz=-120" +
				"&geo_country=se" +
				"&geo_region=ab" +
				"&_kua_kx_lang=en-gb" +
				"&_kua_kx_tech_browser_language=en-gb" +
				"&_kua_kx_geo_country=se" +
				"&_kua_kx_geo_region=ab" +
				"&_kua_kx_tech_browser=Firefox%204" +
				"&_kua_kx_tech_manufacturer=Apple%20Inc." +
				"&_kua_kx_tech_device=Computer" +
				"&_kua_kx_tech_os=Mac%20OS%20X" +
				"&_kua_turner_guid=580de97e063d0a0a3c875a117700647f" +
				"&_kua_aa_id=2C06F4C0851D16CD-600001280000E699" +
				"&_kua_af_id=0DE0D1A7EC740073-0D35F412D19C24F3" +
				"&_kua_kx_whistle=0" +
				"&_kpa_cnn_international_site=cnn_international" +
				"&_kpa_cnn_international_rollup=travel" +
				"&_kpa_cnn_international_section=video" +
				"&_kpa_cnn_international_spec=nps_100" +
				"&_kpa_cap_topics=89X%2CF00%2C7GX%2C3H0%2C3GY%2CCGX%2C87D%2C87J%2CHPV%2C880%2C9QP%2C9QV%2C6BD%2CBLL%2CBLX%2CB9W%2CBCC%2C7XG%2C7LX%2C7M1%2C820%2C5FN%2C85G" +
				"&_kpa_keywords=Channel%20Islands%2C%20Pacific%20Ocean%2C%20Arch%20Rock%2C%20ocean%2C%20sea%2C%20animals%2C%20national%20parks%2C%20Channel%20Islands%20National%20Park%2C%20Channel%20Islands%2C%20Pacific%20Ocean%2C%20Arch%20Rock%2C%20ocean%2C%20sea%2C%20animals%2C%20national%20parks%2C%20Channel%20Islands%20National%20Park%2C%20travel%2C%20Explore%20Arch%20Rock%20in%20the%20Channel%20Islands%20-%20CNN%20Video" +
				"&_kpa_cnn_international_lob=news" +
				"&_kpa_cnn_international_brand=cnn" +
				"&_kpa_cnn_international_bizunit=cnn%20international" +
				"&_kpa_cnn_international_sitename=edition.cnn.com" +
				"&_kpa_cnn_international_sitesectionlevel1=travel" +
				"&_kpa_cnn_international_sitesectionlevel2=travel%3Anvs" +
				"&t_navigation_type=0" +
				"&t_dns=0" +
				"&t_tcp=0" +
				"&t_http_request=-1" +
				"&t_http_response=0" +
				"&t_content_ready=1643" +
				"&t_window_load=9916" +
				"&t_redirect=0" +
				"&interchange_ran=true" +
				"&store_user=q7dgd6wiu" +
				"&userdata_was_requested=true" +
				"&userdata_did_respond=true" +
				"&store_user_after=q7dgd6wiu" +
				"&_kurl_=http%3A%2F%2Fwww.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&userdata_user=K2kp92OU%2Cq7dgd6wiu" +
				"&sview=3" +
				"&kplt5=23412" +
				"&kplt7=23445" +
				"&kplt9=23474" +
				"&kplt10=23477" +
				"&jsonp_requests=%2F%2Fbeacon.krxd.net%2Foptout_check%2CNaN%2C%2F%2Fcdn.krxd.net%2Fuserdata%2Fget%2C1088";
		String requestHeader0444 = "GET " + requestFile0444 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: beacon.krxd.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0444, requestHost0444, requestPort0444, requestHeader0444, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0444 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, "IMAGE/GIF", null, 0, 5);		// Test [444] <- Index 444
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [445] <- WEB ADMIN Index 485 ---
		String requestProt0445 = "http";
		String requestHost0445 = "social-login.cnn.com";
		int    requestPort0445 = 80;
		String requestFile0445 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114197%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114206%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114212%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114216%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114219%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R3765830489";
		String requestHeader0445 = "GET " + requestFile0445 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0445, requestHost0445, requestPort0445, requestHeader0445, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0445 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [445] <- Index 445
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [446] <- WEB ADMIN Index 486 ---
		String requestProt0446 = "http";
		String requestHost0446 = "social-login.cnn.com";
		int    requestPort0446 = 80;
		String requestFile0446 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114224%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114229%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114233%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114235%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114238%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R547918520";
		String requestHeader0446 = "GET " + requestFile0446 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0446, requestHost0446, requestPort0446, requestHeader0446, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0446 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 188
		// content test algorithm: check size +/- 5%, defined content size = 188
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 188, 5);		// Test [446] <- Index 446
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [447] <- WEB ADMIN Index 487 ---
		String requestProt0447 = "http";
		String requestHost0447 = "social-login.cnn.com";
		int    requestPort0447 = 80;
		String requestFile0447 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114241%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114244%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R2211121071";
		String requestHeader0447 = "GET " + requestFile0447 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0447, requestHost0447, requestPort0447, requestHeader0447, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0447 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [447] <- Index 447
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [448] <- WEB ADMIN Index 488 ---
		String requestProt0448 = "http";
		String requestHost0448 = "social-login.cnn.com";
		int    requestPort0448 = 80;
		String requestFile0448 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22loadc%22%2C%22time%22%3A%221477307113836%22%2C%22reportData%22%3A%7B%22sref%22%3A%22http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn%22%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114150%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114183%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114187%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307114191%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R2038660337";
		String requestHeader0448 = "GET " + requestFile0448 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0448, requestHost0448, requestPort0448, requestHeader0448, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0448 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [448] <- Index 448
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [449] <- WEB ADMIN Index 489 ---
		String requestProt0449 = "http";
		String requestHost0449 = "z.cdn.turner.com";
		int    requestPort0449 = 80;
		String requestFile0449 = "/xslo/cvp/core/base/0/CVPBase.swf" +
				"?profile=expansion" +
				"&autostart=true" +
				"&domId=cvp_1" +
				"&containerVersion=Container%20v2.0.4.0" +
				"&site=cnn" +
				"&isEmbedContainer=false" +
				"&cachebust=false" +
				"&context=expansion";
		String requestHeader0449 = "GET " + requestFile0449 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: z.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0449, requestHost0449, requestPort0449, requestHeader0449, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0449 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/X-SHOCKWAVE-FLASH", header text fragment = [verification disabled], recorded content size = 37500
		// content test algorithm: check size +/- 5%, defined content size = 37500
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/X-SHOCKWAVE-FLASH", null, 37500, 5);		// Test [449] <- Index 449
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [450] <- WEB ADMIN Index 491 ---
		String requestProt0450 = "http";
		String requestHost0450 = "aspen.turner.com";
		int    requestPort0450 = 80;
		String requestFile0450 = "/api/hello";
		String requestContent0450 = 
				"aspenJson=%257B%2522platformName%2522%253A%2522flash%2522%252C%2522aspenUUIDToken%2522%253A%2522demo%5Fhash%2522%252C%2522debug%2522%253A%2522false%2522%252C%2522context%2522%253A%2522expansion%2522%252C%2522site%2522%253A%2522cnn%2522%252C%2522clientThrottle%2522%253A0%252C%2522clientThrottled%2522%253Afalse%252C%2522profile%2522%253A%2522expansion%2522%252C%2522deviceType%2522%253A%2522desktop%2522%252C%2522protocol%2522%253A%25221%2E0%2522%252C%2522applicationName%2522%253A%2522CVP%2522%252C%2522deviceModel%2522%253A%2522desktop%2522%252C%2522propertyName%2522%253A%2522cnn%2522%252C%2522applicationVersion%2522%253A%25222%2E5%2E8%2E0%2522%252C%2522deviceVersion%2522%253A%2522desktop%2522%252C%2522pageUrl%2522%253A%2522http%253A%2F%2Fedition%2Ecnn%2Ecom%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking%2Dchannel%2Dislands%2Dnational%2Dparks%2Dnccorig%2Ecnn%2522%257D";
		String requestHeader0450 = "POST " + requestFile0450 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: aspen.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Content-type: application/x-www-form-urlencoded\r\n" + 
				"Content-Length: " + requestContent0450.length() + "\r\n" + 		// Content-length: 875
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0450, requestHost0450, requestPort0450, requestHeader0450, requestContent0450.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0450 = null;		// support garbage collector to reduce memory
		requestContent0450 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/JSON", header text fragment = [verification disabled], recorded content size = 287
		// content test algorithm: check size +/- 5%, defined content size = 287
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/JSON", null, 287, 5);		// Test [450] <- Index 450
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [451] <- WEB ADMIN Index 497 ---
		String requestProt0451 = "http";
		String requestHost0451 = "79423.analytics.edgesuite.net";
		int    requestPort0451 = 80;
		String requestFile0451 = "/crossdomain.xml";
		String requestHeader0451 = "GET " + requestFile0451 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: 79423.analytics.edgesuite.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0451, requestHost0451, requestPort0451, requestHeader0451, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0451 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/XML", header text fragment = [verification disabled], recorded content size = 178
		// content test algorithm: check size +/- 5%, defined content size = 178
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/XML", null, 178, 5);		// Test [451] <- Index 451
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [452] <- WEB ADMIN Index 498 ---
		String requestProt0452 = "http";
		String requestHost0452 = "edition.cnn.com";
		int    requestPort0452 = 80;
		String requestFile0452 = "/video/data/3.0/video/travel/2016/06/22/kayaking-channel-islands-national-parks-nccorig.cnn/index.xml" +
				"?xml=true";
		String requestHeader0452 = "GET " + requestFile0452 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: edition.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0452, requestHost0452, requestPort0452, requestHeader0452, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0452 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/XML", header text fragment = [verification disabled], recorded content size = 2986
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/XML", null, "kayaking channel islands national parks nccorig");		// Test [452] <- Index 452
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [453] <- WEB ADMIN Index 499 ---
		String requestProt0453 = "http";
		String requestHost0453 = "www.cnn.com";
		int    requestPort0453 = 80;
		String requestFile0453 = "/crossdomain.xml";
		String requestHeader0453 = "GET " + requestFile0453 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0453, requestHost0453, requestPort0453, requestHeader0453, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0453 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 302, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {302}, null, null, null);		// Test [453] <- Index 453
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [454] <- WEB ADMIN Index 500 ---
		String requestProt0454 = "http";
		String requestHost0454 = "aax.amazon-adsystem.com";
		int    requestPort0454 = 80;
		String requestFile0454 = "/e/dtb/bid" +
				"?src=3288" +
				"&u=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&cb=4008544" +
				"&t=2000";
		String requestHeader0454 = "GET " + requestFile0454 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: aax.amazon-adsystem.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0454, requestHost0454, requestPort0454, requestHeader0454, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0454 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 19
		// content test algorithm: check size +/- 5%, defined content size = 19
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/JAVASCRIPT", null, 19, 5);		// Test [454] <- Index 454
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [455] <- WEB ADMIN Index 501 ---
		String requestProt0455 = "https";
		String requestHost0455 = "www.facebook.com";
		int    requestPort0455 = 443;
		String requestFile0455 = "/v2.0/plugins/send_to_messenger.php" +
				"?app_id=80401312489" +
				"&channel=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2FfTmIQU3LxvB.js%3Fversion%3D42%23cb%3Df2eb2f36ff9112e%26domain%3Dedition.cnn.com%26origin%3Dhttp%253A%252F%252Fedition.cnn.com%252Ff6b01669256ef4%26relation%3Dparent.parent" +
				"&color=blue" +
				"&container_width=0" +
				"&locale=en_US" +
				"&messenger_app_id=989591237802489" +
				"&page_id=5550296508" +
				"&ref=hi" +
				"&sdk=joey" +
				"&size=xlarge";
		String requestHeader0455 = "GET " + requestFile0455 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0455, requestHost0455, requestPort0455, requestHeader0455, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0455 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 12848
		// content test algorithm: check size +/- 5%, defined content size = 12848
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 12848, 5);		// Test [455] <- Index 455
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [456] <- WEB ADMIN Index 502 ---
		String requestProt0456 = "https";
		String requestHost0456 = "www.facebook.com";
		int    requestPort0456 = 443;
		String requestFile0456 = "/v2.0/plugins/send_to_messenger.php" +
				"?app_id=80401312489" +
				"&channel=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter%2Fr%2FfTmIQU3LxvB.js%3Fversion%3D42%23cb%3Df2eb2f36ff9112e%26domain%3Dedition.cnn.com%26origin%3Dhttp%253A%252F%252Fedition.cnn.com%252Ff6b01669256ef4%26relation%3Dparent.parent" +
				"&color=blue" +
				"&container_width=0" +
				"&locale=en_US" +
				"&messenger_app_id=989591237802489" +
				"&page_id=5550296508" +
				"&ref=hi" +
				"&sdk=joey" +
				"&size=xlarge";
		String requestHeader0456 = "GET " + requestFile0456 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: www.facebook.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0456, requestHost0456, requestPort0456, requestHeader0456, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0456 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 12859
		// content test algorithm: check size +/- 5%, defined content size = 12859
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 12859, 5);		// Test [456] <- Index 456
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [457] <- WEB ADMIN Index 503 ---
		String requestProt0457 = "http";
		String requestHost0457 = "ma67-c.analytics.edgesuite.net";
		int    requestPort0457 = 80;
		String requestFile0457 = "/crossdomain.xml";
		String requestHeader0457 = "GET " + requestFile0457 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ma67-c.analytics.edgesuite.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0457, requestHost0457, requestPort0457, requestHeader0457, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0457 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/XML", header text fragment = [verification disabled], recorded content size = 120
		// content test algorithm: check size +/- 5%, defined content size = 120
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/XML", null, 120, 5);		// Test [457] <- Index 457
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [458] <- WEB ADMIN Index 504 ---
		String requestProt0458 = "http";
		String requestHost0458 = "ma67-c.analytics.edgesuite.net";
		int    requestPort0458 = 80;
		String requestFile0458 = "/config/beacon-1482.xml" +
				"?d=2492016";
		String requestHeader0458 = "GET " + requestFile0458 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ma67-c.analytics.edgesuite.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0458, requestHost0458, requestPort0458, requestHeader0458, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0458 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/XML", header text fragment = [verification disabled], recorded content size = 13140
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/XML", null, "data key=\"vl\" name=\"visitMaxPersistentBitRateBucket\"/");		// Test [458] <- Index 458
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [459] <- WEB ADMIN Index 505 ---
		String requestProt0459 = "http";
		String requestHost0459 = "bea4.cnn.com";
		int    requestPort0459 = 80;
		String requestFile0459 = "/ad/p/1?";
		String requestContent0459 = 
				"<adRequest networkId=\"48804\" profile=\"48804:cnn_bvp_player\" mode=\"ON_DEMAND\" version=\"1\"><capabilities><supportsSlotTemplate /><expectMultipleCreativeRenditions /><supportsAdUnitInMultipleSlots /><supportsSlotCallback /><supportNullCreative /><supportAdBundle /><supportsFallbackAds /><autoEventTracking /><supportSlotInfo /><requiresVideoCallbackUrl /><resetExclusivity /></capabilities><visitor caller=\"AS3-6.1.0-r10821-1505040402\"><httpHeaders><httpHeader value=\"http://edition.cnn.com/videos/travel/2016/06/22/kayaking-channel-islands-national-parks-nccorig.cnn\" name=\"referer\" /><httpHeader value=\"23,0,0,185\" name=\"x-flash-version\" /></httpHeaders></visitor><keyValues><keyValue value=\"cap\" key=\"3GY\" /><keyValue value=\"cap\" key=\"3H0\" /><keyValue value=\"cap\" key=\"5FN\" /><keyValue value=\"cap\" key=\"6BD\" /><keyValue value=\"cap\" key=\"7GX\" /><keyValue value=\"cap\" key=\"7LX\" /><keyValue value=\"cap\" key=\"7M1\" /><keyValue value=\"cap\" key=\"7XG\" /><keyValue value=\"cap\" key=\"820\" /><keyValue value=\"cap\" key=\"85G\" /><keyValue value=\"cap\" key=\"87D\" /><keyValue value=\"cap\" key=\"87J\" /><keyValue value=\"cap\" key=\"880\" /><keyValue value=\"cap\" key=\"89X\" /><keyValue value=\"cap\" key=\"9QP\" /><keyValue value=\"cap\" key=\"9QV\" /><keyValue value=\"cap\" key=\"B9W\" /><keyValue value=\"cap\" key=\"BCC\" /><keyValue value=\"cap\" key=\"BLL\" /><keyValue value=\"cap\" key=\"BLX\" /><keyValue value=\"cap\" key=\"CGX\" /><keyValue value=\"cap\" key=\"F00\" /><keyValue value=\"cap\" key=\"HPV\" /><keyValue value=\"flash\" key=\"_fw_cvp_player\" /><keyValue value=\"580de97e063d0a0a3c875a117700647f\" key=\"guID\" /><keyValue value=\"true\" key=\"inFocus\" /><keyValue value=\"no\" key=\"is_fullscreen\" /><keyValue value=\"q7dgd6wiu\" key=\"krux_user\" /><keyValue value=\"cnn\" key=\"refdom\" /><keyValue value=\"14773071104534399657606343\" key=\"transactionID\" /></keyValues><siteSection customId=\"edition.cnn.com_travel_nps100_t1\" siteSectionNetworkId=\"48804\" pageViewRandom=\"1673\"><videoPlayer><videoAsset duration=\"122\" customId=\"cnn-travel/2016/06/22/kayaking-channel-islands-national-parks-nccorig.cnn\" videoAssetNetworkId=\"48804\" autoPlay=\"true\" videoPlayRandom=\"1673\" durationType=\"EXACT\"><adSlots height=\"349\" width=\"620\" defaultSlotProfile=\"48804:cnn_bvp_player\" compatibleDimensions=\"1680,1050\" /></videoAsset><adSlots /></videoPlayer><adSlots><nonTemporalAdSlot height=\"1100\" customId=\"cnn_CNNNext_Player_Background_desktop_1\" slotProfile=\"g_js\" adUnit=\"CNNNext_Player_Background\" acceptCompanion=\"true\" width=\"1900\"><contentTypes><acceptPrimaryContentType contentTypeId=\"text/html_lit_js_wc_nw\" /></contentTypes></nonTemporalAdSlot></adSlots></siteSection></adRequest>";
		String requestHeader0459 = "POST " + requestFile0459 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Content-type: text/xml\r\n" + 
				"Content-Length: " + requestContent0459.length() + "\r\n" + 		// Content-length: 2617
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0459, requestHost0459, requestPort0459, requestHeader0459, requestContent0459.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0459 = null;		// support garbage collector to reduce memory
		requestContent0459 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/XML", header text fragment = [verification disabled], recorded content size = 1356
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/XML", null, "parameter name='moat_callback'");		// Test [459] <- Index 459
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [460] <- WEB ADMIN Index 506 ---
		String requestProt0460 = "http";
		String requestHost0460 = "js.moatads.com";
		int    requestPort0460 = 80;
		String requestFile0460 = "/crossdomain.xml";
		String requestHeader0460 = "GET " + requestFile0460 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: js.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0460, requestHost0460, requestPort0460, requestHeader0460, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0460 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/XML", header text fragment = [verification disabled], recorded content size = 304
		// content test algorithm: check size +/- 5%, defined content size = 304
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/XML", null, 304, 5);		// Test [460] <- Index 460
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_22 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_23.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_23(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 24 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [461] <- WEB ADMIN Index 507 ---
		String requestProt0461 = "http";
		String requestHost0461 = "bea4.cnn.com";
		int    requestPort0461 = 80;
		String requestFile0461 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&cn=slotImpression" +
				"&et=i" +
				"&tpos=0" +
				"&init=1" +
				"&slid=0";
		String requestHeader0461 = "GET " + requestFile0461 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0461, requestHost0461, requestPort0461, requestHeader0461, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0461 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [461] <- Index 461
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [462] <- WEB ADMIN Index 508 ---
		String requestProt0462 = "https";
		String requestHost0462 = "amd-ssl.cdn.turner.com";
		int    requestPort0462 = 443;
		String requestFile0462 = "/cnn/big/ads/2016/10/21/COP_22_English_Pre-Roll_1280x720.mp4";
		String requestHeader0462 = "GET " + requestFile0462 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: amd-ssl.cdn.turner.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0462, requestHost0462, requestPort0462, requestHeader0462, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setStoreMaxReceivedContentSize(5242880);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0462 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "VIDEO/MP4", header text fragment = [verification disabled], recorded content size = 13163034
		// content test algorithm: check size +/- 5%, defined content size = 13163034
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "VIDEO/MP4", null, 13163034, 5);		// Test [462] <- Index 462
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [463] <- WEB ADMIN Index 509 ---
		String requestProt0463 = "http";
		String requestHost0463 = "social-login.cnn.com";
		int    requestPort0463 = 80;
		String requestFile0463 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122539%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122548%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122561%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122570%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122576%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R1066638937";
		String requestHeader0463 = "GET " + requestFile0463 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0463, requestHost0463, requestPort0463, requestHeader0463, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0463 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [463] <- Index 463
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [464] <- WEB ADMIN Index 510 ---
		String requestProt0464 = "http";
		String requestHost0464 = "social-login.cnn.com";
		int    requestPort0464 = 80;
		String requestFile0464 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122582%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122585%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122589%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122592%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122596%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R1406877531";
		String requestHeader0464 = "GET " + requestFile0464 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0464, requestHost0464, requestPort0464, requestHeader0464, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0464 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [464] <- Index 464
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [465] <- WEB ADMIN Index 511 ---
		String requestProt0465 = "http";
		String requestHost0465 = "social-login.cnn.com";
		int    requestPort0465 = 80;
		String requestFile0465 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122617%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122784%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122791%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122802%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122808%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R3561689290";
		String requestHeader0465 = "GET " + requestFile0465 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0465, requestHost0465, requestPort0465, requestHeader0465, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0465 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [465] <- Index 465
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [466] <- WEB ADMIN Index 512 ---
		String requestProt0466 = "http";
		String requestHost0466 = "social-login.cnn.com";
		int    requestPort0466 = 80;
		String requestFile0466 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122822%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122839%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122848%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122855%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122863%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R3125776708";
		String requestHeader0466 = "GET " + requestFile0466 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0466, requestHost0466, requestPort0466, requestHeader0466, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0466 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [466] <- Index 466
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [467] <- WEB ADMIN Index 513 ---
		String requestProt0467 = "http";
		String requestHost0467 = "social-login.cnn.com";
		int    requestPort0467 = 80;
		String requestFile0467 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122904%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122912%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R1459475658";
		String requestHeader0467 = "GET " + requestFile0467 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0467, requestHost0467, requestPort0467, requestHeader0467, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0467 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [467] <- Index 467
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [468] <- WEB ADMIN Index 514 ---
		String requestProt0468 = "http";
		String requestHost0468 = "social-login.cnn.com";
		int    requestPort0468 = 80;
		String requestFile0468 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122601%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122605%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122609%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122612%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122614%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R873937252";
		String requestHeader0468 = "GET " + requestFile0468 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0468, requestHost0468, requestPort0468, requestHeader0468, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0468 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 188
		// content test algorithm: check size +/- 5%, defined content size = 188
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 188, 5);		// Test [468] <- Index 468
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [469] <- WEB ADMIN Index 515 ---
		String requestProt0469 = "http";
		String requestHost0469 = "social-login.cnn.com";
		int    requestPort0469 = 80;
		String requestFile0469 = "/gscounters.sendReport" +
				"?reports=%5B%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122873%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122878%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122885%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122891%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%2C%7B%22name%22%3A%22load%22%2C%22time%22%3A%221477307122896%22%2C%22source%22%3A%22showShareBarUI%22%2C%22reportData%22%3A%7B%7D%7D%5D" +
				"&APIKey=3_gtUbleJNtrRITgx-1mM_ci7GcIrH8xL9W_VfAbzSa4zpFrRwnpq_eYd8QTRkr7VC" +
				"&sdk=js_6.4.13" +
				"&format=jsonp" +
				"&callback=gigya._.apiAdapters.web.callback" +
				"&context=R2616283030";
		String requestHeader0469 = "GET " + requestFile0469 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: social-login.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0469, requestHost0469, requestPort0469, requestHeader0469, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0469 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/ECMASCRIPT", header text fragment = [verification disabled], recorded content size = 189
		// content test algorithm: check size +/- 5%, defined content size = 189
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/ECMASCRIPT", null, 189, 5);		// Test [469] <- Index 469
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [470] <- WEB ADMIN Index 516 ---
		String requestProt0470 = "http";
		String requestHost0470 = "b.scorecardresearch.com";
		int    requestPort0470 = 80;
		String requestFile0470 = "/p" +
				"?c1=2" +
				"&c2=6035748" +
				"&ns_type=hidden" +
				"&ns_st_sv=4.1412.05" +
				"&ns_st_it=r" +
				"&ns_st_id=1477307124805_1" +
				"&ns_st_ec=1" +
				"&ns_st_sp=1" +
				"&ns_st_sq=1" +
				"&ns_st_cn=1" +
				"&ns_st_ev=play" +
				"&ns_st_po=0" +
				"&ns_st_cl=0" +
				"&ns_st_pb=1" +
				"&ns_st_mp=streamsense" +
				"&ns_st_mv=4.1412.05" +
				"&ns_st_pn=1" +
				"&ns_st_tp=1" +
				"&ns_st_ad=1" +
				"&ns_st_ci=0" +
				"&ns_ts=1477307124807" +
				"&ns_st_bt=0" +
				"&ns_st_bp=0" +
				"&ns_st_br=0" +
				"&ns_st_ub=0" +
				"&ns_st_ct=va" +
				"&c3=*null" +
				"&c4=*null" +
				"&c6=*null" +
				"&c7=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn%2Fvideo%2Fplaylists%2Fnational-parks%2F" +
				"&c8=Explore%20Arch%20Rock%20in%20the%20Channel%20Islands" +
				"&c9=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn";
		String requestHeader0470 = "GET " + requestFile0470 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0470, requestHost0470, requestPort0470, requestHeader0470, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0470 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [470] <- Index 470
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [471] <- WEB ADMIN Index 517 ---
		String requestProt0471 = "http";
		String requestHost0471 = "metrics.cnn.com";
		int    requestPort0471 = 80;
		String requestFile0471 = "/b/ss/cnn-adbp-intl/1/H.26.1/s7416898238972" +
				"?AQB=1" +
				"&ndh=1" +
				"&t=24%2F9%2F2016%2013%3A5%3A24%201%20-120" +
				"&fid=0DE0D1A7EC740073-0D35F412D19C24F3" +
				"&ce=UTF-8" +
				"&ns=cnn" +
				"&g=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&cc=USD" +
				"&events=event35" +
				"&v1=vod%20player" +
				"&v3=travel" +
				"&v4=page_12col_world_video_zone-0-2_don%27t%20miss%20these%20videos_cn-grid--small_nvs" +
				"&v5=general%20news" +
				"&v7=122" +
				"&v8=repeat%3A2" +
				"&v10=125" +
				"&v13=video" +
				"&v16=2016%2F06%2F22" +
				"&v17=anonymous" +
				"&v20=23" +
				"&v22=1" +
				"&v23=explore%20arch%20rock%20in%20the%20channel%20islands" +
				"&v26=cnn%3Av%3Aediti%3A6%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn%2Fvideo%2Fplaylists%2Fnational-parks%2F" +
				"&v27=travel" +
				"&v28=travel%3Anvs" +
				"&v29=edition.cnn.com" +
				"&v30=cnn%20international" +
				"&v32=adbp%3Avideo" +
				"&v33=other%3Aad%20start" +
				"&v34=does%20not%20require%20authentication" +
				"&c35=cnn.166.1-0-0.20161009%3A0" +
				"&v35=D%3Dc35" +
				"&v37=desktop" +
				"&v41=%2Fvideo%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&v42=%2Fvideo%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&c46=14773071104534399657606343" +
				"&v46=D%3Dc46" +
				"&c47=580de97e063d0a0a3c875a117700647f" +
				"&v47=D%3Dc47" +
				"&v54=video%3Avod%3Anon%20tve%3Aclip%3Aclip%3Aad" +
				"&v57=no%20mvpd%20set" +
				"&c59=nvs" +
				"&v59=D%3Dc59" +
				"&v60=national-parks" +
				"&v64=cnn%20news" +
				"&v68=30" +
				"&c73=960%20x%20950" +
				"&v73=D%3Dc73" +
				"&c75=nvs" +
				"&v75=D%3Dc75" +
				"&l1=89x_f00_7gx_3h0_3gy_cgx_87d_87j_hpv_880_9qp_9qv_6bd_bll_blx_b9w_bcc_7xg_7lx_7m1_820_5fn_85g" +
				"&pe=lnk_o" +
				"&pev2=cnnvideo-preroll%3A%20explore%20arch%20rock%20in%20the%20channel%20islands" +
				"&s=1920x1080" +
				"&c=24" +
				"&j=1.8.5" +
				"&v=Y" +
				"&k=Y" +
				"&bw=960" +
				"&bh=950" +
				"&AQE=1";
		String requestHeader0471 = "GET " + requestFile0471 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: metrics.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0471, requestHost0471, requestPort0471, requestHeader0471, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0471 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [471] <- Index 471
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [472] <- WEB ADMIN Index 518 ---
		String requestProt0472 = "http";
		String requestHost0472 = "traffic.outbrain.com";
		int    requestPort0472 = 80;
		String requestFile0472 = "/network/trackpxl" +
				"?advid=814" +
				"&action=view";
		String requestHeader0472 = "GET " + requestFile0472 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: traffic.outbrain.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0472, requestHost0472, requestPort0472, requestHeader0472, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0472 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [472] <- Index 472
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [473] <- WEB ADMIN Index 519 ---
		String requestProt0473 = "http";
		String requestHost0473 = "video.moatads.com";
		int    requestPort0473 = 80;
		String requestFile0473 = "/pixel.gif" +
				"?e=34" +
				"&ud=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qc=834" +
				"&qd=-1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&qi=1920" +
				"&qj=1057" +
				"&qk=0" +
				"&ql=B%3Fn%2BbqLd8xt%40kk%7CQ%5EG(%2Cn%5Dk%22%2BZ%7Bo~ts1(ul9EU%22y%2F.o%5DI%24%3D!%250ny7ju2*C*YZd3wW0uC9LgPBFXjO%2Bm3.j%23jGT%2F)UEfXT%23%3C1Wszv%3BUgPBFXjO%2Bm3jiO%2B%2CNvR5.fXT1*0Z%3C7b%40Q!7bYLa%24eCKu%2Bay%3BUNSiyMm4MQ2%24(%5DmGUpRiF" +
				"&qo=0" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&i=FREEWHEEL1" +
				"&cm=7" +
				"&bq=8" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&m=0" +
				"&ar=b911905-clean" +
				"&q=0" +
				"&cb=0" +
				"&cu=1477307125075" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&qs=1" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatCCFWNID=48804%3A-" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=69222" +
				"&na=527736259" +
				"&cs=0";
		String requestHeader0473 = "GET " + requestFile0473 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0473, requestHost0473, requestPort0473, requestHeader0473, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0473 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [473] <- Index 473
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [474] <- WEB ADMIN Index 520 ---
		String requestProt0474 = "http";
		String requestHost0474 = "geo.moatads.com";
		int    requestPort0474 = 80;
		String requestFile0474 = "/n.js" +
				"?e=35" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&i=FREEWHEEL1" +
				"&cm=7" +
				"&bq=8" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&m=0" +
				"&ar=b911905-clean" +
				"&q=1" +
				"&cb=0" +
				"&cu=1477307125075" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&qs=1" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatCCFWNID=48804%3A-" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=69222" +
				"&na=108549613" +
				"&cs=0" +
				"&callback=MoatSuperV13.gna984199";
		String requestHeader0474 = "GET " + requestFile0474 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: geo.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0474, requestHost0474, requestPort0474, requestHeader0474, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0474 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 64
		// content test algorithm: check size +/- 5%, defined content size = 64
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 64, 5);		// Test [474] <- Index 474
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [475] <- WEB ADMIN Index 521 ---
		String requestProt0475 = "http";
		String requestHost0475 = "bea4.cnn.com";
		int    requestPort0475 = 80;
		String requestFile0475 = "/ad/l/1" +
				"?metr=127" +
				"&s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&auid=" +
				"&cn=defaultImpression" +
				"&et=i" +
				"&_cc=17231483,6063203,,19312.21475.,1477307123,1" +
				"&tpos=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=" +
				"&init=1" +
				"&cr=";
		String requestHeader0475 = "GET " + requestFile0475 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0475, requestHost0475, requestPort0475, requestHeader0475, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0475 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [475] <- Index 475
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [476] <- WEB ADMIN Index 522 ---
		String requestProt0476 = "http";
		String requestHost0476 = "bea4.cnn.com";
		int    requestPort0476 = 80;
		String requestFile0476 = "/ad/p/1?";
		String requestContent0476 = 
				"<adRequest networkId=\"48804\" profile=\"48804:cnn_bvp_player\" version=\"1\"><capabilities><expectMultipleCreativeRenditions /><supportsAdUnitInMultipleSlots /><supportsSlotCallback /><supportNullCreative /><supportAdBundle /><supportsFallbackAds /><autoEventTracking /><supportSlotInfo /><requiresRendererManifest /><requiresVideoCallbackUrl /><resetExclusivity /><refreshDisplaySlots /></capabilities><visitor caller=\"AS3-6.1.0-r10821-1505040402\"><httpHeaders><httpHeader value=\"http://edition.cnn.com/videos/travel/2016/06/22/kayaking-channel-islands-national-parks-nccorig.cnn\" name=\"referer\" /><httpHeader value=\"23,0,0,185\" name=\"x-flash-version\" /></httpHeaders></visitor><keyValues><keyValue value=\"cap\" key=\"3GY\" /><keyValue value=\"cap\" key=\"3H0\" /><keyValue value=\"cap\" key=\"5FN\" /><keyValue value=\"cap\" key=\"6BD\" /><keyValue value=\"cap\" key=\"7GX\" /><keyValue value=\"cap\" key=\"7LX\" /><keyValue value=\"cap\" key=\"7M1\" /><keyValue value=\"cap\" key=\"7XG\" /><keyValue value=\"cap\" key=\"820\" /><keyValue value=\"cap\" key=\"85G\" /><keyValue value=\"cap\" key=\"87D\" /><keyValue value=\"cap\" key=\"87J\" /><keyValue value=\"cap\" key=\"880\" /><keyValue value=\"cap\" key=\"89X\" /><keyValue value=\"cap\" key=\"9QP\" /><keyValue value=\"cap\" key=\"9QV\" /><keyValue value=\"cap\" key=\"B9W\" /><keyValue value=\"cap\" key=\"BCC\" /><keyValue value=\"cap\" key=\"BLL\" /><keyValue value=\"cap\" key=\"BLX\" /><keyValue value=\"cap\" key=\"CGX\" /><keyValue value=\"cap\" key=\"F00\" /><keyValue value=\"cap\" key=\"HPV\" /><keyValue value=\"flash\" key=\"_fw_cvp_player\" /><keyValue value=\"580de97e063d0a0a3c875a117700647f\" key=\"guID\" /><keyValue value=\"true\" key=\"inFocus\" /><keyValue value=\"no\" key=\"is_fullscreen\" /><keyValue value=\"q7dgd6wiu\" key=\"krux_user\" /><keyValue value=\"cnn\" key=\"refdom\" /><keyValue value=\"14773071104534399657606343\" key=\"transactionID\" /></keyValues><siteSection customId=\"edition.cnn.com_travel_nps100_t1\" siteSectionNetworkId=\"48804\" pageViewRandom=\"1673\"><videoPlayer><videoAsset duration=\"122\" customId=\"cnn-travel/2016/06/22/kayaking-channel-islands-national-parks-nccorig.cnn\" videoAssetNetworkId=\"48804\" autoPlay=\"true\" videoPlayRandom=\"1673\" durationType=\"EXACT\"><adSlots defaultSlotProfile=\"48804:cnn_bvp_player\" compatibleDimensions=\"1680,1050\" /></videoAsset><adSlots /></videoPlayer><adSlots><nonTemporalAdSlot height=\"1100\" customId=\"cnn_CNNNext_Player_Background_desktop_1\" slotProfile=\"g_js\" adUnit=\"CNNNext_Player_Background\" acceptCompanion=\"false\" width=\"1900\"><contentTypes><acceptPrimaryContentType contentTypeId=\"text/html_lit_js_wc_nw\" /></contentTypes></nonTemporalAdSlot></adSlots></siteSection></adRequest>";
		String requestHeader0476 = "POST " + requestFile0476 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Content-type: text/xml\r\n" + 
				"Content-Length: " + requestContent0476.length() + "\r\n" + 		// Content-length: 2603
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0476, requestHost0476, requestPort0476, requestHeader0476, requestContent0476.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0476 = null;		// support garbage collector to reduce memory
		requestContent0476 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/XML", header text fragment = [verification disabled], recorded content size = 1447
		// content test algorithm: search text
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/XML", null, "parameter category='profile' name='replaceMissingCompanion'");		// Test [476] <- Index 476
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [477] <- WEB ADMIN Index 523 ---
		String requestProt0477 = "http";
		String requestHost0477 = "jsonp.moatads.com";
		int    requestPort0477 = 80;
		String requestFile0477 = "/ocr/TURNER_FREEWHEEL2/level3/g60139-1723293" +
				"?t=2016924131";
		String requestHeader0477 = "GET " + requestFile0477 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jsonp.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0477, requestHost0477, requestPort0477, requestHeader0477, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0477 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 307, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: none - no content check
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {307}, null, null, null);		// Test [477] <- Index 477
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [478] <- WEB ADMIN Index 524 ---
		String requestProt0478 = "http";
		String requestHost0478 = "bea4.cnn.com";
		int    requestPort0478 = 80;
		String requestFile0478 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=17" +
				"&ord=1477307125075";
		String requestHeader0478 = "GET " + requestFile0478 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0478, requestHost0478, requestPort0478, requestHeader0478, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0478 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [478] <- Index 478
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [479] <- WEB ADMIN Index 525 ---
		String requestProt0479 = "http";
		String requestHost0479 = "bea4.cnn.com";
		int    requestPort0479 = 80;
		String requestFile0479 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=18" +
				"&ord=1477307125075";
		String requestHeader0479 = "GET " + requestFile0479 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0479, requestHost0479, requestPort0479, requestHeader0479, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0479 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [479] <- Index 479
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [480] <- WEB ADMIN Index 526 ---
		String requestProt0480 = "http";
		String requestHost0480 = "bea4.cnn.com";
		int    requestPort0480 = 80;
		String requestFile0480 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=10";
		String requestHeader0480 = "GET " + requestFile0480 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0480, requestHost0480, requestPort0480, requestHeader0480, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0480 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [480] <- Index 480
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_23 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_24.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_24(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 25 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [481] <- WEB ADMIN Index 527 ---
		String requestProt0481 = "http";
		String requestHost0481 = "video.moatads.com";
		int    requestPort0481 = 80;
		String requestFile0481 = "/pixel.gif" +
				"?e=17" +
				"&i=FREEWHEEL1" +
				"&cm=7" +
				"&bq=8" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&m=0" +
				"&ar=b911905-clean" +
				"&q=2" +
				"&cb=0" +
				"&cu=1477307125075" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&em=0" +
				"&en=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&qs=1" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatCCFWNID=48804%3A-" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&fd=1" +
				"&ac=1" +
				"&it=500" +
				"&fs=69222" +
				"&na=669053217" +
				"&cs=0";
		String requestHeader0481 = "GET " + requestFile0481 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0481, requestHost0481, requestPort0481, requestHeader0481, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0481 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [481] <- Index 481
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [482] <- WEB ADMIN Index 528 ---
		String requestProt0482 = "http";
		String requestHost0482 = "364bf52c.mpstat.us";
		int    requestPort0482 = 80;
		String requestFile0482 = "/";
		String requestContent0482 = 
				requestFileCache.readFile(getSymmetricEncryptContext(), "longTest_RequestContent0482.txt").getFileDataAsString();		// note: consider duplicated definition of this file name near end of the load test program - used for ZIP-dialogue in Project Navigator
		String requestHeader0482 = "POST " + requestFile0482 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: 364bf52c.mpstat.us\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"Upgrade-Insecure-Requests: 1\r\n" + 
				"Content-Type: application/x-www-form-urlencoded\r\n" + 
				"Content-Length: " + requestContent0482.length() + "\r\n" + 		// Content-Length: 30991
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0482, requestHost0482, requestPort0482, requestHeader0482, requestContent0482.getBytes(), requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");
		if (debugLoops)
		{
			if (Lib.isAsciiContent(testURL.getRequestContent(), 256))
				log(">>> " + new String(testURL.getRequestContent()));
			else
				log(">>> [binary data]");
		}

		testURL.execute(performanceData);
		requestHeader0482 = null;		// support garbage collector to reduce memory
		requestContent0482 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 204, content type = [verification disabled], header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {204}, null, null, 0, 5);		// Test [482] <- Index 482
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [483] <- WEB ADMIN Index 529 ---
		String requestProt0483 = "http";
		String requestHost0483 = "jsonp.moatads.com";
		int    requestPort0483 = 80;
		String requestFile0483 = "/empty.js";
		String requestHeader0483 = "GET " + requestFile0483 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: jsonp.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0483, requestHost0483, requestPort0483, requestHeader0483, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0483 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "APPLICATION/X-JAVASCRIPT", header text fragment = [verification disabled], recorded content size = 20
		// content test algorithm: check size +/- 5%, defined content size = 20
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "APPLICATION/X-JAVASCRIPT", null, 20, 5);		// Test [483] <- Index 483
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [484] <- WEB ADMIN Index 530 ---
		String requestProt0484 = "http";
		String requestHost0484 = "video.moatads.com";
		int    requestPort0484 = 80;
		String requestFile0484 = "/pixel.gif" +
				"?e=0" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=http%3A%2F%2Fz.cdn.turner.com%2Fxslo%2Fcvp%2Fassets%2Fcontainer%2F2.0.4.0%2Fcvp_main_container.swf" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=0" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&cu=1477307125075" +
				"&m=403" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=252" +
				"&lb=6278" +
				"&le=1" +
				"&ch=1" +
				"&as=0" +
				"&ag=6" +
				"&an=0" +
				"&gf=6" +
				"&gg=0" +
				"&ez=1" +
				"&aj=1" +
				"&pg=100" +
				"&pf=0" +
				"&ib=0" +
				"&cc=0" +
				"&bw=6" +
				"&bx=0" +
				"&undefined=1" +
				"&dj=1" +
				"&em=0" +
				"&en=0" +
				"&bu=0" +
				"&cd=0" +
				"&ah=0" +
				"&am=0" +
				"&dq=0" +
				"&dr=0" +
				"&ds=0" +
				"&dt=0" +
				"&hc=0" +
				"&er=6" +
				"&es=0" +
				"&eu=6" +
				"&ev=0" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&eb=1" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=1722635691" +
				"&cs=0";
		String requestHeader0484 = "GET " + requestFile0484 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0484, requestHost0484, requestPort0484, requestHeader0484, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0484 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [484] <- Index 484
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [485] <- WEB ADMIN Index 531 ---
		String requestProt0485 = "http";
		String requestHost0485 = "video.moatads.com";
		int    requestPort0485 = 80;
		String requestFile0485 = "/pixel.gif" +
				"?e=29" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=1" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&cu=1477307125075" +
				"&m=416" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=252" +
				"&lb=6278" +
				"&le=1" +
				"&ch=1" +
				"&as=0" +
				"&ag=6" +
				"&an=6" +
				"&gf=6" +
				"&gg=6" +
				"&ez=1" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&cc=0" +
				"&bw=6" +
				"&bx=6" +
				"&undefined=1" +
				"&dj=1" +
				"&em=0" +
				"&en=0" +
				"&bu=220" +
				"&cd=0" +
				"&ah=220" +
				"&am=0" +
				"&dq=220" +
				"&dr=0" +
				"&ds=220" +
				"&dt=0" +
				"&hc=0" +
				"&er=6" +
				"&es=6" +
				"&eu=6" +
				"&ev=6" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=16803" +
				"&ef=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=190096049" +
				"&cs=0";
		String requestHeader0485 = "GET " + requestFile0485 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0485, requestHost0485, requestPort0485, requestHeader0485, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0485 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [485] <- Index 485
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [486] <- WEB ADMIN Index 532 ---
		String requestProt0486 = "http";
		String requestHost0486 = "bea4.cnn.com";
		int    requestPort0486 = 80;
		String requestFile0486 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=11" +
				"&ord=1477307125075";
		String requestHeader0486 = "GET " + requestFile0486 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0486, requestHost0486, requestPort0486, requestHeader0486, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0486 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [486] <- Index 486
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [487] <- WEB ADMIN Index 533 ---
		String requestProt0487 = "http";
		String requestHost0487 = "bea4.cnn.com";
		int    requestPort0487 = 80;
		String requestFile0487 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=14";
		String requestHeader0487 = "GET " + requestFile0487 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0487, requestHost0487, requestPort0487, requestHeader0487, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0487 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [487] <- Index 487
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [488] <- WEB ADMIN Index 534 ---
		String requestProt0488 = "http";
		String requestHost0488 = "video.moatads.com";
		int    requestPort0488 = 80;
		String requestFile0488 = "/pixel.gif" +
				"?e=5" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=2" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&cu=1477307125075" +
				"&m=1485" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=252" +
				"&lb=6278" +
				"&le=1" +
				"&lf=483" +
				"&lg=0" +
				"&lh=394" +
				"&ch=1" +
				"&as=1" +
				"&ag=1084" +
				"&an=6" +
				"&gi=1" +
				"&gf=1084" +
				"&gg=6" +
				"&ez=1" +
				"&kw=1262" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&cc=1" +
				"&bw=1083" +
				"&bx=6" +
				"&undefined=1" +
				"&jz=1262" +
				"&dj=1" +
				"&dx=1" +
				"&em=0" +
				"&en=0" +
				"&bu=1289" +
				"&cd=220" +
				"&ah=1289" +
				"&am=220" +
				"&dq=1289" +
				"&dr=220" +
				"&ds=1289" +
				"&dt=220" +
				"&hc=0" +
				"&er=1084" +
				"&es=6" +
				"&eu=1084" +
				"&ev=6" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=16803" +
				"&ef=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=980866679" +
				"&cs=0";
		String requestHeader0488 = "GET " + requestFile0488 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0488, requestHost0488, requestPort0488, requestHeader0488, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0488 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [488] <- Index 488
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [489] <- WEB ADMIN Index 535 ---
		String requestProt0489 = "http";
		String requestHost0489 = "video.moatads.com";
		int    requestPort0489 = 80;
		String requestFile0489 = "/pixel.gif" +
				"?e=37" +
				"&q=0" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=3" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&cu=1477307125075" +
				"&m=1500" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=252" +
				"&lb=6278" +
				"&le=1" +
				"&lf=483" +
				"&lg=0" +
				"&lh=394" +
				"&ch=1" +
				"&as=1" +
				"&ag=1084" +
				"&an=1084" +
				"&gi=1" +
				"&gf=1084" +
				"&gg=1084" +
				"&ez=1" +
				"&kw=1262" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&cc=1" +
				"&bw=1083" +
				"&bx=1083" +
				"&undefined=1" +
				"&jz=1262" +
				"&dj=1" +
				"&dx=1" +
				"&em=0" +
				"&en=0" +
				"&bu=1304" +
				"&cd=1289" +
				"&ah=1304" +
				"&am=1289" +
				"&dq=1304" +
				"&dr=1289" +
				"&ds=1304" +
				"&dt=1289" +
				"&hc=0" +
				"&er=1084" +
				"&es=1084" +
				"&eu=1084" +
				"&ev=1084" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=16803" +
				"&ef=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=1460734129" +
				"&cs=0";
		String requestHeader0489 = "GET " + requestFile0489 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0489, requestHost0489, requestPort0489, requestHeader0489, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0489 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [489] <- Index 489
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [490] <- WEB ADMIN Index 536 ---
		String requestProt0490 = "https";
		String requestHost0490 = "ad.doubleclick.net";
		int    requestPort0490 = 443;
		String requestFile0490 = "/ddm/activity/dc_oe=ChMI1KqX7qXzzwIVjyByCh1g_g2tEAAYACDp9r4j;met=1;&timestamp=1477307128549;eid1=871060;ecn1=1;etm1=0;eid2=2;ecn2=1;etm2=10;";
		String requestHeader0490 = "GET " + requestFile0490 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ad.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0490, requestHost0490, requestPort0490, requestHeader0490, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0490 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [490] <- Index 490
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [491] <- WEB ADMIN Index 537 ---
		String requestProt0491 = "http";
		String requestHost0491 = "video.moatads.com";
		int    requestPort0491 = 80;
		String requestFile0491 = "/pixel.gif" +
				"?e=5" +
				"&q=1" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=4" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&cu=1477307125075" +
				"&m=2578" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=252" +
				"&lb=6278" +
				"&le=1" +
				"&lf=483" +
				"&lg=0" +
				"&lh=394" +
				"&ch=1" +
				"&as=1" +
				"&ag=2171" +
				"&an=1084" +
				"&gi=1" +
				"&gf=2171" +
				"&gg=1084" +
				"&ez=1" +
				"&ck=2171" +
				"&kw=1262" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&ka=1" +
				"&kb=1" +
				"&cc=1" +
				"&bw=2170" +
				"&bx=1083" +
				"&undefined=1" +
				"&ci=2170" +
				"&jz=1262" +
				"&dj=1" +
				"&dx=1" +
				"&em=0" +
				"&en=0" +
				"&bu=2382" +
				"&cd=1304" +
				"&ah=2382" +
				"&am=1304" +
				"&dq=2382" +
				"&dr=1304" +
				"&ds=2382" +
				"&dt=1304" +
				"&hc=0" +
				"&er=2171" +
				"&es=1084" +
				"&eu=2171" +
				"&ev=1084" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=16803" +
				"&ef=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=391770842" +
				"&cs=0";
		String requestHeader0491 = "GET " + requestFile0491 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0491, requestHost0491, requestPort0491, requestHeader0491, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0491 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [491] <- Index 491
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [492] <- WEB ADMIN Index 538 ---
		String requestProt0492 = "http";
		String requestHost0492 = "bea4.cnn.com";
		int    requestPort0492 = 80;
		String requestFile0492 = "/ad/l/1" +
				"?metr=127" +
				"&ct=8" +
				"&et=i" +
				"&cn=firstQuartile" +
				"&s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=";
		String requestHeader0492 = "GET " + requestFile0492 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0492, requestHost0492, requestPort0492, requestHeader0492, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0492 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [492] <- Index 492
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [493] <- WEB ADMIN Index 539 ---
		String requestProt0493 = "http";
		String requestHost0493 = "b.scorecardresearch.com";
		int    requestPort0493 = 80;
		String requestFile0493 = "/p" +
				"?c1=2" +
				"&c2=6035748" +
				"&ns_type=hidden" +
				"&ns_st_sv=4.1412.05" +
				"&ns_st_it=r" +
				"&ns_st_id=1477307124805_1" +
				"&ns_st_ec=2" +
				"&ns_st_sp=1" +
				"&ns_st_cn=1" +
				"&ns_st_ev=hb" +
				"&ns_st_po=10005" +
				"&ns_st_cl=0" +
				"&ns_st_hc=1" +
				"&ns_st_mp=streamsense" +
				"&ns_st_mv=4.1412.05" +
				"&ns_st_pn=1" +
				"&ns_st_tp=1" +
				"&ns_st_pt=10007" +
				"&ns_st_pa=10006" +
				"&ns_st_ad=1" +
				"&ns_st_ci=0" +
				"&ns_ts=1477307134812" +
				"&ns_st_bt=0" +
				"&ns_st_bp=0" +
				"&ns_st_pc=0" +
				"&ns_st_pp=0" +
				"&ns_st_br=0" +
				"&ns_st_ub=0" +
				"&ns_st_ct=va" +
				"&c3=*null" +
				"&c4=*null" +
				"&c6=*null" +
				"&c7=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn%2Fvideo%2Fplaylists%2Fnational-parks%2F" +
				"&c8=Explore%20Arch%20Rock%20in%20the%20Channel%20Islands" +
				"&c9=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn";
		String requestHeader0493 = "GET " + requestFile0493 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0493, requestHost0493, requestPort0493, requestHeader0493, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0493 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [493] <- Index 493
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [494] <- WEB ADMIN Index 540 ---
		String requestProt0494 = "http";
		String requestHost0494 = "ping.chartbeat.net";
		int    requestPort0494 = 80;
		String requestFile0494 = "/ping" +
				"?h=edition.cnn.com" +
				"&p=%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn" +
				"&u=DK-3L5D9nIqOBXmMI4" +
				"&d=edition.cnn.com" +
				"&g=37612" +
				"&g0=travel%2Cvideos%2Cvideo%2Cbra-nps-100%2Cvid-vid-vls-col%2Ccol-national-parks" +
				"&n=1" +
				"&f=00001" +
				"&c=0.25" +
				"&x=0" +
				"&m=0" +
				"&y=6278" +
				"&o=960" +
				"&w=950" +
				"&j=30" +
				"&R=1" +
				"&W=0" +
				"&I=0" +
				"&E=2" +
				"&e=2" +
				"&v=%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn" +
				"&K=657::2044::6bWDqlh_MnCrdliDC7_aqDmJ9Eq::*%5B%40id%3D%27otherCollections%27%5D%2Fdiv%5B2%5D%2Fdiv%5B2%5D%2Fdiv%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B6%5D%2Farticle%5B1%5D%2Fdiv%5B1%5D%2Fdiv%5B2%5D%2Fh3%5B1%5D%2Fa%5B1%5D::c::http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn::BypBLNI28MXBDKNTaCjFOasCg9JTq" +
				"&b=8288" +
				"&t=NkWDo8anZc3efpGDLBRQEjCiu5" +
				"&V=83" +
				"&tz=-120" +
				"&sn=2" +
				"&eM=1000" +
				"&EE=2" +
				"&_";
		String requestHeader0494 = "GET " + requestFile0494 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ping.chartbeat.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0494, requestHost0494, requestPort0494, requestHeader0494, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0494 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [494] <- Index 494
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [495] <- WEB ADMIN Index 541 ---
		String requestProt0495 = "https";
		String requestHost0495 = "ad.doubleclick.net";
		int    requestPort0495 = 443;
		String requestFile0495 = "/ddm/activity/dc_oe=ChMI1KqX7qXzzwIVjyByCh1g_g2tEAAYACDp9r4j;met=1;&timestamp=1477307138551;eid1=2;ecn1=0;etm1=10;";
		String requestHeader0495 = "GET " + requestFile0495 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: ad.doubleclick.net\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate, br\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0495, requestHost0495, requestPort0495, requestHeader0495, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0495 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 42
		// content test algorithm: check size +/- 5%, defined content size = 42
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 42, 5);		// Test [495] <- Index 495
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [496] <- WEB ADMIN Index 542 ---
		String requestProt0496 = "http";
		String requestHost0496 = "bea4.cnn.com";
		int    requestPort0496 = 80;
		String requestFile0496 = "/ad/l/1" +
				"?metr=127" +
				"&ct=7" +
				"&et=i" +
				"&cn=midPoint" +
				"&s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=";
		String requestHeader0496 = "GET " + requestFile0496 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0496, requestHost0496, requestPort0496, requestHeader0496, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0496 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [496] <- Index 496
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [497] <- WEB ADMIN Index 543 ---
		String requestProt0497 = "http";
		String requestHost0497 = "video.moatads.com";
		int    requestPort0497 = 80;
		String requestFile0497 = "/pixel.gif" +
				"?e=29" +
				"&q=2" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=8" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&cu=1477307125075" +
				"&m=15328" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=252" +
				"&lb=6278" +
				"&le=1" +
				"&lf=483" +
				"&lg=0" +
				"&lh=394" +
				"&ch=1" +
				"&as=1" +
				"&ag=14810" +
				"&an=7652" +
				"&gi=1" +
				"&gf=14810" +
				"&gg=7652" +
				"&ez=1" +
				"&ck=2171" +
				"&kw=1262" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&ka=1" +
				"&kb=1" +
				"&cc=1" +
				"&bw=14809" +
				"&bx=7651" +
				"&undefined=1" +
				"&ci=2170" +
				"&jz=1262" +
				"&dj=1" +
				"&dx=1" +
				"&em=0" +
				"&en=0" +
				"&bu=15132" +
				"&cd=7900" +
				"&ah=15132" +
				"&am=7900" +
				"&dq=15132" +
				"&dr=7900" +
				"&ds=15132" +
				"&dt=7900" +
				"&hd=1" +
				"&hl=1" +
				"&hj=1" +
				"&dh=29963" +
				"&hc=1" +
				"&er=14810" +
				"&es=7652" +
				"&eu=14810" +
				"&ev=7652" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=16803" +
				"&ek=1" +
				"&fh=7652" +
				"&fi=14810" +
				"&fj=7652" +
				"&ef=3" +
				"&eg=3" +
				"&eh=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=1308818411" +
				"&cs=0";
		String requestHeader0497 = "GET " + requestFile0497 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0497, requestHost0497, requestPort0497, requestHeader0497, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0497 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [497] <- Index 497
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [498] <- WEB ADMIN Index 544 ---
		String requestProt0498 = "http";
		String requestHost0498 = "bea4.cnn.com";
		int    requestPort0498 = 80;
		String requestFile0498 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=12" +
				"&ord=1477307125075";
		String requestHeader0498 = "GET " + requestFile0498 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0498, requestHost0498, requestPort0498, requestHeader0498, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0498 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [498] <- Index 498
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [499] <- WEB ADMIN Index 545 ---
		String requestProt0499 = "http";
		String requestHost0499 = "bea4.cnn.com";
		int    requestPort0499 = 80;
		String requestFile0499 = "/ad/l/1" +
				"?s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=" +
				"&absid=" +
				"&trigid=" +
				"&et=i" +
				"&cn=concreteEvent" +
				"&creid=15";
		String requestHeader0499 = "GET " + requestFile0499 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0499, requestHost0499, requestPort0499, requestHeader0499, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0499 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [499] <- Index 499
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [500] <- WEB ADMIN Index 546 ---
		String requestProt0500 = "http";
		String requestHost0500 = "video.moatads.com";
		int    requestPort0500 = 80;
		String requestFile0500 = "/pixel.gif" +
				"?e=5" +
				"&q=2" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=9" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&cu=1477307125075" +
				"&m=15395" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=252" +
				"&lb=6278" +
				"&le=1" +
				"&lf=483" +
				"&lg=0" +
				"&lh=394" +
				"&ch=1" +
				"&as=1" +
				"&ag=14999" +
				"&an=14810" +
				"&gi=1" +
				"&gf=14999" +
				"&gg=14810" +
				"&ez=1" +
				"&ck=2171" +
				"&kw=1262" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&ka=1" +
				"&kb=1" +
				"&cc=1" +
				"&bw=14998" +
				"&bx=14809" +
				"&undefined=1" +
				"&ci=2170" +
				"&jz=1262" +
				"&dj=1" +
				"&dx=1" +
				"&nc=1" +
				"&em=0" +
				"&en=0" +
				"&bu=15199" +
				"&cd=15132" +
				"&ah=15199" +
				"&am=15132" +
				"&dq=15199" +
				"&dr=15132" +
				"&ds=15199" +
				"&dt=15132" +
				"&hd=1" +
				"&hl=1" +
				"&hj=1" +
				"&dh=29963" +
				"&hc=1" +
				"&er=14999" +
				"&es=14810" +
				"&eu=14999" +
				"&ev=14810" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=16803" +
				"&ek=1" +
				"&fh=7652" +
				"&fi=14999" +
				"&fj=14810" +
				"&ef=3" +
				"&eg=3" +
				"&eh=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=138322049" +
				"&cs=0";
		String requestHeader0500 = "GET " + requestFile0500 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0500, requestHost0500, requestPort0500, requestHeader0500, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0500 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [500] <- Index 500
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_24 successful done
		return true;
	}


	/**
	 * Recorded http requests of page #1_25.
	 *
	 * @return  true:  method successful completed.
	 *          false: method/loop failed.
	 */
	boolean executePage_1_25(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		// ... continuing page #1 (fragment 26 of 26)
		// ------------------------------------------



		// --- HTTP REQUEST: Test [501] <- WEB ADMIN Index 547 ---
		String requestProt0501 = "http";
		String requestHost0501 = "video.moatads.com";
		int    requestPort0501 = 80;
		String requestFile0501 = "/pixel.gif" +
				"?e=37" +
				"&q=1" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=10" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&cu=1477307125075" +
				"&m=15407" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=252" +
				"&lb=6278" +
				"&le=1" +
				"&lf=483" +
				"&lg=0" +
				"&lh=394" +
				"&ch=1" +
				"&as=1" +
				"&ag=14999" +
				"&an=14999" +
				"&gi=1" +
				"&gf=14999" +
				"&gg=14999" +
				"&ez=1" +
				"&ck=2171" +
				"&kw=1262" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&ka=1" +
				"&kb=1" +
				"&cc=1" +
				"&bw=14998" +
				"&bx=14998" +
				"&undefined=1" +
				"&ci=2170" +
				"&jz=1262" +
				"&dj=1" +
				"&dx=1" +
				"&nc=1" +
				"&em=0" +
				"&en=0" +
				"&bu=15210" +
				"&cd=15199" +
				"&ah=15210" +
				"&am=15199" +
				"&dq=15210" +
				"&dr=15199" +
				"&ds=15210" +
				"&dt=15199" +
				"&hd=1" +
				"&hl=1" +
				"&hj=1" +
				"&dh=29963" +
				"&hc=1" +
				"&er=14999" +
				"&es=14999" +
				"&eu=14999" +
				"&ev=14999" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=16803" +
				"&ek=1" +
				"&fh=7652" +
				"&fi=14999" +
				"&fj=14999" +
				"&ef=3" +
				"&eg=3" +
				"&eh=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=1372915726" +
				"&cs=0";
		String requestHeader0501 = "GET " + requestFile0501 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0501, requestHost0501, requestPort0501, requestHeader0501, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0501 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [501] <- Index 501
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [502] <- WEB ADMIN Index 548 ---
		String requestProt0502 = "http";
		String requestHost0502 = "b.scorecardresearch.com";
		int    requestPort0502 = 80;
		String requestFile0502 = "/p" +
				"?c1=2" +
				"&c2=6035748" +
				"&ns_type=hidden" +
				"&ns_st_sv=4.1412.05" +
				"&ns_st_it=r" +
				"&ns_st_id=1477307124805_1" +
				"&ns_st_ec=2" +
				"&ns_st_sp=1" +
				"&ns_st_cn=1" +
				"&ns_st_ev=hb" +
				"&ns_st_po=20014" +
				"&ns_st_cl=0" +
				"&ns_st_hc=2" +
				"&ns_st_mp=streamsense" +
				"&ns_st_mv=4.1412.05" +
				"&ns_st_pn=1" +
				"&ns_st_tp=1" +
				"&ns_st_pt=20014" +
				"&ns_st_pa=20014" +
				"&ns_st_ad=1" +
				"&ns_st_ci=0" +
				"&ns_ts=1477307144821" +
				"&ns_st_bt=0" +
				"&ns_st_bp=0" +
				"&ns_st_pc=0" +
				"&ns_st_pp=0" +
				"&ns_st_br=0" +
				"&ns_st_ub=0" +
				"&ns_st_ct=va" +
				"&c3=*null" +
				"&c4=*null" +
				"&c6=*null" +
				"&c7=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Ftravel%2F2016%2F06%2F22%2Fkayaking-channel-islands-national-parks-nccorig.cnn%2Fvideo%2Fplaylists%2Fnational-parks%2F" +
				"&c8=Explore%20Arch%20Rock%20in%20the%20Channel%20Islands" +
				"&c9=http%3A%2F%2Fedition.cnn.com%2Fvideos%2Fworld%2F2016%2F10%2F23%2Fbermuda-triangle-clouds-weather-science-channel-jnd-orig-vstan.cnn";
		String requestHeader0502 = "GET " + requestFile0502 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: b.scorecardresearch.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0502, requestHost0502, requestPort0502, requestHeader0502, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0502 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [502] <- Index 502
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [503] <- WEB ADMIN Index 549 ---
		String requestProt0503 = "http";
		String requestHost0503 = "bea4.cnn.com";
		int    requestPort0503 = 80;
		String requestFile0503 = "/ad/l/1" +
				"?metr=127" +
				"&ct=7" +
				"&et=i" +
				"&cn=thirdQuartile" +
				"&s=c009" +
				"&n=48804%3B48804%3B372496%3B375600%3B379619%3B381963" +
				"&t=1477307123138144004" +
				"&f=" +
				"&r=48804" +
				"&adid=17231483" +
				"&reid=6063203" +
				"&arid=0" +
				"&iw=" +
				"&uxnw=" +
				"&uxss=" +
				"&uxct=";
		String requestHeader0503 = "GET " + requestFile0503 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: bea4.cnn.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0503, requestHost0503, requestPort0503, requestHeader0503, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0503 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "TEXT/HTML", header text fragment = [verification disabled], recorded content size = 0
		// content test algorithm: check size +/- 5%, defined content size = 0
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "TEXT/HTML", null, 0, 5);		// Test [503] <- Index 503
		if (!urlCallPassed)
		{
			// failure - dump wrong content to thread log and abort current loop
			terminateFailedUser(testURL);		// set the user to be terminated at end of loop ? - only performed if the URL call has marked before to support that !
			endOfExecuteLoop(false, testURL, threadStep, loopPluginContext);
			return false;
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated





		// --- HTTP REQUEST: Test [504] <- WEB ADMIN Index 550 ---
		String requestProt0504 = "http";
		String requestHost0504 = "video.moatads.com";
		int    requestPort0504 = 80;
		String requestFile0504 = "/pixel.gif" +
				"?e=29" +
				"&q=3" +
				"&lo=0" +
				"&dc=5" +
				"&qs=1" +
				"&ak=-" +
				"&i=FREEWHEEL1" +
				"&ud=1" +
				"&qm=-120" +
				"&qn=6OZw%3DoHB%2CEF%3FKC1I%3Cq.bWoCSV2W0Su*TDXlCfX2iR2%25(GyHN%3DI(%2C%3Ba15lK1t!9Zp%5B)1xfq_GUKB%7BTntTL%3Fwb%3BTjtR%23Rzix7j%3Eimfv)*pB%231%3CFZ%40V9t%60)%26k%3Dzs1w4V%40bL~1gxNT%5DGTtg%2F%5B*7kc%3C%3EZ%3Eh%24)AJ%3D(%5Ej3VYUex8k%40%22%7Cu7pRB%5Bz%26(K%2BxP%7CD7g%26kyM8F4%2BKCCRP)M*%60%40P%23nEd%5EKC)Lp%22%3FjyUc!YDV%2Fu!%3CFo%40NFdS97evb%5Dmc9!x%5EQ%5E0o(%2BIb%7Cj8o%3FJei%2F*%5EJqD(aD%5BSoV3Zt5N4kTt%2Bx%7Co8e%40GW*_)9LI%22mChkhMmf3%2B%26YaU51%40%40HHzt%24bV%2F.4bIu%40vv%7DqB%3DmfV%7DDXwJd%5E%7CXoNFodK0p)%22wbSR%5Di3U1Il9OpPP%3DK%25.ye%7Bzb%26axkr%40%3Fe3%2Fh%7C%3FVKw3qx7jhM%5EIz%5D%60(%5BGA.%3A6%7Cq%3BighO%5B.%22%24b_o%3Ftb%25%24(%3DNqUcRe%2Ba%2FA" +
				"&qp=01000" +
				"&qq=011100000000" +
				"&qr=0" +
				"&qt=0" +
				"&bq=8" +
				"&g=11" +
				"&h=349" +
				"&w=620" +
				"&cm=7" +
				"&f=0" +
				"&j=http%3A%2F%2Fedition.cnn.com" +
				"&o=3" +
				"&t=1477307125075" +
				"&de=762704398951" +
				"&cu=1477307125075" +
				"&m=22460" +
				"&ar=b911905-clean" +
				"&cb=0" +
				"&ll=4" +
				"&ln=0" +
				"&r=23.0.0" +
				"&dl=1" +
				"&dm=1000" +
				"&dn=107" +
				"&gh=1" +
				"&qa=1920" +
				"&qb=1080" +
				"&qi=1920" +
				"&qj=1057" +
				"&qf=960" +
				"&qe=950" +
				"&qh=960" +
				"&qg=1057" +
				"&lk=252" +
				"&lb=6278" +
				"&le=1" +
				"&lf=483" +
				"&lg=0" +
				"&lh=394" +
				"&ch=1" +
				"&as=1" +
				"&ag=22055" +
				"&an=14999" +
				"&gi=1" +
				"&gf=22055" +
				"&gg=14999" +
				"&ez=1" +
				"&ck=2171" +
				"&kw=1262" +
				"&aj=1" +
				"&pg=100" +
				"&pf=100" +
				"&ib=0" +
				"&dw=1" +
				"&ka=1" +
				"&kb=1" +
				"&cc=1" +
				"&bw=22054" +
				"&bx=14998" +
				"&undefined=1" +
				"&ci=2170" +
				"&jz=1262" +
				"&dj=1" +
				"&dx=1" +
				"&nc=1" +
				"&em=0" +
				"&en=0" +
				"&bu=22263" +
				"&cd=15210" +
				"&ah=22263" +
				"&am=15210" +
				"&dq=22263" +
				"&dr=15210" +
				"&ds=22263" +
				"&dt=15210" +
				"&hd=1" +
				"&hl=1" +
				"&hj=1" +
				"&dh=29963" +
				"&hc=1" +
				"&er=22055" +
				"&es=14999" +
				"&eu=22055" +
				"&ev=14999" +
				"&et=1" +
				"&dp=0" +
				"&dz=1" +
				"&du=25" +
				"&eb=1" +
				"&ec=16803" +
				"&ek=1" +
				"&fh=7652" +
				"&fi=22055" +
				"&fj=14999" +
				"&ef=3" +
				"&eg=3" +
				"&eh=3" +
				"&ei=3" +
				"&cl=0" +
				"&au=-1" +
				"&av=-1" +
				"&by=-1" +
				"&at=0" +
				"&d=679499%3A17231404%3A17231482%3A2422634" +
				"&zMoatOptimize=-" +
				"&bo=g60139" +
				"&bd=1723293" +
				"&zMoatDomain=edition.cnn.com" +
				"&zMoatSubdomain=edition.cnn.com" +
				"&zMoatAUID=-" +
				"&zMoatAFWNID=-" +
				"&zMoatSEID=Not%20Identified" +
				"&zMoatASID=99569724" +
				"&zMoatFWNID=48804" +
				"&zMoatFWPT=-" +
				"&zMoatAssetID=-" +
				"&zMoatDUR=29" +
				"&bo2=g60139" +
				"&bd2=1723293" +
				"&zMoatParamMethod=creativeXML" +
				"&zMoatParam=48804%3B679499%3B17231404%3B17231482%3B2422634%3B%3B99569724%3Bg60139%3B1723293%3B29%3B48804" +
				"&ab=0" +
				"&ac=1" +
				"&fd=1" +
				"&zMoatDGV=1" +
				"&zMoatDADV=0.5" +
				"&zMoatDACTV=0.5" +
				"&it=500" +
				"&fz=1" +
				"&fs=69222" +
				"&na=765446849" +
				"&cs=0";
		String requestHeader0504 = "GET " + requestFile0504 + " HTTP/" + httpProtocolVersion + "\r\n" + 
				"Host: video.moatads.com\r\n" + 
				"User-Agent: " + USER_AGENT_1 + "\r\n" + 
				"Accept: */*\r\n" + 
				"Accept-Language: en-GB,en;q=0.5\r\n" + 
				"Accept-Encoding: gzip, deflate\r\n" + 
				"Connection: Keep-Alive\r\n" + 
				"\r\n";

		// execute request
		testURL = new HttpTestURL(requestProt0504, requestHost0504, requestPort0504, requestHeader0504, null, requestTimeout, socketPool, cookieHandler, httpLogVectorObject);
		testURL.setDNSContext(userDNSContext);
		testURL.setFailureActionType(HttpTestURL.FAILURE_ACTION_IGNORE_ERROR);
		performanceData.setInfoText(threadStep, testURL, -1);		// hint: param #3 is the maximum acceptable response time in milliseconds (-1 = not configured)
		log("[" + threadStep + "] " + testURL.getRequestInfoText() + " ...");

		testURL.execute(performanceData);
		requestHeader0504 = null;		// support garbage collector to reduce memory
		log("   " + testURL.getShortResultText());

		// verify response: status code = 200, content type = "IMAGE/GIF", header text fragment = [verification disabled], recorded content size = 43
		// content test algorithm: check size +/- 5%, defined content size = 43
		urlCallPassed = httpResponseOk(testURL, threadStep, new int[] {200}, "IMAGE/GIF", null, 43, 5);		// Test [504] <- Index 504
		if (!urlCallPassed)
		{
			// failure but continue current loop: mark pending transactions as defective and dump URL content to thread log
			transactionHandler.setPendingTransactionsAsDefective();
			log(testURL);
		}
		if (debugContent && urlCallPassed)
			log(testURL);

		// update performance data if url call passed
		if (urlCallPassed)
			threadStep = setPassed(performanceData, threadStep, testURL);
		else
			threadStep = threadStep + 1;		// url call failed - performance data already updated



		// all http requests of page #1_25 successful done
		return true;
	}



	boolean synchResponsesParallelRequestsPage_1(int totalLoopCounter, LoadtestPluginContext loopPluginContext, InnerLoopContext innerLoopContext, Object httpLogVectorObject) throws Exception
	{
		int lastThreadStepInMainThread = threadStep;		// save last executed thread step
		
		// wait for the response of all parallel requests
		threadStep = pageThreadHandler.getLastThreadStep();
		pageThreadHandler.waitForSynch();
		log("Page 1 Time = " + pageThreadHandler.getPageTime() + " ms");
		
		if (!writeHttpAsyncResponseTabOutput_1(loopPluginContext,lastThreadStepInMainThread))
			return false;
		
		// all done
		threadStep = lastThreadStepInMainThread;		// restore last executed thread step
		return true;		// end of asynch response checks for this page
	}
	
	
	private boolean writeHttpAsyncResponseTabOutput_1 (LoadtestPluginContext loopPluginContext, int lastThreadStepInMainThread ) throws Exception
	{
		return true;		// end of asynch response checks for this page
	}



	/**
	 * implement GetRealTimeUserInputFieldsInterface: get the definition and the value of all real-time user input fields.
	 */
	public ArrayList<RealTimeUserInputField> getRealTimeUserInputFields()
	{
		try
		{
			ArrayList<RealTimeUserInputField> realTimeUserInputFieldList = new ArrayList<RealTimeUserInputField>();
			return realTimeUserInputFieldList;
		}
		catch (Exception e)
		{
			log(e);
			return null;
		}
	}



	/**
	 * implement ThreadStepInterface: get the current execution step (current URL call or page break) of a simulated user.
	 */
	public int getExecutionStep()
	{
		return threadStep;
	}



	/**
	 * implement SetThreadStepInterface: set the current execution step (current URL call or page break) of a simulated user.
	 */
	public void setExecutionStep(int threadStep)
	{
		this.threadStep = threadStep;
	}



	/**
	 * implement SSLSessionCacheStatisticInterface: get statistic data about the SSL session cache behavior of a simulated user.
	 */
	public SSLSessionCacheStatistic getSSLSessionCacheStatistic()
	{
		return sslStatistic;
	}



	/**
	 * implement VaryingTestDurationInterface: support to extend or to reduce the planned test duration.
	 */
	public int getPlannedTestDuration()
	{
		return plannedTestDuration;
	}
	
	public void setExtendTestDuration(int deltaSeconds)
	{
		if (plannedTestDuration == 0)
		{
			plannedTestDuration = deltaSeconds;		// the old planned test duration was unlimited but is now limited
			return;
		}
		if (deltaSeconds == 0)
		{
			plannedTestDuration = 0;		// the new planned test duration is now unlimited
			return;
		}
		plannedTestDuration = plannedTestDuration + deltaSeconds;
	}



	/**
	 * implement SuspendResumeInterface: support to suspend and to resume the test execution.
	 */
	public int getPlannedStartupDelay()
	{
		return plannedStartupDelay;
	}
	
	public void setUserResumeStartWaitDelay(int millis)
	{
		userResumeStartWaitDelay = millis;
	}



	/**
	 * implement VaryingLoadInterface: support to decrement the number of simulated users at runtime.
	 */
	public void setDecrementEndOfLoopFlag(boolean decrementEndOfLoopFlag)
	{
		this.decrementEndOfLoopFlag = decrementEndOfLoopFlag;
	}

	public boolean isDecrementEndOfLoopFlag()
	{
		return decrementEndOfLoopFlag;
	}



	/**
	 * internal method: execute the loops for one simulated user as a thread.
	 * controls the thread and displays the (thread-)log if one loop has been completed.
	 */
	public void run()
	{
		// user terminated by inline script, at start of user ?
		if (isTerminateUser())
		{
			System.out.println("# --- thread " + Thread.currentThread().getName() + " aborted --- " + ZoneTime.dateToShortString() + " ---");
			return;
		}
		try
		{
			while (true)
			{
				threadStep = ThreadStepInterface.THREAD_NO_STEP;
				clearLog();
				
				// execute loop
				log("--- loop started --- " + ZoneTime.dateToShortString() + " ---");
				boolean loopPassed = this.execute(totalLoopCounter.getAndIncrement());
				performanceData.addUserTransactionMeasuredSamples(transactionHandler.getPendingTransactions());
				performanceData.addUserTransactionNotExecutedSamples(transactionHandler.getNotExecutedTransactions());
				transactionHandler.resetTransactions();
				performanceData.addSocktPoolStatistic(socketPool);
				socketPool.closePool();
				performanceData.addSSLCacheStatistic(sslStatistic.getSSLSessionCacheStatisticResult());
				sslStatistic.reset();
				
				// eof of input file ?
				if (abortedByEofInputFile())
					return;		// endOfRun() not called in such a case
				
				// check loop result
				String remainingLoopInfo = "";
				if (checkLoopCount)
					remainingLoopInfo = " [remaining loops = " + (remainingLoops - 1) + "]";
				if (loopPassed)
				{
					performanceData.addPassedLoop();
					log("--- loop passed ---  " + ZoneTime.dateToShortString() + " ---" + remainingLoopInfo);
				}
				else
				{
					performanceData.addFailedLoop();
					log("--- loop failed ---  " + ZoneTime.dateToShortString() + " ---" + remainingLoopInfo);
				}
				threadStep = ThreadStepInterface.THREAD_NO_STEP;
				
				// display thread log to standard output
				if (debugLoops || (debugFailedLoops && (!loopPassed)))
				{
					synchronized (dumpLock)
					{
						dumpLog(System.out);				// full log
					}
				}
				
				// check if max loops reached
				if (checkLoopCount)
				{
					// all done ?
					remainingLoops--;
					if (remainingLoops <= 0)
					{
						endOfRun();
						return;
					}
				}
				
				// check if simulated user must be decremented
				if (decrementEndOfLoopFlag)
				{
					endOfRun();
					decrementEndOfLoopFlag = false; // reset flag for further use
					return;
				}
				
				// check if max test duration reached
				if ((plannedTestDuration > 0) && (((System.currentTimeMillis() - testDurationStart) / 1000) >= plannedTestDuration))
				{
					endOfRun();
					return;
				}
				
				// check if this specific user is terminated earlier than planned by a HTTP content verification or by a plug-in
				if (isTerminateUser())
				{
					endOfRun();
					System.out.println("# --- thread " + Thread.currentThread().getName() + " terminate failed user --- " + ZoneTime.dateToShortString() + " ---");
					return;
				}
				
				// check if load test execution is temporary suspended
				boolean wasSuspended = false;
				while (isSuspend())
				{
					wasSuspended = true;
					try { Thread.currentThread().sleep(20); } catch (InterruptedException ie) {}
					if (abortedByRemote() || abortedByEofInputFile())
					{
						endOfRun();
						return;
					}
					
					// check if max test duration reached during suspend
					if ((plannedTestDuration > 0) && (((System.currentTimeMillis() - testDurationStart) / 1000) >= plannedTestDuration))
					{
						endOfRun();
						return;
					}
				}
				// check if load test execution is resumed
				if (wasSuspended)
				{
					try { sleepRemoteInterruptable(userResumeStartWaitDelay); } catch (InterruptedException ie) {}
				}
				
				// wait 20 milliseconds if loop has failed
				if (!loopPassed)
					try { Thread.currentThread().sleep(loopErrorDelay); } catch (InterruptedException ie) {}
				
				// execute next loop
				threadLoopCounter++;
			}	// end: while (true)
		}
		catch (Throwable tex)
		{
			log("*** INTERNAL ERROR / LOAD TEST ABORTED ***");
			log(tex);
			log();
			synchronized (dumpLock)
			{
				dumpLog(System.out);				// full log
				System.err.println("*** INTERNAL ERROR / LOAD TEST ABORTED ***");
				tex.printStackTrace(System.err);
				System.exit(-2);
			}
		}
		finally
		{
			// remove the reference to this load test instance and the reference to the thread that runs this instance
			try
			{
				getUserContextTable().getWriteLock().lock();
				getOwnLoadTestUserContext().setLoadTestUserFinallyEnded();
				getUserContextTable().getWriteLock().unlock();
			}
			catch (Throwable texFinal)
			{
				System.err.println("*** INTERNAL FINALLY ERROR / LOAD TEST ABORTED ***");
				texFinal.printStackTrace(System.err);
				System.exit(-2);
			}
		}
	}



	/**
	 * internal method: called when a user has completed the test-run.
	 */
	public void endOfRun()
	{
		clearLog();
		
		if (debugLoops && (getLog().size() > 0))
		{
			synchronized (dumpLock)
			{
				dumpLog(System.out);		// dump log of inline scripts and load test plug-ins which are executed at end of user
			}
		}
	}



	/**
	 * Main program. Starts the test and waits until all have been done.
	 */
	public static void main(String[] args)
	{
		// check command line argument -h or -help
		if ((ParseArgs.hasOption(args, "-h")) || (ParseArgs.hasOption(args, "-help")))
		{
			System.out.println();
			System.out.println("Help - Proxy Sniffer Load Test Program:");
			System.out.println();
			System.out.println("-u <number>              ->> required argument: number of concurrent users");
			System.out.println("-d <seconds>             ->> required argument: planned test duration in seconds (default: 30, 0 = unlimited)");
			System.out.println("-t <seconds>             ->> required argument: request timeout per url in seconds");
			System.out.println();
			System.out.println("-tconnect <seconds>      ->> TCP/IP socket connect timeout in seconds (default: use value of -t <seconds>)");
			System.out.println();
			System.out.println("-sdelay <milliseconds>   ->> startup delay time between concurrent users in milliseconds (default: 200)");
			System.out.println("-mtpu <number>           ->> maximum number of parallel threads per user (default: " + MAX_PARALLEL_THREADS_PER_USER + ")");
			System.out.println("-maxloops <number>       ->> maximum number of loops per user (default: 0 = unlimited)");
			System.out.println("-downlink <kbps>         ->> maximum downlink network bandwidth per user in kilobits per second (default: 0 = unlimited)");
			System.out.println("-uplink <kbps>           ->> maximum uplink network bandwidth per user in kilobits per second (default: 0 = unlimited)");
			System.out.println("-multihomed <filename>   ->> use serveral client ip addresses - file format: <addr1>, <addr2>, ... (all on the same line)");
			System.out.println("-sampling <seconds>      ->> statistic sampling interval in seconds (default: 15)");
			System.out.println("-percpage <percent>      ->> additional sampling rate per web page call in percent (default: 100)");
			System.out.println("-percurl <percent>       ->> additional sampling rate per url call in percent (default: 0)");
			System.out.println("-percurlopt <level>      ->> extended sampling level per url call, see application reference manual (default: 0 = disabled)");
			System.out.println("-maxerrsnap <number>     ->> maximum number of error snapshots per url (default: 0 = unlimited)");
			System.out.println("-maxerrmem <megabytes>   ->> maximum size of memory in megabytes which can be used for error snapshots (default: 20, -1 = unlimited)");
			System.out.println("-nosdelayCluster         ->> apply startup delay time between concurrent users per exec agent, but not per cluster job (default: apply per cluster job)");
			System.out.println("-setuseragent \"<text>\"   ->> replace the recorded value of the HTTP request header field User-Agent with a new value");
			System.out.println("-collect <host>[:<port>] ->> collect additional data from external measuring agents (data collectors)");
			System.out.println("-res <filename>          ->> overrides the default name of the binary output file");
			System.out.println("-nores                   ->> disables to create the binary output file");
			System.out.println();
			System.out.println("-ssl <version>           ->> set SSL version: possible options are \"all\" (default), \"v3\", \"tls\", \"tls11\" or \"tls12\"");
			System.out.println("-sslcache <seconds>      ->> timeout of user-related SSL session cache (default: 300, 0 = cache disabled)");
			System.out.println("-sslrandom <type>        ->> set the type of the random generator used for SSL handshakes: possible options are \"fast\", \"iaik\" (default) or \"java\"");
			System.out.println("-sslcmode                ->> apply SSL/HTTPS compatibility workarounds for deficient SSL servers");
			System.out.println("-ecc                     ->> enable support of elliptic curve cryptography (ECC)");
			System.out.println("-nosni                   ->> disable support of server name indication (SNI)");
			System.out.println("-snicritical             ->> set the TLS SNI extension as critical (default: non-critical)");
			System.out.println("-iaikLast                ->> adds the IAIK security provider at the last position (instead of default: IAIK at first position)");
			System.out.println();
			System.out.println("-dnssrv <IP-1>[,IP-N])   ->> use specific DNS server(s) to resolve DNS host names (default: use OS to resolve host names)");
			System.out.println("-dnshosts <filename>     ->> use specific DNS hosts file (default: use OS to resolve host names)");
			System.out.println("-dnstranslation <filename> ->> use a DNS translation file that converts DNS names. It might be needed to disable TLS SNI if this option is used");
			System.out.println("-dnsenattl               ->> enable consideration of DNS TTL by using the received TTL-values from the DNS Server(s) (default: TTL disabled)");
			System.out.println("-dnsfixttl <seconds>     ->> enable DNS TTL by using a fixed TTL-value of seconds for all DNS resolves");
			System.out.println("-dnsperloop              ->> perform new DNS resolves for each executed loop. All resolves are stable within the same loop (no consideration of DNS TTL within a loop)");
			System.out.println("-dnsstatistic            ->> collect statistical data about DNS resolutions. Note: use this option only if not any other, more specific DNS option is enabled");
			System.out.println("-dnsdebug                ->> debug DNS resolves and the DNS cache");
			System.out.println("-enableIPv6 <networkinterface-name>  ->> enable only IPv6 support for recording, also can provide the IPv6 network interface of the load generator");
			System.out.println("-enableIPv6v4 <networkinterface-name> ->> enable both IPv6 and IPv4 (first will try with IPv6 ,if fails will try with IPv4 support for recording),also can provide the IPv6 network interface of the load generator");
			System.out.println();
			System.out.println("-dfl                     ->> debug execution steps of all failed loops to standard output");
			System.out.println("-dl                      ->> debug execution steps of all loops to standard output");
			System.out.println("-dh                      ->> debug HTTP protocol headers to standard output, includes the -dl option");
			System.out.println("-dc                      ->> debug HTTP content data to standard output, includes the -dl option");
			System.out.println("-dhc                     ->> debug HTTP protocol headers and HTTP content data to standard output, includes the -dl option");
			System.out.println("-dC                      ->> debug cookies to standard output, includes the -dl option");
			System.out.println("-dK                      ->> debug keep-alive (socket pool) to standard output, includes the -dl option");
			System.out.println("-dssl                    ->> debug SSL handshake (https) to standard output, includes the -dl and the -dK option");
			System.out.println();
			System.out.println("-tz <timezone>           ->> set time zone (see Application Reference Manual: supported time zones)");
			System.out.println("-dgs a|c                 ->> set number format (decimal group separator) a = '  c = ,");
			System.out.println("-annotation <text>       ->> adds an annotation for this test run");
			System.out.println();
			System.out.println("-execAgentHost <ip address or dns name>      ->> set the ip address or the dns name of the exec agent from which the license is used (default: 127.0.0.1)");
			System.out.println("-execAgentPort <port>                        ->> set the tcp/ip port of the exec agent (default: 7993)");
			System.out.println("-execAgentProtocol <plain | http | https>    ->> set the protocol of the exec agent (default: plain)");
			System.out.println("-execAgentUsername <string>                  ->> set the auth. username for the exec agent (default: [no username])");
			System.out.println("-execAgentPassword <string>                  ->> set the auth. password for the exec agent (default: [no password])");
			System.out.println();
			System.out.println("-h                       ->> display this help text");
			System.out.println("-help                    ->> display this help text");
			System.out.println();
			System.exit(-1);
		}
		
		System.out.println("+----------------------------------------------------------------+");
		System.out.println("| Welcome to the ZebraTester Load Test Program.                  |");
		System.out.println("| Additional help available with program argument \"-help\"        |");
		System.out.println("| Procedure Copyright by Ingenieurbuero David Fischer AG,        |");
		System.out.println("| a company of the Apica group. All rights reserved.             |");
		System.out.println("+----------------------------------------------------------------+");
		
		// check command line argument -ecc
		sslECC = (ParseArgs.hasOption(args, "-ecc"));       // enable ssl ecc ?
		
		// initialize ssl/https support
		SSLInit.execute(!ParseArgs.hasOption(args, "-iaikLast"), true);
		if (sslECC)
			SSLInit.enableECC();
		
		// check command line argument -nosni
		if (ParseArgs.hasOption(args, "-nosni"))            // disable ssl sni ?
			sslSNI = false;
		
		// check command line argument -snicritical
		if (ParseArgs.hasOption(args, "-snicritical"))      // set ssl sni as critical tls extension ?
			sslSNICirical = true;
		
		// set default character set for response content tests
		setCharEncoding(prxCharEncoding);
		
		// check command line argument -tz <timezone>
		String timeZoneString = ParseArgs.getString(args, "-tz");
		if (timeZoneString != null)
			defaultTimeZone = timeZoneString.toUpperCase(); // set time zone?
		ZoneTime.setDefaultTimeZone(defaultTimeZone);
		
		// check command line argument -dgs a|c
		String dgs = ParseArgs.getString(args, "-dgs");
		if (dgs != null)
		{
			if (dgs.equalsIgnoreCase("a"))
				defaultNumberGroupingSeparator = '\'';
			if (dgs.equalsIgnoreCase("c"))
				defaultNumberGroupingSeparator = ',';
		}
		Lib.setDefaultNumberGroupingSeparator(defaultNumberGroupingSeparator);
		
		// check command line argument -annotation <text>
		String testRunAnnotation = ParseArgs.getString(args, "-annotation");
		if (testRunAnnotation != null)
		{
			if (testRunAnnotation.startsWith("\"") && testRunAnnotation.endsWith("\""))
				testRunAnnotation = testRunAnnotation.substring(1, testRunAnnotation.length() - 1);
		}
		
		// check command line argument -ssl
		String newSslProtocolVersion = ParseArgs.getString(args, "-ssl");
		if (newSslProtocolVersion != null)
		{
			if (newSslProtocolVersion.equalsIgnoreCase("v2"))
				sslProtocolVersion = "v2";
			if (newSslProtocolVersion.equalsIgnoreCase("v3"))
				sslProtocolVersion = "v3";
			if (newSslProtocolVersion.equalsIgnoreCase("tls"))
				sslProtocolVersion = "tls";
			if (newSslProtocolVersion.equalsIgnoreCase("tls11"))
				sslProtocolVersion = "tls11";
			if (newSslProtocolVersion.equalsIgnoreCase("tls12"))
				sslProtocolVersion = "tls12";
		}
		
		// check command line argument -sslcache <seconds>
		Integer newSslSessionCacheTimeout = ParseArgs.getInteger(args, "-sslcache");
		if (newSslSessionCacheTimeout != null)
			sslSessionCacheTimeout = newSslSessionCacheTimeout.intValue();
		
		// check command line argument -sslrandom
		String sslHandshakeRandomGeneratorTypeStr = ParseArgs.getString(args, "-sslrandom");
		if (sslHandshakeRandomGeneratorTypeStr != null)
		{
			if (sslHandshakeRandomGeneratorTypeStr.equalsIgnoreCase("java"))
				sslHandshakeRandomGeneratorType = HttpSocketPool.SSL_HANDSHAKE_RANDOM_GENERATOR_TYPE_JAVA_DEFAULT;
			if (sslHandshakeRandomGeneratorTypeStr.equalsIgnoreCase("iaik"))
				sslHandshakeRandomGeneratorType = HttpSocketPool.SSL_HANDSHAKE_RANDOM_GENERATOR_TYPE_IAIK_DEFAULT;
			if (sslHandshakeRandomGeneratorTypeStr.equalsIgnoreCase("fast"))
				sslHandshakeRandomGeneratorType = HttpSocketPool.SSL_HANDSHAKE_RANDOM_GENERATOR_TYPE_FAST;
		}
		
		// check command line argument -sslcmode
		sslcmode = ParseArgs.hasOption(args, "-sslcmode");  // enable ssl/https compatibility workarounds?
		
		// check command line argument -dfl
		debugFailedLoops = ParseArgs.hasOption(args, "-dfl"); // debug failed loops?
		
		// check command line argument -dl
		debugLoops = ParseArgs.hasOption(args, "-dl");      // debug loops?
		
		// check command line argument -dh
		debugHttp = ParseArgs.hasOption(args, "-dh");       // debug http?
		if (debugHttp)
			debugLoops = true;
		
		// check command line argument -dc
		debugContent = ParseArgs.hasOption(args, "-dc");    // debug content?
		if (debugContent)
			debugLoops = true;
		
		// check command line argument -dhc
		if (ParseArgs.hasOption(args, "-dhc"))				// debug http and content
		{
			debugLoops = true;
			debugHttp = true;
			debugContent = true;
		}
		
		// check command line argument -dC
		debugCookies = ParseArgs.hasOption(args, "-dC");    // debug cookies?
		if (debugCookies)
			debugLoops = true;
		
		// check command line argument -dK
		debugKeepAlive = ParseArgs.hasOption(args, "-dK");  // debug keep.alive (socket pool)?
		if (debugKeepAlive)
			debugLoops = true;
		
		// check command line argument -dssl
		debugSsl = ParseArgs.hasOption(args, "-dssl");      // debug keep.alive (socket pool)?
		if (debugSsl)
		{
			debugLoops = true;
			debugKeepAlive = true;
		}
		
		// get startup delay
		Integer newStartupDelay = ParseArgs.getInteger(args, "-sdelay");
		if (newStartupDelay != null)
			plannedStartupDelay = newStartupDelay.intValue();
		
		// get max. parallel threads per user - note: only valid if CONTAINS_PARALLEL_EXECUTED_URLS = true
		Integer newMaxParallelThreadsPerUser = ParseArgs.getInteger(args, "-mtpu");
		if (newMaxParallelThreadsPerUser != null)
		{
			if (newMaxParallelThreadsPerUser.intValue() > 0)
				maxParallelThreadsPerUser = newMaxParallelThreadsPerUser.intValue();
		}
		// get maximum number of loops per user
		maxPlannedLoops = 0;  // maximum loops per user, 0 = unlimited
		Integer newLoops = ParseArgs.getInteger(args, "-maxloops");
		if (newLoops != null)
			maxPlannedLoops = newLoops.intValue();
		
		// get maximum downlink network bandwidth per user (default = unlimited)
		Integer newDownlinkBandwidth = ParseArgs.getInteger(args, "-downlink");
		if (newDownlinkBandwidth != null)
			downlinkBandwidth = newDownlinkBandwidth.intValue();
		
		// get maximum uplink network bandwidth per user (default = unlimited)
		Integer newUplinkBandwidth = ParseArgs.getInteger(args, "-uplink");
		if (newUplinkBandwidth != null)
			uplinkBandwidth = newUplinkBandwidth.intValue();
		
		// get statistic sampling interval
		int samplingInterval = 15;  // statistic sampling interval in seconds
		Integer newSamplingInterval = ParseArgs.getInteger(args, "-sampling");
		if (newSamplingInterval != null)
			samplingInterval = newSamplingInterval.intValue();
		
		// get additional sampling rate per web page call
		int percentilePageSampling = 100;  // additional sampling rate per web page call in percent
		Integer newPercentilePageSampling = ParseArgs.getInteger(args, "-percpage");
		if (newPercentilePageSampling != null)
			percentilePageSampling = newPercentilePageSampling.intValue();
		
		// get additional sampling rate per url call
		int percentileUrlSampling = 0;  // additional sampling rate per url call in percent
		Integer newPercentileUrlSampling = ParseArgs.getInteger(args, "-percurl");
		if (newPercentileUrlSampling != null)
			percentileUrlSampling = newPercentileUrlSampling.intValue();
		
		// get extended sampling level per url call
		int percentileUrlSamplingAddOption = 0;  // extended sampling level per url call, 0 = disabled
		Integer newPercentileUrlSamplingAddOption = ParseArgs.getInteger(args, "-percurlopt");
		if (newPercentileUrlSamplingAddOption != null)
			percentileUrlSamplingAddOption = newPercentileUrlSamplingAddOption.intValue();
		
		// get maximum number of error snapshots per URL (0 = unlimited)
		int maxErrorSnapshots = 0;
		Integer newMaxErrorSnapshots = ParseArgs.getInteger(args, "-maxerrsnap");
		if (newMaxErrorSnapshots != null)
			maxErrorSnapshots = newMaxErrorSnapshots.intValue();
		
		// get maximum memory in megabytes which can be used for error snapshots (-1 = unlimited, default = 10)
		long maxErrorSnapshotMemory = 20;
		Long newMaxErrorSnapshotMemory = ParseArgs.getLong(args, "-maxerrmem");
		if (newMaxErrorSnapshotMemory != null)
			maxErrorSnapshotMemory = newMaxErrorSnapshotMemory.longValue();
		
		// single user mode ?
		boolean singleUserMode = ParseArgs.hasOption(args, "-singleuser");
		
		// override value for http user agent field ?
		String setUserAgentStr = ParseArgs.getIgnoreCaseString(args, "-setuseragent");
		if (setUserAgentStr != null)
		{
			USER_AGENT_1 = setUserAgentStr;
		}
		// get required input arguments
		int concurrentUsers = 0;     // number of concurrent users
		plannedRequestTimeout = 0;   // request timeout in seconds
		
		System.out.println();
		
		// parse -u argument or ask --> <number of concurrent users>
		Integer i = ParseArgs.getIntegerOrAsk(args, "-u", "Concurrent Users, <RETURN>=1 : ", new Integer(1));
		if (i == null)
			System.exit(-1);
		else
			concurrentUsers = i.intValue();
		
		// parse -d argument or ask --> <test duration in seconds>
		i = ParseArgs.getIntegerOrAsk(args, "-d", "Test Duration in Seconds, <RETURN>=30 : ", new Integer(30));
		if (i == null)
			System.exit(-1);
		else
			plannedTestDuration = i.intValue();
		
		// parse -t argument or ask --> <request timeout in seconds>
		i = ParseArgs.getIntegerOrAsk(args, "-t", "HTTP Request Timeout per URL in Seconds, <RETURN>=60 : ", new Integer(60));
		if (i == null)
			System.exit(-1);
		else
			plannedRequestTimeout = i.intValue();
		
		// parse optional -tconnect argument (TCP/IP socket connect timeout in seconds)
		i = ParseArgs.getInteger(args, "-tconnect");
		if (i != null)
			plannedConnectTimeout = i.intValue();
		
		String genericFileName = PerformanceData.proposeFileName("longTest", concurrentUsers);
		
		// auto-configure binary result file
		if (!ParseArgs.hasOption(args, "-nores"))
		{
			String newResultFile = ParseArgs.getString(args, "-res");
			if (newResultFile == null)
				resultFile = genericFileName + ".prxres";
			else
				resultFile = newResultFile;
			System.out.println("Result File : " + resultFile);
		}
		
		// display common arguments at console output
		System.out.println();
		System.out.println("# concurrent users = " + concurrentUsers);
		System.out.println("# max. parallel threads per user = [serial execution order for all URLs]");
		System.out.print("# planned test duration = ");
		if (plannedTestDuration == 0)
			System.out.println("unlimited");
		else
			System.out.println("" + plannedTestDuration + " seconds");
		System.out.println("# http request timeout = " + plannedRequestTimeout + " seconds");
		if (plannedConnectTimeout != 0)
			System.out.println("# tcp/ip socket connect timeout = " + plannedConnectTimeout + " seconds");
		System.out.println("# startup delay = " + plannedStartupDelay + " milliseconds");
		System.out.println("# statistic sampling interval = " + samplingInterval + " seconds");
		System.out.println("# additional sampling rate per web page call = " + percentilePageSampling + " %");
		System.out.println("# additional sampling rate per url call = " + percentileUrlSampling + " %");
		System.out.println("# extended sampling per url call = " + PerformanceDataTickExtension.extTypeToString(percentileUrlSamplingAddOption).toLowerCase());
		System.out.print("# max loops per user = ");
		if (maxPlannedLoops == 0)
			System.out.println("unlimited");
		else
			System.out.println("" + maxPlannedLoops + " loops");
		if (downlinkBandwidth > 0)
			System.out.println("# max downlink bandwidth per user = " + downlinkBandwidth + " kbps");
		if (uplinkBandwidth > 0)
			System.out.println("# max uplink bandwidth per user = " + uplinkBandwidth + " kbps");
		System.out.println("# http protocol version = v" + httpProtocolVersion);
		System.out.println("# ssl protocol version = " + sslProtocolVersion);
		if (sslSessionCacheTimeout != 0)
			System.out.println("# ssl session cache timeout = " + sslSessionCacheTimeout + " seconds");
		else
			System.out.println("# ssl session cache disabled");
		if (resultFile != null)
			System.out.println("# result file = " + resultFile);
		else
			System.out.println("# no result file");
		if (debugFailedLoops)
			System.out.println("# debug failed loops");
		if (debugLoops)
			System.out.println("# debug loops");
		if (debugHttp)
			System.out.println("# debug http protocol headers");
		if (debugContent)
			System.out.println("# debug http content data");
		if (debugCookies)
			System.out.println("# debug cookies");
		if (debugKeepAlive)
			System.out.println("# debug keep-alive (socket pool)");
		if (debugSsl)
			System.out.println("# debug ssl (https)");
		
		
		// ----------------------------
		// *** initialize load test ***
		// ----------------------------
		
		
		// initialize performance data
		// ---------------------------
		final int PAGE_BREAKS = 1;  // number of page breaks in execute()  - modify this value if you add or delete some page breaks
		final int MAX_THREAD_STEPS = 504;  // number of URL requests in execute() - modify this value if you add or delete some requests
		performanceData = new PerformanceData(PAGE_BREAKS, MAX_THREAD_STEPS, concurrentUsers, -1, plannedTestDuration, maxPlannedLoops, httpProtocolVersion, plannedStartupDelay, plannedRequestTimeout, samplingInterval, percentilePageSampling, percentileUrlSampling, percentileUrlSamplingAddOption);
		performanceData.setInfoText("longTest");
		performanceData.setExecutorsAnnotation(testRunAnnotation);
		performanceData.setResultFileName(resultFile);
		performanceData.setDumpStream(System.out, "# ");
		performanceData.setMaxErrorSnapshots(maxErrorSnapshots);		// 0 = unlimited
		if (maxErrorSnapshotMemory >= 0)
			performanceData.setMaxErrorSnapshotsMemory(maxErrorSnapshotMemory * 1048576l);		// value in bytes
		
		if (sslECC)
			performanceData.addTestDescription("*** Warning: SSL/TLS option -ecc enabled ***");
		
		if ((downlinkBandwidth != 0) || (uplinkBandwidth != 0))
		{
			String downlinkBandwidthStr = "unlimited";
			String uplinkBandwidthStr = "unlimited";
			
			if (downlinkBandwidth != 0)
				downlinkBandwidthStr = "" + downlinkBandwidth + " kbps";
			if (uplinkBandwidth != 0)
				uplinkBandwidthStr = "" + uplinkBandwidth + " kbps";
			
			performanceData.addTestDescription("*** Warning: Max. network bandwidth per user limited. downlink = " + downlinkBandwidthStr + ", uplink = " + uplinkBandwidthStr + " ***");
		}
		
		if ((percentileUrlSamplingAddOption != PerformanceDataTickExtension.EXT_TYPE_NOTYPE) && (percentileUrlSampling > 0))
			performanceData.addTestDescription("*** Warning: Option \"" + PerformanceDataTickExtension.extTypeToString(percentileUrlSamplingAddOption).toLowerCase() + "\" enabled for additional sampling rate per URL call ***");
		if (debugFailedLoops)
			performanceData.addTestDescription("*** Warning: Debug failed loops enabled ***");
		if (debugLoops)
			performanceData.addTestDescription("*** Warning: Debug loops enabled ***");
		if (debugHttp)
			performanceData.addTestDescription("*** Warning: Debug HTTP protocol headers enabled ***");
		if (debugContent)
			performanceData.addTestDescription("*** Warning: Debug HTTP content data enabled ***");
		if (debugCookies)
			performanceData.addTestDescription("*** Warning: Debug cookies enabled ***");
		if (debugKeepAlive)
			performanceData.addTestDescription("*** Warning: Debug keep-alive enabled ***");
		if (debugSsl)
			performanceData.addTestDescription("*** Warning: Debug SSL/TLS enabled ***");
		if (!sslProtocolVersion.equalsIgnoreCase("all"))
			performanceData.addTestDescription("*** Warning: SSL/TLS protocol version fixed to " + sslProtocolVersion.toUpperCase() + " ***");
		if (sslSessionCacheTimeout == 0)
			performanceData.addTestDescription("*** Warning: SSL/TLS session cache disabled ***");
		if (singleUserMode)
		{
			String singleUserModeWarning = "*** Warning: Single user mode enabled ***";
			System.out.println(singleUserModeWarning);
			performanceData.addTestDescription(singleUserModeWarning);
		}
		if (setUserAgentStr != null)
		{
			String overrideUserAgentWarning = "*** Warning: User agent set to \"" + setUserAgentStr + "\" ***";
			System.out.println(overrideUserAgentWarning);
			performanceData.addTestDescription(overrideUserAgentWarning);
		}
		
		
		// ready to start load test...
		initNull(concurrentUsers);
		performanceData.setUserContextTable(getUserContextTable());
		
		// ... but init first remote interface ...
		initRemote(args);
		
		// ... and init plug-in class loader ...
		try
		{
			if (getPluginClassLoader() == null)
				setPluginClassLoader(new LoadtestPluginClassLoader(getSymmetricEncryptContext(), getEncryptedClasspathList()));
		}
		catch (Throwable pluginClassLoaderThrowable)
		{
			System.out.println("*** ERROR: Unable to load encrypted files ***");
			pluginClassLoaderThrowable.printStackTrace();
			System.exit(-1);
		}
		
		// ... and check multihomed option ...
		initMultihomed(args);
		
		// ... and add dynaTrace session ID to load test result - if available ...
		initDynaTrace();
		
		
		// use test-specific DNS hosts file (optional) ?
		String dnsHostsFile = ParseArgs.getIgnoreCaseString(args, "-dnshosts");
		if (dnsHostsFile != null)
		{
			try
			{
				dnsCache = new DNSCache(getSymmetricEncryptContext(), dnsHostsFile);
			}
			catch (IOException ie)
			{
				System.out.println("*** ERROR: unable to read DNS hosts file " + dnsHostsFile + " ***");
				System.out.println("*** Hint: you have to ZIP " + dnsHostsFile + " together with the compiled class of the load test program ***");
				ie.printStackTrace();
				System.exit(-1);
			}
		}
		
		// use test-specific DNS translation table (optional) ?
		String dnsTranslationTableFile = ParseArgs.getIgnoreCaseString(args, "-dnstranslation");
		if (dnsTranslationTableFile != null)
		{
			try
			{
				DNSTranslationTable dnsTranslationTable = new DNSTranslationTable(getSymmetricEncryptContext(), new File(dnsTranslationTableFile));
				if (dnsCache == null)
					dnsCache = new DNSCache();
				dnsCache.setDNSTranslationTable(dnsTranslationTable);
			}
			catch (IOException ie)
			{
				System.out.println("*** ERROR: unable to read DNS translation table file " + dnsTranslationTableFile + " ***");
				System.out.println("*** Hint: you have to ZIP " + dnsTranslationTableFile + " together with the compiled class of the load test program ***");
				ie.printStackTrace();
				System.exit(-1);
			}
		}
		
		// use test-specific DNS servers (optional) ?
		String dnsSrvStr = ParseArgs.getIgnoreCaseString(args, "-dnssrv");
		if (dnsSrvStr != null)
		{
			ArrayList<String> dnsSrvList = new ArrayList<String>();
			StringTokenizer dnsTok = new StringTokenizer(dnsSrvStr, ",;");
			while (dnsTok.hasMoreTokens())
				dnsSrvList.add(dnsTok.nextToken());
			if (dnsCache == null)
				dnsCache = new DNSCache(dnsSrvList);
			else
				dnsCache.setDnsServers(dnsSrvList);
		}
		
		// enable DNS TTL ?
		if (ParseArgs.hasOption(args, "-dnsenattl"))
		{
			if (dnsCache == null)
				dnsCache = new DNSCache();
			dnsCache.enableTTL();
		}
		
		// set fixed DNS TTL ?
		Integer dnsFixTTL = ParseArgs.getInteger(args, "-dnsfixttl");
		{
			if (dnsFixTTL != null)
			{
				if (dnsCache == null)
					dnsCache = new DNSCache();
				dnsCache.setFixedTTL(dnsFixTTL.intValue());
			}
		}
		
		// enable DNS resolves per loop ?
		if (ParseArgs.hasOption(args, "-dnsperloop"))
		{
			if (dnsCache == null)
				dnsCache = new DNSCache();
			dnsPerLoop = true;
		}
		
		// enable DNS statistic ?   // note: use this option only if not any other, more specific DNS option is enabled.
		if (ParseArgs.hasOption(args, "-dnsstatistic"))
		{
			if (dnsCache == null)
				dnsCache = new DNSCache();
		}
		
		// debug DNS resolver ?
		if (ParseArgs.hasOption(args, "-dnsdebug"))
		{
			if (dnsCache == null)
				dnsCache = new DNSCache();
			dnsCache.setDebugToStdout(true);
		}
		
		// enable IPv6 
		if (ParseArgs.hasIgnoreCaseOption(args, "-enableIPv6"))
		{
			if (dnsCache == null)
				dnsCache = new DNSCache();
			dnsCache.setEnableIPv6(true);
			String networkInterfaceName = ParseArgs.getString(args, "-enableIPv6");
			if(null != networkInterfaceName && !networkInterfaceName.startsWith("-"))
				dnsCache.setNetworkInterfaceName(networkInterfaceName);
		}
		
		// enable IPv6 and V4 
		if (ParseArgs.hasIgnoreCaseOption(args, "-enableIPv6v4"))
		{
			if (dnsCache == null)
				dnsCache = new DNSCache();
			dnsCache.setEnableIPv6v4(true);
			String networkInterfaceName = ParseArgs.getString(args, "-enableIPv6v4");
			if(null != networkInterfaceName && !networkInterfaceName.startsWith("-"))
				dnsCache.setNetworkInterfaceName(networkInterfaceName);
		}
		
		if (dnsCache != null)
		{
			// update performance data with DNS settings
			performanceData.addDNSCacheStatistic(dnsCache.getCacheStatistic());
			performanceData.addTestDescription("*** Warning: OS-independent DNS access enabled. " + dnsCache.getConfigInfoText() + " ***");
			if (dnsPerLoop)
				performanceData.addTestDescription("*** Warning: DNS option -dnsperloop enabled ***");
			
			// log DNS settings
			System.out.println("# OS-independent DNS access enabled. " + dnsCache.getConfigInfoText());
			if (dnsPerLoop)
				System.out.println("# DNS option -dnsperloop enabled");
		}
		
		// initialize file cache for large XML, SOAP and ASCII requests
		try
		{
			requestFileCache.readFile(getSymmetricEncryptContext(), REQUEST_FILE_CACHE_FILE_1);		// longTest_RequestContent0148.txt
			requestFileCache.readFile(getSymmetricEncryptContext(), REQUEST_FILE_CACHE_FILE_2);		// longTest_RequestContent0320.txt
			requestFileCache.readFile(getSymmetricEncryptContext(), REQUEST_FILE_CACHE_FILE_3);		// longTest_RequestContent0337.txt
			requestFileCache.readFile(getSymmetricEncryptContext(), REQUEST_FILE_CACHE_FILE_4);		// longTest_RequestContent0482.txt
		}
		catch (IOException ie)
		{
			System.out.println("*** ERROR: UNABLE TO OPEN DATA FILE FOR LARGE ASCII OR XML REQUEST ***");
			ie.printStackTrace();
			System.exit(-2);
		}
		
		// calculate sampling offset and virtual user startup offset for cluster jobs (time shift per cluster member)
		int samplingTimeshift = 0;	// value in seconds
		if (!ParseArgs.hasOption(args, "-nosdelayCluster"))
		{
			if ((getClusterTotalMemberCount() > 1) && (getClusterMemberLocalId() > 0))
			{
				samplingTimeshift = Math.round(((float) samplingInterval / (float) getClusterTotalMemberCount()) * (float) getClusterMemberLocalId());
				System.out.println("# samplingTimeshift = " + samplingTimeshift + " seconds");
				
				long startupDelayOffset = (plannedStartupDelay / ((long) getClusterTotalMemberCount())) * ((long) getClusterMemberLocalId());
				System.out.println("# startupDelayTimeshift = " + startupDelayOffset + " milliseconds");
				System.out.println();
				if (startupDelayOffset > 0)
				{
					try { sleepRemoteInterruptable(startupDelayOffset); } catch (InterruptedException ie) {}
				}
			}
		}
		
		
		// update performance data
		// -----------------------
		testDurationStart = System.currentTimeMillis();
		performanceData.setStartDate();
		performanceData.addSnapshot(getCpuUsagePercent());
		performanceData.setSnapshotsTimeshift(samplingTimeshift);
		performanceData.setEndDate();
		
		// initialize global context for plug-ins  
		LoadtestPluginContext globalPluginContext = new LoadtestPluginContext(prxVersion, prxCharEncoding, new longTest());
		
		
		// --------------------------
		// *** start of load test ***
		// ---------------------------
		
		
		// start virtual users as threads
		// ------------------------------
		for (int x = 0; x < concurrentUsers; x++)
		{
			// start load test thread
			// ----------------------
			Thread t = null;
			try
			{
				getUserContextTable().getWriteLock().lock();
				
				longTest simulatedUser = new longTest(maxPlannedLoops, plannedRequestTimeout, getUserContextTable().getUserContextList().size());
				t = new Thread(simulatedUser);
				String threadName = "" + getUserContextTable().getUserContextList().size();
				threadName = THREAD_NAME.substring(0, 7 - threadName.length()) + threadName;
				t.setName(threadName);
				if (debugLoops && (simulatedUser.getLog().size() > 0))
				{
					synchronized (dumpLock)
					{
						simulatedUser.dumpLog(threadName + " ", System.out);		// dump log of constructor
					}
				}
				HttpLoadTestUserContext userContext = new HttpLoadTestUserContext(simulatedUser, t);
				getUserContextTable().getUserContextList().add(userContext);
				simulatedUser.setOwnLoadTestUserContext(userContext);
			}
			finally
			{
				getUserContextTable().getWriteLock().unlock();
			}
			t.start();
			System.out.println("# --- thread " + t.getName() + " created --- " + ZoneTime.dateToShortString() + " ---");
			
			while (isSuspend())
			{
				try { Thread.currentThread().sleep(100); } catch (InterruptedException ie) { break; }
				if (abortedByRemote() || abortedByEofInputFile())
					break;
				
				// check if max test duration reached during suspend
				if ((plannedTestDuration > 0) && (((System.currentTimeMillis() - testDurationStart) / 1000) >= plannedTestDuration))
					break;
				
				// display and sample temporary performance data all "sampling interval" seconds - also during suspend
				if (((System.currentTimeMillis() - performanceData.getLastSnapshotTime()) / 1000) >= samplingInterval)
				{
					performanceData.addSnapshot(getCpuUsagePercent());
					performanceData.setEndDate();
				}
			}
			
			if (abortedByRemote() || abortedByEofInputFile())
				break;
			
			if ((plannedTestDuration > 0) && (((System.currentTimeMillis() - testDurationStart) / 1000) >= plannedTestDuration))
				break;
			
			// startup delay for next thread
			// -----------------------------
			try
			{
				if (!singleUserMode)   // create concurrent users
				{
					if (plannedStartupDelay <= 3000)
						sleepRemoteInterruptable(plannedStartupDelay);
					else
					{
						long startupDelayStartTime = System.currentTimeMillis();
						while (true)
						{
							if (abortedByRemote() || abortedByEofInputFile())
								break;
							if ((System.currentTimeMillis() - startupDelayStartTime) >= plannedStartupDelay)
								break;
							
							Thread.currentThread().sleep(100);
							
							// display and sample temporary performance data all "sampling interval" seconds
							if (((System.currentTimeMillis() - performanceData.getLastSnapshotTime()) / 1000) >= samplingInterval)
							{
								performanceData.addSnapshot(getCpuUsagePercent());
								performanceData.setEndDate();
							}
						}
					}
				}
				else
					t.join();   // single user mode
			}
			catch (InterruptedException ie) { break; }
			if (abortedByRemote() || abortedByEofInputFile())
				break;
			
			
			// display and sample temporary performance data all "sampling interval" seconds
			if (((System.currentTimeMillis() - performanceData.getLastSnapshotTime()) / 1000) >= samplingInterval)
			{
				performanceData.addSnapshot(getCpuUsagePercent());
				performanceData.setEndDate();
				if (!isRemote())
				{
					synchronized (dumpLock)
					{
						performanceData.dump(false);
					}
				}
			}
		}
		
		
		// wait for test-end in a loop
		// ---------------------------
		boolean allDone = false;
		while (!allDone)
		{
			// test aborted ?
			if (abortedByRemote() || abortedByEofInputFile())
			{
				nearRemoteEnd();
				String abort = "";
				if (abortedByRemote())
					abort = "*** test aborted by remote command ***";
				if (abortedByEofInputFile())
				{
					abort = "*** test aborted at eof of input file ***";
					performanceData.addTestDescription(abort);
				}
				synchronized (dumpLock)
				{
					addSSLCacheStatistic();
					performanceData.addSnapshot(getCpuUsagePercent());
					performanceData.setEndDate();
					
					if (!isRemote())
						performanceData.dump(false);
					if (resultFile != null)
						try { performanceData.writeObjectToFile(getSymmetricEncryptContext(), resultFile); } catch (IOException ie) { ie.printStackTrace(); }
					
					System.out.println();
					System.out.println(abort);
					System.out.println();
					System.out.flush();
					try { Thread.currentThread().sleep(10000); } catch (InterruptedException ie) {}
					System.exit(0);
				}
			}
			
			// display and sample temporary performance data all "sampling interval" seconds
			if (((System.currentTimeMillis() - performanceData.getLastSnapshotTime()) / 1000) >= samplingInterval)
			{
				performanceData.addSnapshot(getCpuUsagePercent());
				performanceData.setEndDate();
				if (!isRemote())
				{
					synchronized (dumpLock)
					{
						performanceData.dump(false);
					}
				}
			}
			
			// check if test has been done
			allDone = isTestDone();
			
			// if not all is done: sleep one second
			if (!allDone)
				try { sleepRemoteInterruptable(1000); } catch (InterruptedException ie) { break; }
		} // end of wait loop
		
		
		// mark near end of test - only if a remote interface has been used
		nearRemoteEnd();
		
		
		
		// final test result - test completed
		// ----------------------------------
		performanceData.addSnapshot(getCpuUsagePercent());
		performanceData.setEndDate();
		
		// save test result
		performanceData.dump(true);
		if (resultFile != null)
			try { performanceData.writeObjectToFile(getSymmetricEncryptContext(), resultFile); } catch (IOException ie) { ie.printStackTrace(); }
		
		// all done
		System.out.flush();
		
		// wait for official end of test - only if a remote interface has been used
		waitRemoteEnd();
		
		System.out.println();
		System.out.println("Result File: " + resultFile);
		
		// now dead
		System.exit(0);
	}


	/**
	 * implement VaryingLoadInterface: support to increment the number of simulated users at runtime.
	 */
	public void setIncrementUser(long startTime)
	{
		incrementUserStartTime = startTime;
		incrementUserFlag = true;
	}

	public boolean isIncrementUser()
	{
		return incrementUserFlag;
	}

	public long getIncrementUserStartTime()
	{
		return incrementUserStartTime;
	}

	public void setIncrementUserStartTime(long startTime)
	{
		incrementUserStartTime = startTime;
	}

	public void clearIncrementUser()
	{
		incrementUserFlag = false;
	}

	public int incrementUsers(int numAddUsers, long startupDelay)
	{
		if (startupDelay < 0)
			startupDelay = plannedStartupDelay;
		return incrementUsersImplementation(numAddUsers, startupDelay, this);
	}

	static int incrementUsersImplementation(int numAddUsers, long startupDelay, HttpLoadTest httpLoadTest)
	{
		long startupDelayOffset = 0;
		if ((getClusterTotalMemberCount() > 1) && (getClusterMemberLocalId() > 0))
			startupDelayOffset = (startupDelay / ((long) getClusterTotalMemberCount())) * ((long) getClusterMemberLocalId());
		
		ArrayList<HttpLoadTestUserContext> addUserContextList = new ArrayList<HttpLoadTestUserContext>(numAddUsers);
		for (int x = 0; x < numAddUsers; x++)
		{
			if (abortedByRemote() || abortedByEofInputFile())
				return x;
			
			// initialize load test thread
			// ---------------------------
			try
			{
				getUserContextTable().getWriteLock().lock();
				
				longTest simulatedUser = new longTest(maxPlannedLoops, plannedRequestTimeout, getUserContextTable().getUserContextList().size());
				HttpLoadTestUserContext userContext = prepareIncrementUser(simulatedUser, System.currentTimeMillis() + startupDelayOffset + (x * startupDelay));
				addUserContextList.add(userContext);
				simulatedUser.setOwnLoadTestUserContext(userContext);
				if (debugLoops && (simulatedUser.getLog().size() > 0))
				{
					synchronized (dumpLock)
					{
						simulatedUser.dumpLog(userContext.getLoadTestThread().getName() + " ", System.out);		// dump log of constructor
					}
				}
			}
			finally
			{
				getUserContextTable().getWriteLock().unlock();
			}
		}
		
		// start load test threads by a thread
		// -----------------------------------
		HttpLoadTestIncrementUserThread incrementUserThread = new HttpLoadTestIncrementUserThread(httpLoadTest, addUserContextList);
		incrementUserThread.start();
		return numAddUsers;
	}



	// definition for external files used to support large XML, SOAP and ASCII requests
	// --------------------------------------------------------------------------------
	public static final String REQUEST_FILE_CACHE_FILE_1 = "longTest_RequestContent0148.txt";		// must be zipped together with the compiled class of this load test program
	public static final String REQUEST_FILE_CACHE_FILE_2 = "longTest_RequestContent0320.txt";		// must be zipped together with the compiled class of this load test program
	public static final String REQUEST_FILE_CACHE_FILE_3 = "longTest_RequestContent0337.txt";		// must be zipped together with the compiled class of this load test program
	public static final String REQUEST_FILE_CACHE_FILE_4 = "longTest_RequestContent0482.txt";		// must be zipped together with the compiled class of this load test program
	

}	// end of class

